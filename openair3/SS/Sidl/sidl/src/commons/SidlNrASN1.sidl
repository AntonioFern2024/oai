/*
 * Copyright 2022 Sequans Communications.
 *
 * Licensed to the OpenAirInterface (OAI) Software Alliance under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The OpenAirInterface Software Alliance licenses this file to You under
 * the OAI Public License, Version 1.0  (the "License"); you may not use this file
 * except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.openairinterface.org/?page_id=698
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * For more information about the OpenAirInterface (OAI) Software Alliance:
 *      contact@openairinterface.org
 */

#pragma once

// Main SIDL includes and SidlASN1 defs.
#include "SidlASN1Base.sidl"

typedef BIT_STRING_ELEMENT B1[1];
typedef BIT_STRING_ELEMENT B2[2];
typedef BIT_STRING_ELEMENT B3[3];
typedef BIT_STRING_ELEMENT B4[4];
typedef BIT_STRING_ELEMENT B5[5];
typedef BIT_STRING_ELEMENT B6[6];
typedef BIT_STRING_ELEMENT B7[7];
typedef BIT_STRING_ELEMENT B8[8];
typedef BIT_STRING_ELEMENT B10[10];
typedef BIT_STRING_ELEMENT B12[12];
typedef BIT_STRING_ELEMENT B14[14];
typedef BIT_STRING_ELEMENT B16[16];
typedef BIT_STRING_ELEMENT B18[18];
typedef BIT_STRING_ELEMENT B20[20];
typedef BIT_STRING_ELEMENT B24[24];
typedef BIT_STRING_ELEMENT B28[28];
typedef BIT_STRING_ELEMENT B32[32];
typedef BIT_STRING_ELEMENT B36[36];
typedef BIT_STRING_ELEMENT B40[40];
typedef BIT_STRING_ELEMENT B44[44];
typedef BIT_STRING_ELEMENT B45[45];
typedef BIT_STRING_ELEMENT B48[48];
typedef BIT_STRING_ELEMENT B64[64];
typedef BIT_STRING_ELEMENT B275[275];

typedef OCTET_STRING_ELEMENT O1[1];
typedef OCTET_STRING_ELEMENT O2[2];

typedef uint32_t ASN_NR_NAME(ARFCN_ValueNR); // OF (0..3279165)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, subCarrierSpacingCommon)), scs15or60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, subCarrierSpacingCommon)), scs30or120)
} ASN_ENUM(ASN_NR_NAME(MIB, subCarrierSpacingCommon));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, dmrs_TypeA_Position)), pos2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, dmrs_TypeA_Position)), pos3)
} ASN_ENUM(ASN_NR_NAME(MIB, dmrs_TypeA_Position));

typedef uint8_t ASN_NR_NAME(ControlResourceSetZero); // OF (0..15)

typedef uint8_t ASN_NR_NAME(SearchSpaceZero); // OF (0..15)

struct ASN_NR_NAME(PDCCH_ConfigSIB1) {
	ASN_NR_NAME(ControlResourceSetZero) controlResourceSetZero;
	ASN_NR_NAME(SearchSpaceZero) searchSpaceZero;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, cellBarred)), barred),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, cellBarred)), notBarred)
} ASN_ENUM(ASN_NR_NAME(MIB, cellBarred));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, intraFreqReselection)), allowed),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MIB, intraFreqReselection)), notAllowed)
} ASN_ENUM(ASN_NR_NAME(MIB, intraFreqReselection));

struct ASN_NR_NAME(MIB) {
	B6 systemFrameNumber; // SIZE (6)
	ASN_ENUM(ASN_NR_NAME(MIB, subCarrierSpacingCommon)) subCarrierSpacingCommon;
	uint8_t ssb_SubcarrierOffset; // OF (0..15)
	ASN_ENUM(ASN_NR_NAME(MIB, dmrs_TypeA_Position)) dmrs_TypeA_Position;
	struct ASN_NR_NAME(PDCCH_ConfigSIB1) pdcch_ConfigSIB1;
	ASN_ENUM(ASN_NR_NAME(MIB, cellBarred)) cellBarred;
	ASN_ENUM(ASN_NR_NAME(MIB, intraFreqReselection)) intraFreqReselection;
	B1 spare; // SIZE (1)
};

struct ASN_NR_NAME(BCCH_BCH_MessageType, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(BCCH_BCH_MessageType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_BCH_MessageType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_BCH_MessageType), mib),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_BCH_MessageType), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(BCCH_BCH_MessageType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_BCH_MessageType)_mib)
		struct ASN_NR_NAME(MIB) mib;
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_BCH_MessageType)_messageClassExtension)
		struct ASN_NR_NAME(BCCH_BCH_MessageType, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NR_NAME(BCCH_BCH_Message) {
	struct ASN_NR_NAME(BCCH_BCH_MessageType) message;
};

typedef uint8_t ASN_NR_NAME(RSRP_Range); // OF (0..127)

typedef uint8_t ASN_NR_NAME(RSRQ_Range); // OF (0..127)

typedef uint8_t ASN_NR_NAME(SINR_Range); // OF (0..127)

struct ASN_NR_NAME(ThresholdNR) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ThresholdNR), ASN_NR_NAME(RSRP_Range), thresholdRSRP);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ThresholdNR), ASN_NR_NAME(RSRQ_Range), thresholdRSRQ);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ThresholdNR), ASN_NR_NAME(SINR_Range), thresholdSINR);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), dB24)
} ASN_ENUM(ASN_NR_NAME(Q_OffsetRange));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)), dB24)
} ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), s180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)), spare1)
} ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), s180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)), spare1)
} ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal));

struct ASN_NR_NAME(MobilityStateParameters) {
	ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_Evaluation)) t_Evaluation;
	ASN_ENUM(ASN_NR_NAME(MobilityStateParameters, t_HystNormal)) t_HystNormal;
	uint8_t n_CellChangeMedium; // OF (1..16)
	uint8_t n_CellChangeHigh; // OF (1..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)), dB0)
} ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)), dB0)
} ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High));

struct ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF) {
	ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_Medium)) sf_Medium;
	ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF, sf_High)) sf_High;
};

struct ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars) {
	struct ASN_NR_NAME(MobilityStateParameters) mobilityStateParameters;
	struct ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars, q_HystSF) q_HystSF;
};

struct ASN_NR_NAME(SIB2, cellReselectionInfoCommon) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionInfoCommon), uint8_t, nrofSS_BlocksToAverage); // OF (2..16)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionInfoCommon), ASN_NR_NAME(ThresholdNR), absThreshSS_BlocksConsolidation);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionInfoCommon), ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), rangeToBestCell);
	ASN_ENUM(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, q_Hyst)) q_Hyst;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB2, cellReselectionInfoCommon, speedStateReselectionPars), speedStateReselectionPars);
};

typedef uint8_t ASN_NR_NAME(ReselectionThreshold); // OF (0..31)

typedef uint8_t ASN_NR_NAME(ReselectionThresholdQ); // OF (0..31)

typedef uint8_t ASN_NR_NAME(CellReselectionPriority); // OF (0..7)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), oDot2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), oDot4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), oDot6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), oDot8)
} ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority));

struct ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo), ASN_NR_NAME(ReselectionThreshold), s_NonIntraSearchP);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo), ASN_NR_NAME(ReselectionThresholdQ), s_NonIntraSearchQ);
	ASN_NR_NAME(ReselectionThreshold) threshServingLowP;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo), ASN_NR_NAME(ReselectionThresholdQ), threshServingLowQ);
	ASN_NR_NAME(CellReselectionPriority) cellReselectionPriority;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo), ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), cellReselectionSubPriority);
};

typedef int8_t ASN_NR_NAME(Q_RxLevMin); // OF (-70..-22)

typedef int8_t ASN_NR_NAME(Q_QualMin); // OF (-43..-12)

typedef uint8_t ASN_NR_NAME(T_Reselection); // OF (0..7)

typedef uint16_t ASN_NR_NAME(FreqBandIndicatorNR); // OF (1..1024)

typedef int8_t ASN_NR_NAME(P_Max); // OF (-30..33)

typedef uint8_t ASN_NR_NAME(AdditionalSpectrumEmission); // OF (0..7)

struct ASN_NR_NAME(NR_NS_PmaxValue) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(NR_NS_PmaxValue), ASN_NR_NAME(P_Max), additionalPmax);
	ASN_NR_NAME(AdditionalSpectrumEmission) additionalSpectrumEmission;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(NR_NS_PmaxValue), ASN_NR_NAME(NR_NS_PmaxList)); // SIZE (1..8)

struct ASN_NR_NAME(NR_MultiBandInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(NR_MultiBandInfo), ASN_NR_NAME(FreqBandIndicatorNR), freqBandIndicatorNR);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(NR_MultiBandInfo), ASN_NR_NAME(NR_NS_PmaxList), nr_NS_PmaxList);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(NR_MultiBandInfo), ASN_NR_NAME(MultiFrequencyBandListNR_SIB)); // SIZE (1..8)

SIDL_UNION_ENUM(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf5),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf10),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf20),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf40),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf80),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_MTC, periodicityAndOffset), sf160)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf5)
		uint8_t sf5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf10)
		uint8_t sf10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf20)
		uint8_t sf20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf40)
		uint8_t sf40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf80)
		uint8_t sf80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_MTC, periodicityAndOffset)_sf160)
		uint8_t sf160; // OF (0..159)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)), sf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)), sf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)), sf3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)), sf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)), sf5)
} ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration));

struct ASN_NR_NAME(SSB_MTC) {
	struct ASN_NR_NAME(SSB_MTC, periodicityAndOffset) periodicityAndOffset;
	ASN_ENUM(ASN_NR_NAME(SSB_MTC, duration)) duration;
};

struct ASN_NR_NAME(SS_RSSI_Measurement) {
	BIT_STRING measurementSlots; // SIZE (1..80)
	uint8_t endSymbol; // OF (0..3)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SSB_ToMeasure)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_ToMeasure), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_ToMeasure), shortBitmap),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_ToMeasure), mediumBitmap),
	ASN_ENUM_VAL(ASN_NR_NAME(SSB_ToMeasure), longBitmap)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SSB_ToMeasure)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_ToMeasure)_shortBitmap)
		B4 shortBitmap; // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_ToMeasure)_mediumBitmap)
		B8 mediumBitmap; // SIZE (8)
	SIDL_UNION_CASE(ASN_NR_NAME(SSB_ToMeasure)_longBitmap)
		B64 longBitmap; // SIZE (64)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium)), oDot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium)), oDot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium)), oDot75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium)), lDot0)
} ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High)), oDot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High)), oDot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High)), oDot75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High)), lDot0)
} ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High));

struct ASN_NR_NAME(SpeedStateScaleFactors) {
	ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_Medium)) sf_Medium;
	ASN_ENUM(ASN_NR_NAME(SpeedStateScaleFactors, sf_High)) sf_High;
};

typedef uint16_t ASN_NR_NAME(PhysCellId); // OF (0..1007)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)), spare1)
} ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity));

struct ASN_NR_NAME(SSB_MTC2_LP_r16) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SSB_MTC2_LP_r16), ASN_NR_NAME(PhysCellId), pci_List); // SIZE (1..64)
	ASN_ENUM(ASN_NR_NAME(SSB_MTC2_LP_r16, periodicity)) periodicity;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), n8)
} ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16));

struct ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo) {
	ASN_NR_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(Q_RxLevMin), q_RxLevMinSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(Q_QualMin), q_QualMin);
	ASN_NR_NAME(ReselectionThreshold) s_IntraSearchP;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(ReselectionThresholdQ), s_IntraSearchQ);
	ASN_NR_NAME(T_Reselection) t_ReselectionNR;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(MultiFrequencyBandListNR_SIB), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(MultiFrequencyBandListNR_SIB), frequencyBandListSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(P_Max), p_Max);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(SSB_MTC), smtc);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(SS_RSSI_Measurement), ss_RSSI_Measurement);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(SSB_ToMeasure), ssb_ToMeasure);
	bool deriveSSB_IndexFromCell;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(SpeedStateScaleFactors), t_ReselectionNR_SF);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_NR_NAME(SSB_MTC2_LP_r16), smtc2_LP_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo), ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), ssb_PositionQCL_Common_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), dB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)), spare1)
} ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), s300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)), spare1)
} ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16));

struct ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16) {
	ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, s_SearchDeltaP_r16)) s_SearchDeltaP_r16;
	ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16, t_SearchDeltaP_r16)) t_SearchDeltaP_r16;
};

struct ASN_NR_NAME(SIB2, relaxedMeasurement_r16, cellEdgeEvaluation_r16) {
	ASN_NR_NAME(ReselectionThreshold) s_SearchThresholdP_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, cellEdgeEvaluation_r16), ASN_NR_NAME(ReselectionThresholdQ), s_SearchThresholdQ_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, combineRelaxedMeasCondition_r16)), true)
} ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, combineRelaxedMeasCondition_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, highPriorityMeasRelax_r16)), true)
} ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, highPriorityMeasRelax_r16));

struct ASN_NR_NAME(SIB2, relaxedMeasurement_r16) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, lowMobilityEvaluation_r16), lowMobilityEvaluation_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, cellEdgeEvaluation_r16), cellEdgeEvaluation_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, combineRelaxedMeasCondition_r16)), combineRelaxedMeasCondition_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB2, relaxedMeasurement_r16, highPriorityMeasRelax_r16)), highPriorityMeasRelax_r16);
};

struct ASN_NR_NAME(SIB2) {
	struct ASN_NR_NAME(SIB2, cellReselectionInfoCommon) cellReselectionInfoCommon;
	struct ASN_NR_NAME(SIB2, cellReselectionServingFreqInfo) cellReselectionServingFreqInfo;
	struct ASN_NR_NAME(SIB2, intraFreqCellReselectionInfo) intraFreqCellReselectionInfo;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB2, relaxedMeasurement_r16), relaxedMeasurement_r16);
};

struct ASN_NR_NAME(IntraFreqNeighCellInfo) {
	ASN_NR_NAME(PhysCellId) physCellId;
	ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)) q_OffsetCell;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(IntraFreqNeighCellInfo), uint8_t, q_RxLevMinOffsetCell); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(IntraFreqNeighCellInfo), uint8_t, q_RxLevMinOffsetCellSUL); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(IntraFreqNeighCellInfo), uint8_t, q_QualMinOffsetCell); // OF (1..8)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(IntraFreqNeighCellInfo), ASN_NR_NAME(IntraFreqNeighCellList)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n84),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n168),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n252),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), n1008),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), spare1)
} ASN_ENUM(ASN_NR_NAME(PCI_Range, range));

struct ASN_NR_NAME(PCI_Range) {
	ASN_NR_NAME(PhysCellId) start;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PCI_Range, range)), range);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PCI_Range), ASN_NR_NAME(IntraFreqBlackCellList)); // SIZE (1..16)

struct ASN_NR_NAME(IntraFreqNeighCellInfo_v1610) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(IntraFreqNeighCellInfo_v1610), ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), ssb_PositionQCL_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(IntraFreqNeighCellInfo_v1610), ASN_NR_NAME(IntraFreqNeighCellList_v1610)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PCI_Range), ASN_NR_NAME(IntraFreqWhiteCellList_r16)); // SIZE (1..16)

struct ASN_NR_NAME(IntraFreqCAG_CellListPerPLMN_r16) {
	uint8_t plmn_IdentityIndex_r16; // OF (1..12)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(IntraFreqCAG_CellListPerPLMN_r16), ASN_NR_NAME(PCI_Range), cag_CellList_r16); // SIZE (1..16)
};

struct ASN_NR_NAME(SIB3) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB3), ASN_NR_NAME(IntraFreqNeighCellList), intraFreqNeighCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB3), ASN_NR_NAME(IntraFreqBlackCellList), intraFreqBlackCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB3), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB3), ASN_NR_NAME(IntraFreqNeighCellList_v1610), intraFreqNeighCellList_v1610);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB3), ASN_NR_NAME(IntraFreqWhiteCellList_r16), intraFreqWhiteCellList_r16);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB3), ASN_NR_NAME(IntraFreqCAG_CellListPerPLMN_r16), intraFreqCAG_CellList_r16); // SIZE (1..12)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), kHz15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), kHz30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), kHz60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), kHz120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), kHz240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), spare1)
} ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing));

struct ASN_NR_NAME(InterFreqCarrierFreqInfo, threshX_Q) {
	ASN_NR_NAME(ReselectionThresholdQ) threshX_HighQ;
	ASN_NR_NAME(ReselectionThresholdQ) threshX_LowQ;
};

struct ASN_NR_NAME(InterFreqNeighCellInfo) {
	ASN_NR_NAME(PhysCellId) physCellId;
	ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)) q_OffsetCell;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqNeighCellInfo), uint8_t, q_RxLevMinOffsetCell); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqNeighCellInfo), uint8_t, q_RxLevMinOffsetCellSUL); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqNeighCellInfo), uint8_t, q_QualMinOffsetCell); // OF (1..8)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(InterFreqNeighCellInfo), ASN_NR_NAME(InterFreqNeighCellList)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PCI_Range), ASN_NR_NAME(InterFreqBlackCellList)); // SIZE (1..16)

struct ASN_NR_NAME(InterFreqCarrierFreqInfo) {
	ASN_NR_NAME(ARFCN_ValueNR) dl_CarrierFreq;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(MultiFrequencyBandListNR_SIB), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(MultiFrequencyBandListNR_SIB), frequencyBandListSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), uint8_t, nrofSS_BlocksToAverage); // OF (2..16)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(ThresholdNR), absThreshSS_BlocksConsolidation);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(SSB_MTC), smtc);
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) ssbSubcarrierSpacing;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(SSB_ToMeasure), ssb_ToMeasure);
	bool deriveSSB_IndexFromCell;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(SS_RSSI_Measurement), ss_RSSI_Measurement);
	ASN_NR_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(Q_RxLevMin), q_RxLevMinSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(Q_QualMin), q_QualMin);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(P_Max), p_Max);
	ASN_NR_NAME(T_Reselection) t_ReselectionNR;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(SpeedStateScaleFactors), t_ReselectionNR_SF);
	ASN_NR_NAME(ReselectionThreshold) threshX_HighP;
	ASN_NR_NAME(ReselectionThreshold) threshX_LowP;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(InterFreqCarrierFreqInfo, threshX_Q), threshX_Q);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(CellReselectionPriority), cellReselectionPriority);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), cellReselectionSubPriority);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_ENUM(ASN_NR_NAME(Q_OffsetRange)), q_OffsetFreq);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(InterFreqNeighCellList), interFreqNeighCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(InterFreqBlackCellList), interFreqBlackCellList);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(InterFreqCarrierFreqInfo), ASN_NR_NAME(InterFreqCarrierFreqList)); // SIZE (1..8)

struct ASN_NR_NAME(InterFreqNeighCellInfo_v1610) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqNeighCellInfo_v1610), ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), ssb_PositionQCL_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(InterFreqNeighCellInfo_v1610), ASN_NR_NAME(InterFreqNeighCellList_v1610)); // SIZE (1..16)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PCI_Range), ASN_NR_NAME(InterFreqWhiteCellList_r16)); // SIZE (1..16)

struct ASN_NR_NAME(InterFreqCAG_CellListPerPLMN_r16) {
	uint8_t plmn_IdentityIndex_r16; // OF (1..12)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCAG_CellListPerPLMN_r16), ASN_NR_NAME(PCI_Range), cag_CellList_r16); // SIZE (1..16)
};

struct ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NR_NAME(InterFreqNeighCellList_v1610), interFreqNeighCellList_v1610);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NR_NAME(SSB_MTC2_LP_r16), smtc2_LP_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NR_NAME(InterFreqWhiteCellList_r16), interFreqWhiteCellList_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_ENUM(ASN_NR_NAME(SSB_PositionQCL_Relation_r16)), ssb_PositionQCL_Common_r16);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NR_NAME(InterFreqCAG_CellListPerPLMN_r16), interFreqCAG_CellList_r16); // SIZE (1..12)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(InterFreqCarrierFreqInfo_v1610), ASN_NR_NAME(InterFreqCarrierFreqList_v1610)); // SIZE (1..8)

struct ASN_NR_NAME(SIB4) {
	ASN_NR_NAME(InterFreqCarrierFreqList) interFreqCarrierFreqList;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB4), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB4), ASN_NR_NAME(InterFreqCarrierFreqList_v1610), interFreqCarrierFreqList_v1610);
};

typedef uint32_t ASN_NR_NAME(ARFCN_ValueEUTRA); // OF (0..262143)

typedef uint16_t ASN_NR_NAME(FreqBandIndicatorEUTRA); // OF (1..256)

struct ASN_NR_NAME(EUTRA_NS_PmaxValue) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(EUTRA_NS_PmaxValue), int8_t, additionalPmax); // OF (-30..33)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(EUTRA_NS_PmaxValue), uint16_t, additionalSpectrumEmission); // OF (1..288)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_NS_PmaxValue), ASN_NR_NAME(EUTRA_NS_PmaxList)); // SIZE (1..8)

struct ASN_NR_NAME(EUTRA_MultiBandInfo) {
	ASN_NR_NAME(FreqBandIndicatorEUTRA) eutra_FreqBandIndicator;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(EUTRA_MultiBandInfo), ASN_NR_NAME(EUTRA_NS_PmaxList), eutra_NS_PmaxList);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_MultiBandInfo), ASN_NR_NAME(EUTRA_MultiBandInfoList)); // SIZE (1..8)

typedef uint16_t ASN_NR_NAME(EUTRA_PhysCellId); // OF (0..503)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)), dB24)
} ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange));

struct ASN_NR_NAME(EUTRA_FreqNeighCellInfo) {
	ASN_NR_NAME(EUTRA_PhysCellId) physCellId;
	ASN_ENUM(ASN_NR_NAME(EUTRA_Q_OffsetRange)) dummy;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(EUTRA_FreqNeighCellInfo), uint8_t, q_RxLevMinOffsetCell); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(EUTRA_FreqNeighCellInfo), uint8_t, q_QualMinOffsetCell); // OF (1..8)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_FreqNeighCellInfo), ASN_NR_NAME(EUTRA_FreqNeighCellList)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n84),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n168),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n252),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), n504),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), spare1)
} ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range));

struct ASN_NR_NAME(EUTRA_PhysCellIdRange) {
	ASN_NR_NAME(EUTRA_PhysCellId) start;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(EUTRA_PhysCellIdRange, range)), range);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_PhysCellIdRange), ASN_NR_NAME(EUTRA_FreqBlackCellList)); // SIZE (1..16)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)), mbw100)
} ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth));

typedef bool ASN_NR_NAME(EUTRA_PresenceAntennaPort1);

struct ASN_NR_NAME(CarrierFreqEUTRA, threshX_Q) {
	ASN_NR_NAME(ReselectionThresholdQ) threshX_HighQ;
	ASN_NR_NAME(ReselectionThresholdQ) threshX_LowQ;
};

struct ASN_NR_NAME(CarrierFreqEUTRA) {
	ASN_NR_NAME(ARFCN_ValueEUTRA) carrierFreq;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CarrierFreqEUTRA), ASN_NR_NAME(EUTRA_MultiBandInfoList), eutra_multiBandInfoList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CarrierFreqEUTRA), ASN_NR_NAME(EUTRA_FreqNeighCellList), eutra_FreqNeighCellList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CarrierFreqEUTRA), ASN_NR_NAME(EUTRA_FreqBlackCellList), eutra_BlackCellList);
	ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)) allowedMeasBandwidth;
	ASN_NR_NAME(EUTRA_PresenceAntennaPort1) presenceAntennaPort1;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CarrierFreqEUTRA), ASN_NR_NAME(CellReselectionPriority), cellReselectionPriority);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CarrierFreqEUTRA), ASN_ENUM(ASN_NR_NAME(CellReselectionSubPriority)), cellReselectionSubPriority);
	ASN_NR_NAME(ReselectionThreshold) threshX_High;
	ASN_NR_NAME(ReselectionThreshold) threshX_Low;
	int8_t q_RxLevMin; // OF (-70..-22)
	int8_t q_QualMin; // OF (-34..-3)
	int8_t p_MaxEUTRA; // OF (-30..33)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(CarrierFreqEUTRA, threshX_Q), threshX_Q);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(CarrierFreqEUTRA), ASN_NR_NAME(CarrierFreqListEUTRA)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CarrierFreqEUTRA_v1610, highSpeedEUTRACarrier_r16)), true)
} ASN_ENUM(ASN_NR_NAME(CarrierFreqEUTRA_v1610, highSpeedEUTRACarrier_r16));

struct ASN_NR_NAME(CarrierFreqEUTRA_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CarrierFreqEUTRA_v1610, highSpeedEUTRACarrier_r16)), highSpeedEUTRACarrier_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(CarrierFreqEUTRA_v1610), ASN_NR_NAME(CarrierFreqListEUTRA_v1610)); // SIZE (1..8)

struct ASN_NR_NAME(SIB5) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB5), ASN_NR_NAME(CarrierFreqListEUTRA), carrierFreqListEUTRA);
	ASN_NR_NAME(T_Reselection) t_ReselectionEUTRA;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB5), ASN_NR_NAME(SpeedStateScaleFactors), t_ReselectionEUTRA_SF);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB5), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB5), ASN_NR_NAME(CarrierFreqListEUTRA_v1610), carrierFreqListEUTRA_v1610);
};

struct ASN_NR_NAME(SIB6) {
	B16 messageIdentifier; // SIZE (16)
	B16 serialNumber; // SIZE (16)
	O2 warningType; // SIZE (2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB6), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB7, warningMessageSegmentType)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB7, warningMessageSegmentType)), lastSegment)
} ASN_ENUM(ASN_NR_NAME(SIB7, warningMessageSegmentType));

struct ASN_NR_NAME(SIB7) {
	B16 messageIdentifier; // SIZE (16)
	B16 serialNumber; // SIZE (16)
	ASN_ENUM(ASN_NR_NAME(SIB7, warningMessageSegmentType)) warningMessageSegmentType;
	uint8_t warningMessageSegmentNumber; // OF (0..63)
	OCTET_STRING warningMessageSegment;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB7), O1, dataCodingScheme); // SIZE (1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB7), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB8, warningMessageSegmentType)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB8, warningMessageSegmentType)), lastSegment)
} ASN_ENUM(ASN_NR_NAME(SIB8, warningMessageSegmentType));

struct ASN_NR_NAME(SIB8) {
	B16 messageIdentifier; // SIZE (16)
	B16 serialNumber; // SIZE (16)
	ASN_ENUM(ASN_NR_NAME(SIB8, warningMessageSegmentType)) warningMessageSegmentType;
	uint8_t warningMessageSegmentNumber; // OF (0..63)
	OCTET_STRING warningMessageSegment;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB8), O1, dataCodingScheme); // SIZE (1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB8), OCTET_STRING, warningAreaCoordinatesSegment);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB8), OCTET_STRING, lateNonCriticalExtension);
};

struct ASN_NR_NAME(SIB9, timeInfo) {
	uint64_t timeInfoUTC; // OF (0..549755813887)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB9, timeInfo), B2, dayLightSavingTime); // SIZE (2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB9, timeInfo), int16_t, leapSeconds); // OF (-127..128)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB9, timeInfo), int8_t, localTimeOffset); // OF (-63..64)
};

struct ASN_NR_NAME(ReferenceTime_r16) {
	uint32_t refDays_r16; // OF (0..72999)
	uint32_t refSeconds_r16; // OF (0..86399)
	uint16_t refMilliSeconds_r16; // OF (0..999)
	uint32_t refTenNanoSeconds_r16; // OF (0..99999)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ReferenceTimeInfo_r16, timeInfoType_r16)), localClock)
} ASN_ENUM(ASN_NR_NAME(ReferenceTimeInfo_r16, timeInfoType_r16));

struct ASN_NR_NAME(ReferenceTimeInfo_r16) {
	struct ASN_NR_NAME(ReferenceTime_r16) time_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ReferenceTimeInfo_r16), uint16_t, uncertainty_r16); // OF (0..32767)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ReferenceTimeInfo_r16, timeInfoType_r16)), timeInfoType_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ReferenceTimeInfo_r16), uint16_t, referenceSFN_r16); // OF (0..1023)
};

struct ASN_NR_NAME(SIB9) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB9, timeInfo), timeInfo);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB9), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB9), ASN_NR_NAME(ReferenceTimeInfo_r16), referenceTimeInfo_r16);
};

struct ASN_NR_NAME(HRNN_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(HRNN_r16), OCTET_STRING, hrnn_r16); // SIZE (1..48)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(HRNN_r16), ASN_NR_NAME(HRNN_List_r16)); // SIZE (1..12)

struct ASN_NR_NAME(SIB10_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB10_r16), ASN_NR_NAME(HRNN_List_r16), hrnn_List_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB10_r16), OCTET_STRING, lateNonCriticalExtension);
};

typedef SIDL_DYNAMIC(ASN_NR_NAME(FreqBandIndicatorNR), ASN_NR_NAME(MultiFrequencyBandListNR)); // SIZE (1..8)

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PCI_Range), ASN_NR_NAME(CellListNR_r16)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierNR_r16, reportQuantities_r16)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierNR_r16, reportQuantities_r16)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierNR_r16, reportQuantities_r16)), both)
} ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierNR_r16, reportQuantities_r16));

struct ASN_NR_NAME(MeasIdleCarrierNR_r16, qualityThreshold_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, qualityThreshold_r16), ASN_NR_NAME(RSRP_Range), idleRSRP_Threshold_NR_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, qualityThreshold_r16), ASN_NR_NAME(RSRQ_Range), idleRSRQ_Threshold_NR_r16);
};

struct ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), uint8_t, nrofSS_BlocksToAverage_r16); // OF (2..16)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NR_NAME(ThresholdNR), absThreshSS_BlocksConsolidation_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NR_NAME(SSB_MTC), smtc_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NR_NAME(SSB_ToMeasure), ssb_ToMeasure_r16);
	bool deriveSSB_IndexFromCell_r16;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ASN_NR_NAME(SS_RSSI_Measurement), ss_RSSI_Measurement_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamMeasConfigIdle_NR_r16, reportQuantityRS_Indexes_r16)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamMeasConfigIdle_NR_r16, reportQuantityRS_Indexes_r16)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamMeasConfigIdle_NR_r16, reportQuantityRS_Indexes_r16)), both)
} ASN_ENUM(ASN_NR_NAME(BeamMeasConfigIdle_NR_r16, reportQuantityRS_Indexes_r16));

struct ASN_NR_NAME(BeamMeasConfigIdle_NR_r16) {
	ASN_ENUM(ASN_NR_NAME(BeamMeasConfigIdle_NR_r16, reportQuantityRS_Indexes_r16)) reportQuantityRS_Indexes_r16;
	uint8_t maxNrofRS_IndexesToReport_r16; // OF (1..32)
	bool includeBeamMeasurements_r16;
};

struct ASN_NR_NAME(MeasIdleCarrierNR_r16) {
	ASN_NR_NAME(ARFCN_ValueNR) carrierFreq_r16;
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) ssbSubcarrierSpacing_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16), ASN_NR_NAME(MultiFrequencyBandListNR), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16), ASN_NR_NAME(CellListNR_r16), measCellListNR_r16);
	ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierNR_r16, reportQuantities_r16)) reportQuantities_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(MeasIdleCarrierNR_r16, qualityThreshold_r16), qualityThreshold_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(MeasIdleCarrierNR_r16, ssb_MeasConfig_r16), ssb_MeasConfig_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierNR_r16), ASN_NR_NAME(BeamMeasConfigIdle_NR_r16), beamMeasConfigIdle_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_PhysCellIdRange), ASN_NR_NAME(CellListEUTRA_r16)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, reportQuantitiesEUTRA_r16)), rsrp),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, reportQuantitiesEUTRA_r16)), rsrq),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, reportQuantitiesEUTRA_r16)), both)
} ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, reportQuantitiesEUTRA_r16));

typedef uint8_t ASN_NR_NAME(RSRP_RangeEUTRA); // OF (0..97)

typedef int8_t ASN_NR_NAME(RSRQ_RangeEUTRA_r16); // OF (-30..46)

struct ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, qualityThresholdEUTRA_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, qualityThresholdEUTRA_r16), ASN_NR_NAME(RSRP_RangeEUTRA), idleRSRP_Threshold_EUTRA_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, qualityThresholdEUTRA_r16), ASN_NR_NAME(RSRQ_RangeEUTRA_r16), idleRSRQ_Threshold_EUTRA_r16);
};

struct ASN_NR_NAME(MeasIdleCarrierEUTRA_r16) {
	ASN_NR_NAME(ARFCN_ValueEUTRA) carrierFreqEUTRA_r16;
	ASN_ENUM(ASN_NR_NAME(EUTRA_AllowedMeasBandwidth)) allowedMeasBandwidth_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16), ASN_NR_NAME(CellListEUTRA_r16), measCellListEUTRA_r16);
	ASN_ENUM(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, reportQuantitiesEUTRA_r16)) reportQuantitiesEUTRA_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(MeasIdleCarrierEUTRA_r16, qualityThresholdEUTRA_r16), qualityThresholdEUTRA_r16);
};

struct ASN_NR_NAME(MeasIdleConfigSIB_r16) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleConfigSIB_r16), ASN_NR_NAME(MeasIdleCarrierNR_r16), measIdleCarrierListNR_r16); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasIdleConfigSIB_r16), ASN_NR_NAME(MeasIdleCarrierEUTRA_r16), measIdleCarrierListEUTRA_r16); // SIZE (1..8)
};

struct ASN_NR_NAME(SIB11_r16) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB11_r16), ASN_NR_NAME(MeasIdleConfigSIB_r16), measIdleConfigSIB_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB11_r16), OCTET_STRING, lateNonCriticalExtension);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB12_r16, segmentType_r16)), notLastSegment),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB12_r16, segmentType_r16)), lastSegment)
} ASN_ENUM(ASN_NR_NAME(SIB12_r16, segmentType_r16));

struct ASN_NR_NAME(SIB12_r16) {
	uint8_t segmentNumber_r16; // OF (0..63)
	ASN_ENUM(ASN_NR_NAME(SIB12_r16, segmentType_r16)) segmentType_r16;
	OCTET_STRING segmentContainer_r16;
};

struct ASN_NR_NAME(SIB13_r16) {
	OCTET_STRING sl_V2X_ConfigCommon_r16;
	OCTET_STRING sl_Bandwidth_r16;
	OCTET_STRING tdd_Config_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB13_r16), OCTET_STRING, lateNonCriticalExtension);
};

struct ASN_NR_NAME(SIB14_r16) {
	OCTET_STRING sl_V2X_ConfigCommonExt_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB14_r16), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib2),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib3),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib4),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib5),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib6),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib7),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib8),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib9),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib10_v1610),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib11_v1610),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib12_v1610),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib13_v1610),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), sib14_v1610)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib2)
		struct ASN_NR_NAME(SIB2) sib2;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib3)
		struct ASN_NR_NAME(SIB3) sib3;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib4)
		struct ASN_NR_NAME(SIB4) sib4;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib5)
		struct ASN_NR_NAME(SIB5) sib5;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib6)
		struct ASN_NR_NAME(SIB6) sib6;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib7)
		struct ASN_NR_NAME(SIB7) sib7;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib8)
		struct ASN_NR_NAME(SIB8) sib8;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib9)
		struct ASN_NR_NAME(SIB9) sib9;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib10_v1610)
		struct ASN_NR_NAME(SIB10_r16) sib10_v1610;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib11_v1610)
		struct ASN_NR_NAME(SIB11_r16) sib11_v1610;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib12_v1610)
		struct ASN_NR_NAME(SIB12_r16) sib12_v1610;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib13_v1610)
		struct ASN_NR_NAME(SIB13_r16) sib13_v1610;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s)_sib14_v1610)
		struct ASN_NR_NAME(SIB14_r16) sib14_v1610;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo_s), ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo)); // SIZE (1..32)

struct ASN_NR_NAME(SystemInformation_IEs, nonCriticalExtension) {
};

struct ASN_NR_NAME(SystemInformation_IEs) {
	ASN_NR_NAME(SystemInformation_IEs, sib_TypeAndInfo) sib_TypeAndInfo;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SystemInformation_IEs), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SystemInformation_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NR_NAME(SIBpos_r16) {
	OCTET_STRING assistanceDataSIB_Element_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIBpos_r16), OCTET_STRING, lateNonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_2_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_3_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_4_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_5_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_6_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_7_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib1_8_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_2_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_3_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_4_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_5_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_6_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_7_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_8_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_9_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_10_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_11_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_12_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_13_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_14_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_15_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_16_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_17_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_18_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_19_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_20_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_21_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_22_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib2_23_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib3_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib4_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib5_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib6_1_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib6_2_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), posSib6_3_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_2_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_2_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_3_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_3_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_4_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_4_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_5_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_5_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_6_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_6_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_7_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_7_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib1_8_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib1_8_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_2_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_2_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_3_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_3_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_4_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_4_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_5_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_5_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_6_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_6_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_7_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_7_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_8_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_8_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_9_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_9_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_10_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_10_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_11_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_11_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_12_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_12_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_13_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_13_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_14_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_14_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_15_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_15_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_16_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_16_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_17_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_17_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_18_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_18_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_19_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_19_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_20_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_20_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_21_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_21_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_22_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_22_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib2_23_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib2_23_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib3_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib3_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib4_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib4_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib5_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib5_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib6_1_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib6_1_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib6_2_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib6_2_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s)_posSib6_3_r16)
		struct ASN_NR_NAME(SIBpos_r16) posSib6_3_r16;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16_s), ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16)); // SIZE (1..32)

struct ASN_NR_NAME(PosSystemInformation_r16_IEs, nonCriticalExtension) {
};

struct ASN_NR_NAME(PosSystemInformation_r16_IEs) {
	ASN_NR_NAME(PosSystemInformation_r16_IEs, posSIB_TypeAndInfo_r16) posSIB_TypeAndInfo_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PosSystemInformation_r16_IEs), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PosSystemInformation_r16_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16, criticalExtensionsFuture) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16), posSystemInformation_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16), criticalExtensionsFuture)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16)_posSystemInformation_r16)
		struct ASN_NR_NAME(PosSystemInformation_r16_IEs) posSystemInformation_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16)_criticalExtensionsFuture)
		struct ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16, criticalExtensionsFuture) criticalExtensionsFuture;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SystemInformation, criticalExtensions)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions), systemInformation),
	ASN_ENUM_VAL(ASN_NR_NAME(SystemInformation, criticalExtensions), criticalExtensionsFuture_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SystemInformation, criticalExtensions)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation, criticalExtensions)_systemInformation)
		struct ASN_NR_NAME(SystemInformation_IEs) systemInformation;
	SIDL_UNION_CASE(ASN_NR_NAME(SystemInformation, criticalExtensions)_criticalExtensionsFuture_r16)
		struct ASN_NR_NAME(SystemInformation, criticalExtensions, criticalExtensionsFuture_r16) criticalExtensionsFuture_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(SystemInformation) {
	struct ASN_NR_NAME(SystemInformation, criticalExtensions) criticalExtensions;
};

struct ASN_NR_NAME(SIB1, cellSelectionInfo) {
	ASN_NR_NAME(Q_RxLevMin) q_RxLevMin;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, cellSelectionInfo), uint8_t, q_RxLevMinOffset); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, cellSelectionInfo), ASN_NR_NAME(Q_RxLevMin), q_RxLevMinSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, cellSelectionInfo), ASN_NR_NAME(Q_QualMin), q_QualMin);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, cellSelectionInfo), uint8_t, q_QualMinOffset); // OF (1..8)
};

typedef uint8_t ASN_NR_NAME(MCC_MNC_Digit); // OF (0..9)

typedef SIDL_STATIC_ARRAY(ASN_NR_NAME(MCC_MNC_Digit), ASN_NR_NAME(MCC), 3); // SIZE (3)

typedef SIDL_DYNAMIC(ASN_NR_NAME(MCC_MNC_Digit), ASN_NR_NAME(MNC)); // SIZE (2..3)

struct ASN_NR_NAME(PLMN_Identity) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PLMN_Identity), ASN_NR_NAME(MCC), mcc);
	ASN_NR_NAME(MNC) mnc;
};

typedef B24 ASN_NR_NAME(TrackingAreaCode); // SIZE (24)

typedef uint8_t ASN_NR_NAME(RAN_AreaCode); // OF (0..255)

typedef B36 ASN_NR_NAME(CellIdentity); // SIZE (36)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)), notReserved)
} ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, iab_Support_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, iab_Support_r16));

struct ASN_NR_NAME(PLMN_IdentityInfo) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PLMN_IdentityInfo), ASN_NR_NAME(PLMN_Identity), plmn_IdentityList); // SIZE (1..12)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PLMN_IdentityInfo), ASN_NR_NAME(TrackingAreaCode), trackingAreaCode);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PLMN_IdentityInfo), ASN_NR_NAME(RAN_AreaCode), ranac);
	ASN_NR_NAME(CellIdentity) cellIdentity;
	ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, cellReservedForOperatorUse)) cellReservedForOperatorUse;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PLMN_IdentityInfo, iab_Support_r16)), iab_Support_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PLMN_IdentityInfo), ASN_NR_NAME(PLMN_IdentityInfoList)); // SIZE (1..12)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForOtherUse)), true)
} ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForOtherUse));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForFutureUse_r16)), true)
} ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForFutureUse_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CAG_IdentityInfo_r16, manualCAGselectionAllowed_r16)), true)
} ASN_ENUM(ASN_NR_NAME(CAG_IdentityInfo_r16, manualCAGselectionAllowed_r16));

struct ASN_NR_NAME(CAG_IdentityInfo_r16) {
	B32 cag_Identity_r16; // SIZE (32)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CAG_IdentityInfo_r16, manualCAGselectionAllowed_r16)), manualCAGselectionAllowed_r16);
};

struct ASN_NR_NAME(NPN_Identity_r16, pni_npn_r16) {
	struct ASN_NR_NAME(PLMN_Identity) plmn_Identity_r16;
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(NPN_Identity_r16, pni_npn_r16), ASN_NR_NAME(CAG_IdentityInfo_r16), cag_IdentityList_r16); // SIZE (1..12)
};

typedef B44 ASN_NR_NAME(NID_r16); // SIZE (44)

struct ASN_NR_NAME(NPN_Identity_r16, snpn_r16) {
	struct ASN_NR_NAME(PLMN_Identity) plmn_Identity;
	SIDL_DYNAMIC(ASN_NR_NAME(NID_r16), nid_List_r16); // SIZE (1..12)
};

SIDL_UNION_ENUM(ASN_NR_NAME(NPN_Identity_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(NPN_Identity_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(NPN_Identity_r16), pni_npn_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(NPN_Identity_r16), snpn_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(NPN_Identity_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(NPN_Identity_r16)_pni_npn_r16)
		struct ASN_NR_NAME(NPN_Identity_r16, pni_npn_r16) pni_npn_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(NPN_Identity_r16)_snpn_r16)
		struct ASN_NR_NAME(NPN_Identity_r16, snpn_r16) snpn_r16;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, cellReservedForOperatorUse_r16)), reserved),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, cellReservedForOperatorUse_r16)), notReserved)
} ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, cellReservedForOperatorUse_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, iab_Support_r16)), true)
} ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, iab_Support_r16));

struct ASN_NR_NAME(NPN_IdentityInfo_r16) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(NPN_IdentityInfo_r16), ASN_NR_NAME(NPN_Identity_r16), npn_IdentityList_r16); // SIZE (1..12)
	ASN_NR_NAME(TrackingAreaCode) trackingAreaCode_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(NPN_IdentityInfo_r16), ASN_NR_NAME(RAN_AreaCode), ranac_r16);
	ASN_NR_NAME(CellIdentity) cellIdentity_r16;
	ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, cellReservedForOperatorUse_r16)) cellReservedForOperatorUse_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(NPN_IdentityInfo_r16, iab_Support_r16)), iab_Support_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(NPN_IdentityInfo_r16), ASN_NR_NAME(NPN_IdentityInfoList_r16)); // SIZE (1..12)

struct ASN_NR_NAME(CellAccessRelatedInfo) {
	ASN_NR_NAME(PLMN_IdentityInfoList) plmn_IdentityList;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForOtherUse)), cellReservedForOtherUse);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CellAccessRelatedInfo, cellReservedForFutureUse_r16)), cellReservedForFutureUse_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CellAccessRelatedInfo), ASN_NR_NAME(NPN_IdentityInfoList_r16), npn_IdentityInfoList_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount)), n4)
} ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s420),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)), s900)
} ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity));

struct ASN_NR_NAME(ConnEstFailureControl) {
	ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailCount)) connEstFailCount;
	ASN_ENUM(ASN_NR_NAME(ConnEstFailureControl, connEstFailOffsetValidity)) connEstFailOffsetValidity;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConnEstFailureControl), uint8_t, connEstFailOffset); // OF (0..15)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_BroadcastStatus)), broadcasting),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_BroadcastStatus)), notBroadcasting)
} ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_BroadcastStatus));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)), rf512)
} ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType10_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType11_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType12_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType13_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), sibType14_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)), spare1)
} ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, areaScope)), true)
} ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, areaScope));

struct ASN_NR_NAME(SIB_TypeInfo) {
	ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, type)) type;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB_TypeInfo), uint8_t, valueTag); // OF (0..31)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB_TypeInfo, areaScope)), areaScope);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(SIB_TypeInfo), ASN_NR_NAME(SIB_Mapping)); // SIZE (1..32)

struct ASN_NR_NAME(SchedulingInfo) {
	ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_BroadcastStatus)) si_BroadcastStatus;
	ASN_ENUM(ASN_NR_NAME(SchedulingInfo, si_Periodicity)) si_Periodicity;
	ASN_NR_NAME(SIB_Mapping) sib_MappingInfo;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)), s1280)
} ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM)), eight)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)), n200)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep)), dB6)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)), sl80)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), scf64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow_v1610)), sl60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow_v1610)), sl160)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow_v1610));

struct ASN_NR_NAME(RACH_ConfigGeneric) {
	uint8_t prach_ConfigurationIndex; // OF (0..255)
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, msg1_FDM)) msg1_FDM;
	uint16_t msg1_FrequencyStart; // OF (0..274)
	uint8_t zeroCorrelationZoneConfig; // OF (0..15)
	int16_t preambleReceivedTargetPower; // OF (-202..-60)
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, preambleTransMax)) preambleTransMax;
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, powerRampingStep)) powerRampingStep;
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow)) ra_ResponseWindow;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, prach_ConfigurationPeriodScaling_IAB_r16)), prach_ConfigurationPeriodScaling_IAB_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGeneric), uint8_t, prach_ConfigurationFrameOffset_IAB_r16); // OF (0..63)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGeneric), uint8_t, prach_ConfigurationSOffset_IAB_r16); // OF (0..39)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGeneric, ra_ResponseWindow_v1610)), ra_ResponseWindow_v1610);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGeneric), uint16_t, prach_ConfigurationIndex_v1610); // OF (256..262)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), oneEighth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), oneFourth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), oneHalf),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), eight),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)), sixteen)
} ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion));

struct ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI) {
	struct ASN_NR_NAME(RACH_ConfigGeneric) rach_ConfigSI;
	ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI, ssb_perRACH_Occasion)) ssb_perRACH_Occasion;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), six),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), eight),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), ten),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), twelve),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), sixteen)
} ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod));

struct ASN_NR_NAME(SI_RequestResources) {
	uint8_t ra_PreambleStartIndex; // OF (0..63)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SI_RequestResources), uint8_t, ra_AssociationPeriodIndex); // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SI_RequestResources), uint8_t, ra_ssb_OccasionMaskIndex); // OF (0..15)
};

struct ASN_NR_NAME(SI_RequestConfig) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SI_RequestConfig, rach_OccasionsSI), rach_OccasionsSI);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SI_RequestConfig, si_RequestPeriod)), si_RequestPeriod);
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SI_RequestConfig), ASN_NR_NAME(SI_RequestResources), si_RequestResources); // SIZE (1..32)
};

struct ASN_NR_NAME(SI_SchedulingInfo) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SI_SchedulingInfo), ASN_NR_NAME(SchedulingInfo), schedulingInfoList); // SIZE (1..32)
	ASN_ENUM(ASN_NR_NAME(SI_SchedulingInfo, si_WindowLength)) si_WindowLength;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SI_SchedulingInfo), ASN_NR_NAME(SI_RequestConfig), si_RequestConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SI_SchedulingInfo), ASN_NR_NAME(SI_RequestConfig), si_RequestConfigSUL);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SI_SchedulingInfo), B24, systemInformationAreaID); // SIZE (24)
};

struct ASN_NR_NAME(SCS_SpecificCarrier) {
	uint16_t offsetToCarrier; // OF (0..2199)
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) subcarrierSpacing;
	uint16_t carrierBandwidth; // OF (1..275)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SCS_SpecificCarrier), uint16_t, txDirectCurrentLocation); // OF (0..4095)
};

struct ASN_NR_NAME(FrequencyInfoDL_SIB) {
	ASN_NR_NAME(MultiFrequencyBandListNR_SIB) frequencyBandList;
	uint16_t offsetToPointA; // OF (0..2199)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(FrequencyInfoDL_SIB), ASN_NR_NAME(SCS_SpecificCarrier), scs_SpecificCarrierList); // SIZE (1..5)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BWP, cyclicPrefix)), extended)
} ASN_ENUM(ASN_NR_NAME(BWP, cyclicPrefix));

struct ASN_NR_NAME(BWP) {
	uint16_t locationAndBandwidth; // OF (0..37949)
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) subcarrierSpacing;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BWP, cyclicPrefix)), cyclicPrefix);
};

typedef uint8_t ASN_NR_NAME(ControlResourceSetId); // OF (0..11)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, reg_BundleSize)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, reg_BundleSize)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, reg_BundleSize)), n6)
} ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, reg_BundleSize));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, interleaverSize)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, interleaverSize)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, interleaverSize)), n6)
} ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, interleaverSize));

struct ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved) {
	ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, reg_BundleSize)) reg_BundleSize;
	ASN_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved, interleaverSize)) interleaverSize;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved), uint16_t, shiftIndex); // OF (0..274)
};

SIDL_UNION_ENUM(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType), interleaved),
	ASN_ENUM_VAL(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType), nonInterleaved)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType)_interleaved)
		struct ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType, interleaved) interleaved;
	SIDL_UNION_CASE(ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType)_nonInterleaved)
		Null nonInterleaved;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, precoderGranularity)), sameAsREG_bundle),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, precoderGranularity)), allContiguousRBs)
} ASN_ENUM(ASN_NR_NAME(ControlResourceSet, precoderGranularity));

typedef uint8_t ASN_NR_NAME(TCI_StateId); // OF (0..127)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, tci_PresentInDCI)), enabled)
} ASN_ENUM(ASN_NR_NAME(ControlResourceSet, tci_PresentInDCI));

typedef uint8_t ASN_NR_NAME(ControlResourceSetId_v1610); // OF (12..15)

struct ASN_NR_NAME(ControlResourceSet) {
	ASN_NR_NAME(ControlResourceSetId) controlResourceSetId;
	B45 frequencyDomainResources; // SIZE (45)
	uint8_t duration; // OF (1..3)
	struct ASN_NR_NAME(ControlResourceSet, cce_REG_MappingType) cce_REG_MappingType;
	ASN_ENUM(ASN_NR_NAME(ControlResourceSet, precoderGranularity)) precoderGranularity;
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), ASN_NR_NAME(TCI_StateId), tci_StatesPDCCH_ToAddList); // SIZE (1..64)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), ASN_NR_NAME(TCI_StateId), tci_StatesPDCCH_ToReleaseList); // SIZE (1..64)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ControlResourceSet, tci_PresentInDCI)), tci_PresentInDCI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), uint16_t, pdcch_DMRS_ScramblingID); // OF (0..65535)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), uint8_t, rb_Offset_r16); // OF (0..5)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), uint8_t, tci_PresentDCI_1_2_r16); // OF (1..3)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), uint8_t, coresetPoolIndex_r16); // OF (0..1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ControlResourceSet), ASN_NR_NAME(ControlResourceSetId_v1610), controlResourceSetId_v1610);
};

typedef uint8_t ASN_NR_NAME(SearchSpaceId); // OF (0..39)

SIDL_UNION_ENUM(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl1),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl2),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl4),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl5),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl8),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl10),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl16),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl20),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl40),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl80),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl160),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl320),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl640),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl1280),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), sl2560)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl1)
		Null sl1;
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl2)
		uint8_t sl2; // OF (0..1)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl4)
		uint8_t sl4; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl5)
		uint8_t sl5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl8)
		uint8_t sl8; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl10)
		uint8_t sl10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl16)
		uint8_t sl16; // OF (0..15)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl20)
		uint8_t sl20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl40)
		uint8_t sl40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl80)
		uint8_t sl80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl160)
		uint8_t sl160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl320)
		uint16_t sl320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl640)
		uint16_t sl640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl1280)
		uint16_t sl1280; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset)_sl2560)
		uint16_t sl2560; // OF (0..2559)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)), n8)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)), n8)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)), n8)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)), n8)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)), n8)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16));

struct ASN_NR_NAME(SearchSpace, nrofCandidates) {
	ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel1)) aggregationLevel1;
	ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel2)) aggregationLevel2;
	ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel4)) aggregationLevel4;
	ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel8)) aggregationLevel8;
	ASN_ENUM(ASN_NR_NAME(SearchSpace, nrofCandidates, aggregationLevel16)) aggregationLevel16;
};

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format0_0_AndFormat1_0) {
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel1)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel1)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel1));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel2)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel2)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel2));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel4)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel4)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel4));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel8)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel8)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel8));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel16));

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel1)), aggregationLevel1);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel2)), aggregationLevel2);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel4)), aggregationLevel4);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel8)), aggregationLevel8);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI, aggregationLevel16)), aggregationLevel16);
};

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0) {
	struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0, nrofCandidates_SFI) nrofCandidates_SFI;
};

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_1) {
};

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_2) {
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), sl20)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy2)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy2)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy2));

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy1)), dummy1);
	ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3, dummy2)) dummy2;
};

struct ASN_NR_NAME(SearchSpace, searchSpaceType, common) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format0_0_AndFormat1_0), dci_Format0_0_AndFormat1_0);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_0), dci_Format2_0);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_1), dci_Format2_1);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_2), dci_Format2_2);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType, common, dci_Format2_3), dci_Format2_3);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats)), formats0_0_And_1_0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats)), formats0_1_And_1_1)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats_MT_r16)), formats2_5)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats_MT_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), formats0_0_And_1_0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), formats0_1_And_1_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), formats3_0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), formats3_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), formats3_0_And_3_1)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsExt_r16)), formats0_2_And_1_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsExt_r16)), formats0_1_And_1_1And_0_2_And_1_2)
} ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsExt_r16));

struct ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific) {
	ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats)) dci_Formats;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_Formats_MT_r16)), dci_Formats_MT_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsSL_r16)), dci_FormatsSL_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific, dci_FormatsExt_r16)), dci_FormatsExt_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SearchSpace, searchSpaceType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, searchSpaceType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, searchSpaceType), common),
	ASN_ENUM_VAL(ASN_NR_NAME(SearchSpace, searchSpaceType), ue_Specific)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SearchSpace, searchSpaceType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, searchSpaceType)_common)
		struct ASN_NR_NAME(SearchSpace, searchSpaceType, common) common;
	SIDL_UNION_CASE(ASN_NR_NAME(SearchSpace, searchSpaceType)_ue_Specific)
		struct ASN_NR_NAME(SearchSpace, searchSpaceType, ue_Specific) ue_Specific;
} SIDL_UNION_END;

struct ASN_NR_NAME(SearchSpace) {
	ASN_NR_NAME(SearchSpaceId) searchSpaceId;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpace), ASN_NR_NAME(ControlResourceSetId), controlResourceSetId);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, monitoringSlotPeriodicityAndOffset), monitoringSlotPeriodicityAndOffset);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpace), uint16_t, duration); // OF (2..2559)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpace), B14, monitoringSymbolsWithinSlot); // SIZE (14)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, nrofCandidates), nrofCandidates);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpace, searchSpaceType), searchSpaceType);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS15KHZoneT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS30KHZoneT_SCS15KHZhalfT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneEighthT_SCS60KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneSixteenthT)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS15KHZoneT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint8_t, sCS15KHZoneT); // SIZE (1..4) OF (0..139)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS30KHZoneT_SCS15KHZhalfT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS30KHZoneT_SCS15KHZhalfT); // SIZE (1..4) OF (0..279)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT); // SIZE (1..4) OF (0..559)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT); // SIZE (1..4) OF (0..1119)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT); // SIZE (1..4) OF (0..2239)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT); // SIZE (1..4) OF (0..4479)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneEighthT_SCS60KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneEighthT_SCS60KHZoneSixteenthT); // SIZE (1..4) OF (0..8959)
	SIDL_UNION_CASE(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneSixteenthT); // SIZE (1..4) OF (0..17919)
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(ControlResourceSetId_r16); // OF (0..15)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel1_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel1_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel2_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel2_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel4_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel4_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel4_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel8_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel8_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel8_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel16_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel16_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel16_r16));

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel1_r16)), aggregationLevel1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel2_r16)), aggregationLevel2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel4_r16)), aggregationLevel4_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel8_r16)), aggregationLevel8_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16, aggregationLevel16_r16)), aggregationLevel16_r16);
};

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16) {
	struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16, nrofCandidates_CI_r16) nrofCandidates_CI_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel1_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel1_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel2_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel2_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel4_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel4_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel4_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel8_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel8_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel8_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel16_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel16_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel16_r16));

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel1_r16)), aggregationLevel1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel2_r16)), aggregationLevel2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel4_r16)), aggregationLevel4_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel8_r16)), aggregationLevel8_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16, aggregationLevel16_r16)), aggregationLevel16_r16);
};

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16) {
	struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16, nrofCandidates_IAB_r16) nrofCandidates_IAB_r16;
};

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_6_r16) {
};

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_4_r16), dci_Format2_4_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_5_r16), dci_Format2_5_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16, dci_Format2_6_r16), dci_Format2_6_r16);
};

struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16) {
	struct ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16, common_r16) common_r16;
};

struct ASN_NR_NAME(SearchSpaceExt_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpaceExt_r16), ASN_NR_NAME(ControlResourceSetId_r16), controlResourceSetId_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SearchSpaceExt_r16, searchSpaceType_r16), searchSpaceType_r16);
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpaceExt_r16), uint8_t, searchSpaceGroupIdList_r16); // SIZE (1..2) OF (0..1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SearchSpaceExt_r16), B5, freqMonitorLocations_r16); // SIZE (5)
};

struct ASN_NR_NAME(PDCCH_ConfigCommon) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(ControlResourceSetZero), controlResourceSetZero);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(ControlResourceSet), commonControlResourceSet);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceZero), searchSpaceZero);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpace), commonSearchSpaceList); // SIZE (1..4)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceId), searchSpaceSIB1);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceId), searchSpaceOtherSystemInformation);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceId), pagingSearchSpace);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceId), ra_SearchSpace);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PDCCH_ConfigCommon, firstPDCCH_MonitoringOccasionOfPO), firstPDCCH_MonitoringOccasionOfPO);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDCCH_ConfigCommon), ASN_NR_NAME(SearchSpaceExt_r16), commonSearchSpaceListExt_r16); // SIZE (1..4)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon)_setup)
		struct ASN_NR_NAME(PDCCH_ConfigCommon) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation, mappingType)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation, mappingType)), typeB)
} ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation, mappingType));

struct ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation), uint8_t, k0); // OF (0..32)
	ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation, mappingType)) mappingType;
	uint8_t startSymbolAndLength; // OF (0..127)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation), ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList)); // SIZE (1..16)

struct ASN_NR_NAME(PDSCH_ConfigCommon) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_ConfigCommon), ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList), pdsch_TimeDomainAllocationList);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon)_setup)
		struct ASN_NR_NAME(PDSCH_ConfigCommon) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(BWP_DownlinkCommon) {
	struct ASN_NR_NAME(BWP) genericParameters;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_DownlinkCommon), ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdcch_ConfigCommon), pdcch_ConfigCommon);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_DownlinkCommon), ASN_NR_NAME(SetupRelease_BWP_DownlinkCommon, pdsch_ConfigCommon), pdsch_ConfigCommon);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff)), n16)
} ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff));

struct ASN_NR_NAME(BCCH_Config) {
	ASN_ENUM(ASN_NR_NAME(BCCH_Config, modificationPeriodCoeff)) modificationPeriodCoeff;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PagingCycle)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PagingCycle)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PagingCycle)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PagingCycle)), rf256)
} ASN_ENUM(ASN_NR_NAME(PagingCycle));

SIDL_UNION_ENUM(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), oneT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), halfT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), quarterT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), oneEighthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset), oneSixteenthT)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)_oneT)
		Null oneT;
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)_halfT)
		uint8_t halfT; // OF (0..1)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)_quarterT)
		uint8_t quarterT; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)_oneEighthT)
		uint8_t oneEighthT; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset)_oneSixteenthT)
		uint8_t oneSixteenthT; // OF (0..15)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCCH_Config, ns)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCCH_Config, ns)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PCCH_Config, ns)), one)
} ASN_ENUM(ASN_NR_NAME(PCCH_Config, ns));

SIDL_UNION_ENUM(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS15KHZoneT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS30KHZoneT_SCS15KHZhalfT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneEighthT_SCS60KHZoneSixteenthT),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), sCS120KHZoneSixteenthT)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS15KHZoneT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint8_t, sCS15KHZoneT); // SIZE (1..4) OF (0..139)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS30KHZoneT_SCS15KHZhalfT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS30KHZoneT_SCS15KHZhalfT); // SIZE (1..4) OF (0..279)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS60KHZoneT_SCS30KHZhalfT_SCS15KHZquarterT); // SIZE (1..4) OF (0..559)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneT_SCS60KHZhalfT_SCS30KHZquarterT_SCS15KHZoneEighthT); // SIZE (1..4) OF (0..1119)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZhalfT_SCS60KHZquarterT_SCS30KHZoneEighthT_SCS15KHZoneSixteenthT); // SIZE (1..4) OF (0..2239)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZquarterT_SCS60KHZoneEighthT_SCS30KHZoneSixteenthT); // SIZE (1..4) OF (0..4479)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneEighthT_SCS60KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneEighthT_SCS60KHZoneSixteenthT); // SIZE (1..4) OF (0..8959)
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO)_sCS120KHZoneSixteenthT)
		SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), uint16_t, sCS120KHZoneSixteenthT); // SIZE (1..4) OF (0..17919)
} SIDL_UNION_END;

struct ASN_NR_NAME(PCCH_Config) {
	ASN_ENUM(ASN_NR_NAME(PagingCycle)) defaultPagingCycle;
	struct ASN_NR_NAME(PCCH_Config, nAndPagingFrameOffset) nAndPagingFrameOffset;
	ASN_ENUM(ASN_NR_NAME(PCCH_Config, ns)) ns;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PCCH_Config, firstPDCCH_MonitoringOccasionOfPO), firstPDCCH_MonitoringOccasionOfPO);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PCCH_Config), uint8_t, nrofPDCCH_MonitoringOccasionPerSSB_InPO_r16); // OF (2..4)
};

struct ASN_NR_NAME(DownlinkConfigCommonSIB) {
	struct ASN_NR_NAME(FrequencyInfoDL_SIB) frequencyInfoDL;
	struct ASN_NR_NAME(BWP_DownlinkCommon) initialDownlinkBWP;
	struct ASN_NR_NAME(BCCH_Config) bcch_Config;
	struct ASN_NR_NAME(PCCH_Config) pcch_Config;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL_SIB, frequencyShift7p5khz)), true)
} ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL_SIB, frequencyShift7p5khz));

struct ASN_NR_NAME(FrequencyInfoUL_SIB) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL_SIB), ASN_NR_NAME(MultiFrequencyBandListNR_SIB), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL_SIB), ASN_NR_NAME(ARFCN_ValueNR), absoluteFrequencyPointA);
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL_SIB), ASN_NR_NAME(SCS_SpecificCarrier), scs_SpecificCarrierList); // SIZE (1..5)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL_SIB), ASN_NR_NAME(P_Max), p_Max);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL_SIB, frequencyShift7p5khz)), frequencyShift7p5khz);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)), n32)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two));

SIDL_UNION_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), oneEighth),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), oneFourth),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), oneHalf),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), one),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), two),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), four),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), eight),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), sixteen)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_oneEighth)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneEighth)) oneEighth;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_oneFourth)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneFourth)) oneFourth;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_oneHalf)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, oneHalf)) oneHalf;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_one)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, one)) one;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_two)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB, two)) two;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_four)
		uint8_t four; // OF (1..16)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_eight)
		uint8_t eight; // OF (1..8)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB)_sixteen)
		uint8_t sixteen; // OF (1..4)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b208),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b282),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b480),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), b72),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)), spare1)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), minusinfinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)), dB18)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB));

struct ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured) {
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, ra_Msg3SizeGroupA)) ra_Msg3SizeGroupA;
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured, messagePowerOffsetGroupB)) messagePowerOffsetGroupB;
	uint8_t numberOfRA_PreamblesGroupA; // OF (1..64)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)), sf64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer));

SIDL_UNION_ENUM(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex), l839),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex), l139)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex)_l839)
		uint16_t l839; // OF (0..837)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex)_l139)
		uint8_t l139; // OF (0..137)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, restrictedSetConfig)), unrestrictedSet),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, restrictedSetConfig)), restrictedSetTypeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, restrictedSetConfig)), restrictedSetTypeB)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, restrictedSetConfig));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, msg3_transformPrecoder)), enabled)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, msg3_transformPrecoder));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority)), dB6)
} ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI)), zero),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI)), dot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI)), dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI)), dot75)
} ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI));

struct ASN_NR_NAME(RA_Prioritization) {
	ASN_ENUM(ASN_NR_NAME(RA_Prioritization, powerRampingStepHighPriority)) powerRampingStepHighPriority;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RA_Prioritization, scalingFactorBI)), scalingFactorBI);
};

struct ASN_NR_NAME(RACH_ConfigCommon, ra_PrioritizationForAccessIdentity_r16) {
	struct ASN_NR_NAME(RA_Prioritization) ra_Prioritization_r16;
	B2 ra_PrioritizationForAI_r16; // SIZE (2)
};

SIDL_UNION_ENUM(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16), l571),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16), l1151)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16)_l571)
		uint16_t l571; // OF (0..569)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16)_l1151)
		uint16_t l1151; // OF (0..1149)
} SIDL_UNION_END;

struct ASN_NR_NAME(RACH_ConfigCommon) {
	struct ASN_NR_NAME(RACH_ConfigGeneric) rach_ConfigGeneric;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommon), uint8_t, totalNumberOfRA_Preambles); // OF (1..63)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommon, ssb_perRACH_OccasionAndCB_PreamblesPerSSB), ssb_perRACH_OccasionAndCB_PreamblesPerSSB);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommon, groupBconfigured), groupBconfigured);
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, ra_ContentionResolutionTimer)) ra_ContentionResolutionTimer;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommon), ASN_NR_NAME(RSRP_Range), rsrp_ThresholdSSB);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommon), ASN_NR_NAME(RSRP_Range), rsrp_ThresholdSSB_SUL);
	struct ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex) prach_RootSequenceIndex;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommon), ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), msg1_SubcarrierSpacing);
	ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, restrictedSetConfig)) restrictedSetConfig;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommon, msg3_transformPrecoder)), msg3_transformPrecoder);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommon, ra_PrioritizationForAccessIdentity_r16), ra_PrioritizationForAccessIdentity_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommon, prach_RootSequenceIndex_r16), prach_RootSequenceIndex_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon)_setup)
		struct ASN_NR_NAME(RACH_ConfigCommon) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ConfigCommon, groupHoppingEnabledTransformPrecoding)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_ConfigCommon, groupHoppingEnabledTransformPrecoding));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation, mappingType)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation, mappingType)), typeB)
} ASN_ENUM(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation, mappingType));

struct ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation), uint8_t, k2); // OF (0..32)
	ASN_ENUM(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation, mappingType)) mappingType;
	uint8_t startSymbolAndLength; // OF (0..127)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation), ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList)); // SIZE (1..16)

struct ASN_NR_NAME(PUSCH_ConfigCommon) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ConfigCommon, groupHoppingEnabledTransformPrecoding)), groupHoppingEnabledTransformPrecoding);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_ConfigCommon), ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList), pusch_TimeDomainAllocationList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_ConfigCommon), int8_t, msg3_DeltaPreamble); // OF (-1..6)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_ConfigCommon), int16_t, p0_NominalWithGrant); // OF (-202..24)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon)_setup)
		struct ASN_NR_NAME(PUSCH_ConfigCommon) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ConfigCommon, pucch_GroupHopping)), neither),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ConfigCommon, pucch_GroupHopping)), enable),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ConfigCommon, pucch_GroupHopping)), disable)
} ASN_ENUM(ASN_NR_NAME(PUCCH_ConfigCommon, pucch_GroupHopping));

struct ASN_NR_NAME(PUCCH_ConfigCommon) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_ConfigCommon), uint8_t, pucch_ResourceCommon); // OF (0..15)
	ASN_ENUM(ASN_NR_NAME(PUCCH_ConfigCommon, pucch_GroupHopping)) pucch_GroupHopping;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_ConfigCommon), uint16_t, hoppingId); // OF (0..1023)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_ConfigCommon), int16_t, p0_nominal); // OF (-202..24)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon)_setup)
		struct ASN_NR_NAME(PUCCH_ConfigCommon) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16)_setup)
		struct ASN_NR_NAME(RACH_ConfigCommon) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BWP_UplinkCommon, useInterlacePUCCH_PUSCH_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(BWP_UplinkCommon, useInterlacePUCCH_PUSCH_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16)), eight)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16)), dB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16)), dB4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16)), dB6)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), sl320)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), n200)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16));

struct ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16), uint16_t, msgA_PRACH_ConfigurationIndex_r16); // OF (0..262)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_RO_FDM_r16)), msgA_RO_FDM_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16), uint16_t, msgA_RO_FrequencyStart_r16); // OF (0..274)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16), uint8_t, msgA_ZeroCorrelationZoneConfig_r16); // OF (0..15)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgA_PreamblePowerRampingStep_r16)), msgA_PreamblePowerRampingStep_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16), int16_t, msgA_PreambleReceivedTargetPower_r16); // OF (-202..-60)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, msgB_ResponseWindow_r16)), msgB_ResponseWindow_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16, preambleTransMax_r16)), preambleTransMax_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n36),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n44),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n52),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)), n64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n28),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)), n32)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two));

SIDL_UNION_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), oneEighth),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), oneFourth),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), oneHalf),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), one),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), two),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), four),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), eight),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), sixteen)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_oneEighth)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneEighth)) oneEighth;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_oneFourth)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneFourth)) oneFourth;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_oneHalf)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, oneHalf)) oneHalf;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_one)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, one)) one;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_two)
		ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16, two)) two;
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_four)
		uint8_t four; // OF (1..16)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_eight)
		uint8_t eight; // OF (1..8)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16)_sixteen)
		uint8_t sixteen; // OF (1..4)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b208),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b282),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b480),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), b72),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)), spare1)
} ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), minusinfinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)), dB18)
} ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB));

struct ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16) {
	ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, ra_MsgA_SizeGroupA)) ra_MsgA_SizeGroupA;
	ASN_ENUM(ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16, messagePowerOffsetGroupB)) messagePowerOffsetGroupB;
	uint8_t numberofRA_PreamblesGroupA; // OF (1..64)
};

SIDL_UNION_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), l839),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), l139),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), l571),
	ASN_ENUM_VAL(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), l1151)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)_l839)
		uint16_t l839; // OF (0..837)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)_l139)
		uint8_t l139; // OF (0..137)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)_l571)
		uint16_t l571; // OF (0..569)
	SIDL_UNION_CASE(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16)_l1151)
		uint16_t l1151; // OF (0..1149)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), n200)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_RestrictedSetConfig_r16)), unrestrictedSet),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_RestrictedSetConfig_r16)), restrictedSetTypeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_RestrictedSetConfig_r16)), restrictedSetTypeB)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_RestrictedSetConfig_r16));

struct ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_PrioritizationForAccessIdentityTwoStep_r16) {
	struct ASN_NR_NAME(RA_Prioritization) ra_Prioritization_r16;
	B2 ra_PrioritizationForAI_r16; // SIZE (2)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf48),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf56),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), sf64)
} ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16));

struct ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16) {
	struct ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16) rach_ConfigGenericTwoStepRA_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), uint8_t, msgA_TotalNumberOfRA_Preambles_r16); // OF (1..63)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16), msgA_SSB_PerRACH_OccasionAndCB_PreamblesPerSSB_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), uint8_t, msgA_CB_PreamblesPerSSB_PerSharedRO_r16); // OF (1..60)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), uint8_t, msgA_SSB_SharedRO_MaskIndex_r16); // OF (1..15)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), ASN_NR_NAME(GroupB_ConfiguredTwoStepRA_r16), groupB_ConfiguredTwoStepRA_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_PRACH_RootSequenceIndex_r16), msgA_PRACH_RootSequenceIndex_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_TransMax_r16)), msgA_TransMax_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), ASN_NR_NAME(RSRP_Range), msgA_RSRP_Threshold_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), ASN_NR_NAME(RSRP_Range), msgA_RSRP_ThresholdSSB_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16), ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), msgA_SubcarrierSpacing_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, msgA_RestrictedSetConfig_r16)), msgA_RestrictedSetConfig_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_PrioritizationForAccessIdentityTwoStep_r16), ra_PrioritizationForAccessIdentityTwoStep_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16, ra_ContentionResolutionTimer_r16)), ra_ContentionResolutionTimer_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16)), three),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16)), six)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, mappingTypeMsgA_PUSCH_r16)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, mappingTypeMsgA_PUSCH_r16)), typeB)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, mappingTypeMsgA_PUSCH_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16)), eight)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_IntraSlotFrequencyHopping_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_IntraSlotFrequencyHopping_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_DMRS_AdditionalPosition_r16)), pos0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_DMRS_AdditionalPosition_r16)), pos1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_DMRS_AdditionalPosition_r16)), pos3)
} ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_DMRS_AdditionalPosition_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_MaxLength_r16)), len2)
} ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_MaxLength_r16));

struct ASN_NR_NAME(MsgA_DMRS_Config_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_DMRS_AdditionalPosition_r16)), msgA_DMRS_AdditionalPosition_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_DMRS_Config_r16, msgA_MaxLength_r16)), msgA_MaxLength_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_DMRS_Config_r16), uint8_t, msgA_PUSCH_DMRS_CDM_Group_r16); // OF (0..1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_DMRS_Config_r16), uint8_t, msgA_PUSCH_NrofPorts_r16); // OF (0..1)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_DMRS_Config_r16), uint16_t, msgA_ScramblingID0_r16); // OF (0..65535)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_DMRS_Config_r16), uint16_t, msgA_ScramblingID1_r16); // OF (0..65535)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha04),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha06),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha07),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha08),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha09),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), alpha1)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16));

struct ASN_NR_NAME(MsgA_PUSCH_Resource_r16) {
	uint8_t msgA_MCS_r16; // OF (0..15)
	uint8_t nrofSlotsMsgA_PUSCH_r16; // OF (1..4)
	ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_PerSlot_r16)) nrofMsgA_PO_PerSlot_r16;
	uint8_t msgA_PUSCH_TimeDomainOffset_r16; // OF (1..32)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), uint8_t, msgA_PUSCH_TimeDomainAllocation_r16); // OF (1..16)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), uint8_t, startSymbolAndLengthMsgA_PO_r16); // OF (0..127)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, mappingTypeMsgA_PUSCH_r16)), mappingTypeMsgA_PUSCH_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), uint8_t, guardPeriodMsgA_PUSCH_r16); // OF (0..3)
	uint8_t guardBandMsgA_PUSCH_r16; // OF (0..1)
	uint16_t frequencyStartMsgA_PUSCH_r16; // OF (0..274)
	uint8_t nrofPRBs_PerMsgA_PO_r16; // OF (1..32)
	ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, nrofMsgA_PO_FDM_r16)) nrofMsgA_PO_FDM_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_IntraSlotFrequencyHopping_r16)), msgA_IntraSlotFrequencyHopping_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), B2, msgA_HoppingBits_r16); // SIZE (2)
	struct ASN_NR_NAME(MsgA_DMRS_Config_r16) msgA_DMRS_Config_r16;
	uint8_t nrofDMRS_Sequences_r16; // OF (1..2)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Resource_r16, msgA_Alpha_r16)), msgA_Alpha_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), uint8_t, interlaceIndexFirstPO_MsgA_PUSCH_r16); // OF (1..10)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Resource_r16), uint8_t, nrofInterlacesPerMsgA_PO_r16); // OF (1..10)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Config_r16, msgA_TransformPrecoder_r16)), enabled),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Config_r16, msgA_TransformPrecoder_r16)), disabled)
} ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Config_r16, msgA_TransformPrecoder_r16));

struct ASN_NR_NAME(MsgA_PUSCH_Config_r16) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Config_r16), ASN_NR_NAME(MsgA_PUSCH_Resource_r16), msgA_PUSCH_ResourceGroupA_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Config_r16), ASN_NR_NAME(MsgA_PUSCH_Resource_r16), msgA_PUSCH_ResourceGroupB_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MsgA_PUSCH_Config_r16, msgA_TransformPrecoder_r16)), msgA_TransformPrecoder_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Config_r16), uint16_t, msgA_DataScramblingIndex_r16); // OF (0..1023)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MsgA_PUSCH_Config_r16), int8_t, msgA_DeltaPreamble_r16); // OF (-1..6)
};

struct ASN_NR_NAME(MsgA_ConfigCommon_r16) {
	struct ASN_NR_NAME(RACH_ConfigCommonTwoStepRA_r16) rach_ConfigCommonTwoStepRA_r16;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MsgA_ConfigCommon_r16), ASN_NR_NAME(MsgA_PUSCH_Config_r16), msgA_PUSCH_Config_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16)_setup)
		struct ASN_NR_NAME(MsgA_ConfigCommon_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(BWP_UplinkCommon) {
	struct ASN_NR_NAME(BWP) genericParameters;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkCommon), ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommon), rach_ConfigCommon);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkCommon), ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pusch_ConfigCommon), pusch_ConfigCommon);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkCommon), ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, pucch_ConfigCommon), pucch_ConfigCommon);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkCommon), ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, rach_ConfigCommonIAB_r16), rach_ConfigCommonIAB_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BWP_UplinkCommon, useInterlacePUCCH_PUSCH_r16)), useInterlacePUCCH_PUSCH_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkCommon), ASN_NR_NAME(SetupRelease_BWP_UplinkCommon, msgA_ConfigCommon_r16), msgA_ConfigCommon_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms5120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), ms10240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)), infinity)
} ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer));

struct ASN_NR_NAME(UplinkConfigCommonSIB) {
	struct ASN_NR_NAME(FrequencyInfoUL_SIB) frequencyInfoUL;
	struct ASN_NR_NAME(BWP_UplinkCommon) initialUplinkBWP;
	ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)) timeAlignmentTimerCommon;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, n_TimingAdvanceOffset)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, n_TimingAdvanceOffset)), n25600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, n_TimingAdvanceOffset)), n39936)
} ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, n_TimingAdvanceOffset));

struct ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PositionsInBurst) {
	B8 inOneGroup; // SIZE (8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PositionsInBurst), B8, groupPresence); // SIZE (8)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)), ms160)
} ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms0p5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms0p625),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms1p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms2p5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)), ms10)
} ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity_v1530)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity_v1530)), ms4)
} ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity_v1530));

struct ASN_NR_NAME(TDD_UL_DL_Pattern) {
	ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity)) dl_UL_TransmissionPeriodicity;
	uint16_t nrofDownlinkSlots; // OF (0..320)
	uint8_t nrofDownlinkSymbols; // OF (0..13)
	uint16_t nrofUplinkSlots; // OF (0..320)
	uint8_t nrofUplinkSymbols; // OF (0..13)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(TDD_UL_DL_Pattern, dl_UL_TransmissionPeriodicity_v1530)), dl_UL_TransmissionPeriodicity_v1530);
};

struct ASN_NR_NAME(TDD_UL_DL_ConfigCommon) {
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) referenceSubcarrierSpacing;
	struct ASN_NR_NAME(TDD_UL_DL_Pattern) pattern1;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(TDD_UL_DL_ConfigCommon), ASN_NR_NAME(TDD_UL_DL_Pattern), pattern2);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms2dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)), ms10)
} ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period));

struct ASN_NR_NAME(SemiStaticChannelAccessConfig) {
	ASN_ENUM(ASN_NR_NAME(SemiStaticChannelAccessConfig, period)) period;
};

SIDL_UNION_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16), dynamic),
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16), semiStatic)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16)_dynamic)
		Null dynamic;
	SIDL_UNION_CASE(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16)_semiStatic)
		struct ASN_NR_NAME(SemiStaticChannelAccessConfig) semiStatic;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms0dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), ms5)
} ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedMeasFlag_r16)), true)
} ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedMeasFlag_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedDemodFlag_r16)), true)
} ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedDemodFlag_r16));

struct ASN_NR_NAME(HighSpeedConfig_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedMeasFlag_r16)), highSpeedMeasFlag_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(HighSpeedConfig_r16, highSpeedDemodFlag_r16)), highSpeedDemodFlag_r16);
};

struct ASN_NR_NAME(ServingCellConfigCommonSIB) {
	struct ASN_NR_NAME(DownlinkConfigCommonSIB) downlinkConfigCommon;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ServingCellConfigCommonSIB), ASN_NR_NAME(UplinkConfigCommonSIB), uplinkConfigCommon);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ServingCellConfigCommonSIB), ASN_NR_NAME(UplinkConfigCommonSIB), supplementaryUplink);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, n_TimingAdvanceOffset)), n_TimingAdvanceOffset);
	struct ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PositionsInBurst) ssb_PositionsInBurst;
	ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, ssb_PeriodicityServingCell)) ssb_PeriodicityServingCell;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ServingCellConfigCommonSIB), ASN_NR_NAME(TDD_UL_DL_ConfigCommon), tdd_UL_DL_ConfigurationCommon);
	int8_t ss_PBCH_BlockPower; // OF (-60..50)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(ServingCellConfigCommonSIB, channelAccessMode_r16), channelAccessMode_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommonSIB, discoveryBurstWindowLength_r16)), discoveryBurstWindowLength_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ServingCellConfigCommonSIB), ASN_NR_NAME(HighSpeedConfig_r16), highSpeedConfig_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB1, ims_EmergencySupport)), true)
} ASN_ENUM(ASN_NR_NAME(SIB1, ims_EmergencySupport));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB1, eCallOverIMS_Support)), true)
} ASN_ENUM(ASN_NR_NAME(SIB1, eCallOverIMS_Support));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)), ms2000)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)), ms2000)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)), ms2000)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)), n20)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms10000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms15000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms20000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)), ms30000)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)), n10)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)), ms2000)
} ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319));

struct ASN_NR_NAME(UE_TimersAndConstants) {
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t300)) t300;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t301)) t301;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t310)) t310;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n310)) n310;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t311)) t311;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, n311)) n311;
	ASN_ENUM(ASN_NR_NAME(UE_TimersAndConstants, t319)) t319;
};

typedef uint8_t ASN_NR_NAME(UAC_BarringInfoSetIndex); // OF (1..8)

struct ASN_NR_NAME(UAC_BarringPerCat) {
	uint8_t accessCategory; // OF (1..63)
	ASN_NR_NAME(UAC_BarringInfoSetIndex) uac_barringInfoSetIndex;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(UAC_BarringPerCat), ASN_NR_NAME(UAC_BarringPerCatList)); // SIZE (1..63)

SIDL_UNION_ENUM(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType), uac_ImplicitACBarringList),
	ASN_ENUM_VAL(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType), uac_ExplicitACBarringList)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType)_uac_ImplicitACBarringList)
		SIDL_STATIC_ARRAY(ASN_NR_NAME(UAC_BarringInfoSetIndex), uac_ImplicitACBarringList, 63); // SIZE (63)
	SIDL_UNION_CASE(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType)_uac_ExplicitACBarringList)
		ASN_NR_NAME(UAC_BarringPerCatList) uac_ExplicitACBarringList;
} SIDL_UNION_END;

struct ASN_NR_NAME(UAC_BarringPerPLMN) {
	uint8_t plmn_IdentityIndex; // OF (1..12)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(UAC_BarringPerPLMN, uac_ACBarringListType), uac_ACBarringListType);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(UAC_BarringPerPLMN), ASN_NR_NAME(UAC_BarringPerPLMN_List)); // SIZE (1..12)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p00),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)), p95)
} ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)), s512)
} ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime));

struct ASN_NR_NAME(UAC_BarringInfoSet) {
	ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringFactor)) uac_BarringFactor;
	ASN_ENUM(ASN_NR_NAME(UAC_BarringInfoSet, uac_BarringTime)) uac_BarringTime;
	B7 uac_BarringForAccessIdentity; // SIZE (7)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(UAC_BarringInfoSet), ASN_NR_NAME(UAC_BarringInfoSetList)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo)), a),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo)), b),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo)), c)
} ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo));

SIDL_UNION_ENUM(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo), plmnCommon),
	ASN_ENUM_VAL(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo), individualPLMNList)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo)_plmnCommon)
		ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo)) plmnCommon;
	SIDL_UNION_CASE(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo)_individualPLMNList)
		SIDL_DYNAMIC(ASN_ENUM(ASN_NR_NAME(UAC_AccessCategory1_SelectionAssistanceInfo)), individualPLMNList); // SIZE (2..12)
} SIDL_UNION_END;

struct ASN_NR_NAME(SIB1, uac_BarringInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, uac_BarringInfo), ASN_NR_NAME(UAC_BarringPerCatList), uac_BarringForCommon);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1, uac_BarringInfo), ASN_NR_NAME(UAC_BarringPerPLMN_List), uac_BarringPerPLMN_List);
	ASN_NR_NAME(UAC_BarringInfoSetList) uac_BarringInfoSetList;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB1, uac_BarringInfo, uac_AccessCategory1_SelectionAssistanceInfo), uac_AccessCategory1_SelectionAssistanceInfo);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB1, useFullResumeID)), true)
} ASN_ENUM(ASN_NR_NAME(SIB1, useFullResumeID));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsEUTRA_r16)), true)
} ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsEUTRA_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsNR_r16)), true)
} ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsNR_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, offsetToSI_Used_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, offsetToSI_Used_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)), rf512)
} ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_BroadcastStatus_r16)), broadcasting),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_BroadcastStatus_r16)), notBroadcasting)
} ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_BroadcastStatus_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, encrypted_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, encrypted_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), gps),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), sbas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), qzss),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), galileo),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), glonass),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)), bds)
} ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16));

struct ASN_NR_NAME(GNSS_ID_r16) {
	ASN_ENUM(ASN_NR_NAME(GNSS_ID_r16, gnss_id_r16)) gnss_id_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16)), waas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16)), egnos),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16)), msas),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16)), gagan)
} ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16));

struct ASN_NR_NAME(SBAS_ID_r16) {
	ASN_ENUM(ASN_NR_NAME(SBAS_ID_r16, sbas_id_r16)) sbas_id_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType1_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_21),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_22),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType2_23),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType3_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType4_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType5_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType6_1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType6_2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)), posSibType6_3)
} ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, areaScope_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, areaScope_r16));

struct ASN_NR_NAME(PosSIB_Type_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, encrypted_r16)), encrypted_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PosSIB_Type_r16), ASN_NR_NAME(GNSS_ID_r16), gnss_id_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PosSIB_Type_r16), ASN_NR_NAME(SBAS_ID_r16), sbas_id_r16);
	ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, posSibType_r16)) posSibType_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PosSIB_Type_r16, areaScope_r16)), areaScope_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PosSIB_Type_r16), ASN_NR_NAME(PosSIB_MappingInfo_r16)); // SIZE (1..32)

struct ASN_NR_NAME(PosSchedulingInfo_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, offsetToSI_Used_r16)), offsetToSI_Used_r16);
	ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_Periodicity_r16)) posSI_Periodicity_r16;
	ASN_ENUM(ASN_NR_NAME(PosSchedulingInfo_r16, posSI_BroadcastStatus_r16)) posSI_BroadcastStatus_r16;
	ASN_NR_NAME(PosSIB_MappingInfo_r16) posSIB_MappingInfo_r16;
};

struct ASN_NR_NAME(PosSI_SchedulingInfo_r16) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PosSI_SchedulingInfo_r16), ASN_NR_NAME(PosSchedulingInfo_r16), posSchedulingInfoList_r16); // SIZE (1..32)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PosSI_SchedulingInfo_r16), ASN_NR_NAME(SI_RequestConfig), posSI_RequestConfig_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PosSI_SchedulingInfo_r16), ASN_NR_NAME(SI_RequestConfig), posSI_RequestConfigSUL_r16);
};

struct ASN_NR_NAME(SIB1_v1610_IEs, nonCriticalExtension) {
};

struct ASN_NR_NAME(SIB1_v1610_IEs) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsEUTRA_r16)), idleModeMeasurementsEUTRA_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB1_v1610_IEs, idleModeMeasurementsNR_r16)), idleModeMeasurementsNR_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1_v1610_IEs), ASN_NR_NAME(PosSI_SchedulingInfo_r16), posSI_SchedulingInfo_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB1_v1610_IEs, nonCriticalExtension), nonCriticalExtension);
};

struct ASN_NR_NAME(SIB1) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB1, cellSelectionInfo), cellSelectionInfo);
	struct ASN_NR_NAME(CellAccessRelatedInfo) cellAccessRelatedInfo;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1), ASN_NR_NAME(ConnEstFailureControl), connEstFailureControl);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1), ASN_NR_NAME(SI_SchedulingInfo), si_SchedulingInfo);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1), ASN_NR_NAME(ServingCellConfigCommonSIB), servingCellConfigCommon);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB1, ims_EmergencySupport)), ims_EmergencySupport);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB1, eCallOverIMS_Support)), eCallOverIMS_Support);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1), ASN_NR_NAME(UE_TimersAndConstants), ue_TimersAndConstants);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SIB1, uac_BarringInfo), uac_BarringInfo);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SIB1, useFullResumeID)), useFullResumeID);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SIB1), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SIB1), ASN_NR_NAME(SIB1_v1610_IEs), nonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1)) {
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1), systemInformation),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1), systemInformationBlockType1)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1)) {
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1)_systemInformation)
		struct ASN_NR_NAME(SystemInformation) systemInformation;
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1)_systemInformationBlockType1)
		struct ASN_NR_NAME(SIB1) systemInformationBlockType1;
} SIDL_UNION_END;

struct ASN_NR_NAME(BCCH_DL_SCH_MessageType, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(BCCH_DL_SCH_MessageType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType), c1),
	ASN_ENUM_VAL(ASN_NR_NAME(BCCH_DL_SCH_MessageType), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(BCCH_DL_SCH_MessageType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_DL_SCH_MessageType)_c1)
		struct ASN_NR_NAME(BCCH_DL_SCH_MessageType, c1) c1;
	SIDL_UNION_CASE(ASN_NR_NAME(BCCH_DL_SCH_MessageType)_messageClassExtension)
		struct ASN_NR_NAME(BCCH_DL_SCH_MessageType, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NR_NAME(BCCH_DL_SCH_Message) {
	struct ASN_NR_NAME(BCCH_DL_SCH_MessageType) message;
};

typedef uint8_t ASN_NR_NAME(BWP_Id); // OF (0..4)

typedef uint8_t ASN_NR_NAME(PUCCH_ResourceSetId); // OF (0..3)

typedef uint8_t ASN_NR_NAME(PUCCH_ResourceId); // OF (0..127)

struct ASN_NR_NAME(PUCCH_ResourceSet) {
	ASN_NR_NAME(PUCCH_ResourceSetId) pucch_ResourceSetId;
	SIDL_DYNAMIC(ASN_NR_NAME(PUCCH_ResourceId), resourceList); // SIZE (1..32)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_ResourceSet), uint16_t, maxPayloadSize); // OF (4..256)
};

typedef uint16_t ASN_NR_NAME(PRB_Id); // OF (0..274)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Resource, intraSlotFrequencyHopping)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUCCH_Resource, intraSlotFrequencyHopping));

struct ASN_NR_NAME(PUCCH_format0) {
	uint8_t initialCyclicShift; // OF (0..11)
	uint8_t nrofSymbols; // OF (1..2)
	uint8_t startingSymbolIndex; // OF (0..13)
};

struct ASN_NR_NAME(PUCCH_format1) {
	uint8_t initialCyclicShift; // OF (0..11)
	uint8_t nrofSymbols; // OF (4..14)
	uint8_t startingSymbolIndex; // OF (0..10)
	uint8_t timeDomainOCC; // OF (0..6)
};

struct ASN_NR_NAME(PUCCH_format2) {
	uint8_t nrofPRBs; // OF (1..16)
	uint8_t nrofSymbols; // OF (1..2)
	uint8_t startingSymbolIndex; // OF (0..13)
};

struct ASN_NR_NAME(PUCCH_format3) {
	uint8_t nrofPRBs; // OF (1..16)
	uint8_t nrofSymbols; // OF (4..14)
	uint8_t startingSymbolIndex; // OF (0..10)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Length)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Length)), n4)
} ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Length));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index)), n3)
} ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index));

struct ASN_NR_NAME(PUCCH_format4) {
	uint8_t nrofSymbols; // OF (4..14)
	ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Length)) occ_Length;
	ASN_ENUM(ASN_NR_NAME(PUCCH_format4, occ_Index)) occ_Index;
	uint8_t startingSymbolIndex; // OF (0..10)
};

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_Resource, format)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), format0),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), format1),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), format2),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), format3),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Resource, format), format4)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_Resource, format)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Resource, format)_format0)
		struct ASN_NR_NAME(PUCCH_format0) format0;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Resource, format)_format1)
		struct ASN_NR_NAME(PUCCH_format1) format1;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Resource, format)_format2)
		struct ASN_NR_NAME(PUCCH_format2) format2;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Resource, format)_format3)
		struct ASN_NR_NAME(PUCCH_format3) format3;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Resource, format)_format4)
		struct ASN_NR_NAME(PUCCH_format4) format4;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_Resource) {
	ASN_NR_NAME(PUCCH_ResourceId) pucch_ResourceId;
	ASN_NR_NAME(PRB_Id) startingPRB;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Resource, intraSlotFrequencyHopping)), intraSlotFrequencyHopping);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Resource), ASN_NR_NAME(PRB_Id), secondHopPRB);
	struct ASN_NR_NAME(PUCCH_Resource, format) format;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, interslotFrequencyHopping)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, interslotFrequencyHopping));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, additionalDMRS)), true)
} ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, additionalDMRS));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot08),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), zeroDot80)
} ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, nrofSlots)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, nrofSlots)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, nrofSlots)), n8)
} ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, nrofSlots));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, pi2BPSK)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, pi2BPSK));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, simultaneousHARQ_ACK_CSI)), true)
} ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, simultaneousHARQ_ACK_CSI));

struct ASN_NR_NAME(PUCCH_FormatConfig) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, interslotFrequencyHopping)), interslotFrequencyHopping);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, additionalDMRS)), additionalDMRS);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_FormatConfig), ASN_ENUM(ASN_NR_NAME(PUCCH_MaxCodeRate)), maxCodeRate);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, nrofSlots)), nrofSlots);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, pi2BPSK)), pi2BPSK);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_FormatConfig, simultaneousHARQ_ACK_CSI)), simultaneousHARQ_ACK_CSI);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format1)_setup)
		struct ASN_NR_NAME(PUCCH_FormatConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format2)_setup)
		struct ASN_NR_NAME(PUCCH_FormatConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format3)_setup)
		struct ASN_NR_NAME(PUCCH_FormatConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, format4)_setup)
		struct ASN_NR_NAME(PUCCH_FormatConfig) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(SchedulingRequestResourceId); // OF (1..8)

typedef uint8_t ASN_NR_NAME(SchedulingRequestId); // OF (0..7)

SIDL_UNION_ENUM(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sym2),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sym6or7),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl1),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl2),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl4),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl5),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl8),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl10),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl16),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl20),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl40),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl80),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl160),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl320),
	ASN_ENUM_VAL(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), sl640)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sym2)
		Null sym2;
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sym6or7)
		Null sym6or7;
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl1)
		Null sl1;
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl2)
		uint8_t sl2; // OF (0..1)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl4)
		uint8_t sl4; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl5)
		uint8_t sl5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl8)
		uint8_t sl8; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl10)
		uint8_t sl10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl16)
		uint8_t sl16; // OF (0..15)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl20)
		uint8_t sl20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl40)
		uint8_t sl40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl80)
		uint8_t sl80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl160)
		uint8_t sl160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl320)
		uint16_t sl320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset)_sl640)
		uint16_t sl640; // OF (0..639)
} SIDL_UNION_END;

struct ASN_NR_NAME(SchedulingRequestResourceConfig) {
	ASN_NR_NAME(SchedulingRequestResourceId) schedulingRequestResourceId;
	ASN_NR_NAME(SchedulingRequestId) schedulingRequestID;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SchedulingRequestResourceConfig, periodicityAndOffset), periodicityAndOffset);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SchedulingRequestResourceConfig), ASN_NR_NAME(PUCCH_ResourceId), resource);
};

typedef uint8_t ASN_NR_NAME(PUCCH_SpatialRelationInfoId); // OF (1..8)

typedef uint8_t ASN_NR_NAME(ServCellIndex); // OF (0..31)

typedef uint8_t ASN_NR_NAME(SSB_Index); // OF (0..63)

typedef uint8_t ASN_NR_NAME(NZP_CSI_RS_ResourceId); // OF (0..191)

typedef uint8_t ASN_NR_NAME(SRS_ResourceId); // OF (0..63)

struct ASN_NR_NAME(PUCCH_SRS) {
	ASN_NR_NAME(SRS_ResourceId) resource;
	ASN_NR_NAME(BWP_Id) uplinkBWP;
};

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal), ssb_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal), csi_RS_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal), srs)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal)_ssb_Index)
		ASN_NR_NAME(SSB_Index) ssb_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal)_csi_RS_Index)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal)_srs)
		struct ASN_NR_NAME(PUCCH_SRS) srs;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id); // OF (0..3)

typedef uint8_t ASN_NR_NAME(P0_PUCCH_Id); // OF (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_SpatialRelationInfo, closedLoopIndex)), i0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_SpatialRelationInfo, closedLoopIndex)), i1)
} ASN_ENUM(ASN_NR_NAME(PUCCH_SpatialRelationInfo, closedLoopIndex));

struct ASN_NR_NAME(PUCCH_SpatialRelationInfo) {
	ASN_NR_NAME(PUCCH_SpatialRelationInfoId) pucch_SpatialRelationInfoId;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_SpatialRelationInfo), ASN_NR_NAME(ServCellIndex), servingCellId);
	struct ASN_NR_NAME(PUCCH_SpatialRelationInfo, referenceSignal) referenceSignal;
	ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id) pucch_PathlossReferenceRS_Id;
	ASN_NR_NAME(P0_PUCCH_Id) p0_PUCCH_Id;
	ASN_ENUM(ASN_NR_NAME(PUCCH_SpatialRelationInfo, closedLoopIndex)) closedLoopIndex;
};

struct ASN_NR_NAME(P0_PUCCH) {
	ASN_NR_NAME(P0_PUCCH_Id) p0_PUCCH_Id;
	int8_t p0_PUCCH_Value; // OF (-16..15)
};

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal), ssb_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal), csi_RS_Index)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal)_ssb_Index)
		ASN_NR_NAME(SSB_Index) ssb_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal)_csi_RS_Index)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_PathlossReferenceRS) {
	ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id) pucch_PathlossReferenceRS_Id;
	struct ASN_NR_NAME(PUCCH_PathlossReferenceRS, referenceSignal) referenceSignal;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_PowerControl, twoPUCCH_PC_AdjustmentStates)), twoStates)
} ASN_ENUM(ASN_NR_NAME(PUCCH_PowerControl, twoPUCCH_PC_AdjustmentStates));

typedef uint8_t ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id_v1610); // OF (4..63)

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16), ssb_Index_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16), csi_RS_Index_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16)_ssb_Index_r16)
		ASN_NR_NAME(SSB_Index) ssb_Index_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16)_csi_RS_Index_r16)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16) {
	ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id_v1610) pucch_PathlossReferenceRS_Id_r16;
	struct ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16, referenceSignal_r16) referenceSignal_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PUCCH_PathlossReferenceRS_r16), ASN_NR_NAME(PathlossReferenceRSs_v1610)); // SIZE (1..60)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610)_setup)
		ASN_NR_NAME(PathlossReferenceRSs_v1610) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_PowerControl) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), int8_t, deltaF_PUCCH_f0); // OF (-16..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), int8_t, deltaF_PUCCH_f1); // OF (-16..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), int8_t, deltaF_PUCCH_f2); // OF (-16..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), int8_t, deltaF_PUCCH_f3); // OF (-16..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), int8_t, deltaF_PUCCH_f4); // OF (-16..15)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), ASN_NR_NAME(P0_PUCCH), p0_Set); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), ASN_NR_NAME(PUCCH_PathlossReferenceRS), pathlossReferenceRSs); // SIZE (1..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_PowerControl, twoPUCCH_PC_AdjustmentStates)), twoPUCCH_PC_AdjustmentStates);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_PowerControl), ASN_NR_NAME(SetupRelease_PUCCH_PowerControl, pathlossReferenceRSs_v1610), pathlossReferenceRSs_v1610);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0), scs15),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0), scs30)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0)_scs15)
		uint8_t scs15; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0)_scs30)
		uint8_t scs30; // OF (0..4)
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16) {
	uint8_t rb_SetIndex; // OF (0..4)
	struct ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16, interlace0) interlace0;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Length_v1610)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Length_v1610)), n4)
} ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Length_v1610));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610)), n3)
} ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610));

struct ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Length_v1610)), occ_Length_v1610);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610, occ_Index_v1610)), occ_Index_v1610);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610), interlace1_v1610),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610), occ_v1610)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610)_interlace1_v1610)
		uint8_t interlace1_v1610; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610)_occ_v1610)
		struct ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610, occ_v1610) occ_v1610;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUCCH_ResourceExt_r16) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PUCCH_ResourceExt_r16, interlaceAllocation_r16), interlaceAllocation_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PUCCH_ResourceExt_r16, formatExt_v1610), formatExt_v1610);
};

typedef SIDL_DYNAMIC(int8_t, ASN_NR_NAME(DL_DataToUL_ACK_r16)); // SIZE (1..8) OF (-1..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16)_setup)
		ASN_NR_NAME(DL_DataToUL_ACK_r16) setup;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(uint8_t, ASN_NR_NAME(UL_AccessConfigListDCI_1_1_r16)); // SIZE (1..16) OF (0..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16)_setup)
		ASN_NR_NAME(UL_AccessConfigListDCI_1_1_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, normalCP_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, normalCP_r16)), n7)
} ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, normalCP_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, extendedCP_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, extendedCP_r16)), n6)
} ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, extendedCP_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16), normalCP_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16), extendedCP_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16)_normalCP_r16)
		ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, normalCP_r16)) normalCP_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16)_extendedCP_r16)
		ASN_ENUM(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16, extendedCP_r16)) extendedCP_r16;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(uint8_t, ASN_NR_NAME(DL_DataToUL_ACK_DCI_1_2_r16)); // SIZE (1..8) OF (0..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16)_setup)
		ASN_NR_NAME(DL_DataToUL_ACK_DCI_1_2_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, dmrs_UplinkTransformPrecodingPUCCH_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUCCH_Config, dmrs_UplinkTransformPrecodingPUCCH_r16));

typedef uint8_t ASN_NR_NAME(PUCCH_SpatialRelationInfoId_v1610); // OF (9..64)

struct ASN_NR_NAME(PUCCH_SpatialRelationInfoExt_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_SpatialRelationInfoExt_r16), ASN_NR_NAME(PUCCH_SpatialRelationInfoId_v1610), pucch_SpatialRelationInfoId_v1610);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_SpatialRelationInfoExt_r16), ASN_NR_NAME(PUCCH_PathlossReferenceRS_Id_v1610), pucch_PathlossReferenceRS_Id_v1610);
};

typedef uint8_t ASN_NR_NAME(PUCCH_SpatialRelationInfoId_r16); // OF (1..64)

typedef uint8_t ASN_NR_NAME(PUCCH_ResourceGroupId_r16); // OF (0..3)

struct ASN_NR_NAME(PUCCH_ResourceGroup_r16) {
	ASN_NR_NAME(PUCCH_ResourceGroupId_r16) pucch_ResourceGroupId_r16;
	SIDL_DYNAMIC(ASN_NR_NAME(PUCCH_ResourceId), resourcePerGroupList_r16); // SIZE (1..128)
};

struct ASN_NR_NAME(SPS_PUCCH_AN_r16) {
	ASN_NR_NAME(PUCCH_ResourceId) sps_PUCCH_AN_ResourceID_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_PUCCH_AN_r16), uint16_t, maxPayloadSize_r16); // OF (4..256)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(SPS_PUCCH_AN_r16), ASN_NR_NAME(SPS_PUCCH_AN_List_r16)); // SIZE (1..4)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16)_setup)
		ASN_NR_NAME(SPS_PUCCH_AN_List_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestResourceConfig_v1610, phy_PriorityIndex_r16)), p0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestResourceConfig_v1610, phy_PriorityIndex_r16)), p1)
} ASN_ENUM(ASN_NR_NAME(SchedulingRequestResourceConfig_v1610, phy_PriorityIndex_r16));

struct ASN_NR_NAME(SchedulingRequestResourceConfig_v1610) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestResourceConfig_v1610, phy_PriorityIndex_r16)), phy_PriorityIndex_r16);
};

struct ASN_NR_NAME(PUCCH_Config) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceSet), resourceSetToAddModList); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceSetId), resourceSetToReleaseList); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_Resource), resourceToAddModList); // SIZE (1..128)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceId), resourceToReleaseList); // SIZE (1..128)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, format1), format1);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, format2), format2);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, format3), format3);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, format4), format4);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SchedulingRequestResourceConfig), schedulingRequestResourceToAddModList); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SchedulingRequestResourceId), schedulingRequestResourceToReleaseList); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceId), multi_CSI_PUCCH_ResourceList); // SIZE (1..2)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), uint8_t, dl_DataToUL_ACK); // SIZE (1..8) OF (0..15)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfo), spatialRelationInfoToAddModList); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfoId), spatialRelationInfoToReleaseList); // SIZE (1..8)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_PowerControl), pucch_PowerControl);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceExt_r16), resourceToAddModListExt_r16); // SIZE (1..128)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_r16), dl_DataToUL_ACK_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, ul_AccessConfigListDCI_1_1_r16), ul_AccessConfigListDCI_1_1_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PUCCH_Config, subslotLengthForPUCCH_r16), subslotLengthForPUCCH_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, dl_DataToUL_ACK_DCI_1_2_r16), dl_DataToUL_ACK_DCI_1_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), uint8_t, numberOfBitsForPUCCH_ResourceIndicatorDCI_1_2_r16); // OF (0..3)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUCCH_Config, dmrs_UplinkTransformPrecodingPUCCH_r16)), dmrs_UplinkTransformPrecodingPUCCH_r16);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfo), spatialRelationInfoToAddModList2_r16); // SIZE (1..56)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfoId), spatialRelationInfoToReleaseList2_r16); // SIZE (1..56)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfoExt_r16), spatialRelationInfoToAddModListExt_r16); // SIZE (1..64)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_SpatialRelationInfoId_r16), spatialRelationInfoToReleaseList_r16); // SIZE (1..64)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceGroup_r16), resourceGroupToAddModList_r16); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ResourceGroupId_r16), resourceGroupToReleaseList_r16); // SIZE (1..4)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SetupRelease_PUCCH_Config, sps_PUCCH_AN_List_r16), sps_PUCCH_AN_List_r16);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(SchedulingRequestResourceConfig_v1610), schedulingRequestResourceToAddModList_v1610); // SIZE (1..8)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config)_setup)
		struct ASN_NR_NAME(PUCCH_Config) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, txConfig)), codebook),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, txConfig)), nonCodebook)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, txConfig));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_Type)), type2)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_Type));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_AdditionalPosition)), pos0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_AdditionalPosition)), pos1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_AdditionalPosition)), pos3)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_AdditionalPosition));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, maxNrofPorts)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, maxNrofPorts)), n2)
} ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, maxNrofPorts));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, resourceElementOffset)), offset01),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, resourceElementOffset)), offset10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, resourceElementOffset)), offset11)
} ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, resourceElementOffset));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power)), p00),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power)), p01),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power)), p10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power)), p11)
} ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power));

struct ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled) {
	SIDL_ARRAY_OPTIONAL_WITH_PFX(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled), uint16_t, frequencyDensity, 2); // SIZE (2) OF (1..276)
	SIDL_ARRAY_OPTIONAL_WITH_PFX(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled), uint8_t, timeDensity, 3); // SIZE (3) OF (0..29)
	ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, maxNrofPorts)) maxNrofPorts;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, resourceElementOffset)), resourceElementOffset);
	ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled, ptrs_Power)) ptrs_Power;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderEnabled, timeDensityTransformPrecoding)), d2)
} ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderEnabled, timeDensityTransformPrecoding));

struct ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderEnabled) {
	SIDL_STATIC_ARRAY(uint16_t, sampleDensity, 5); // SIZE (5) OF (1..276)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderEnabled, timeDensityTransformPrecoding)), timeDensityTransformPrecoding);
};

struct ASN_NR_NAME(PTRS_UplinkConfig) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderDisabled), transformPrecoderDisabled);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PTRS_UplinkConfig, transformPrecoderEnabled), transformPrecoderEnabled);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS)_setup)
		struct ASN_NR_NAME(PTRS_UplinkConfig) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, maxLength)), len2)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, maxLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled, dmrs_Uplink_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled, dmrs_Uplink_r16));

struct ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled), uint16_t, scramblingID0); // OF (0..65535)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled), uint16_t, scramblingID1); // OF (0..65535)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled, dmrs_Uplink_r16)), dmrs_Uplink_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceGroupHopping)), disabled)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceGroupHopping));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceHopping)), enabled)
} ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceHopping));

struct ASN_NR_NAME(DMRS_UplinkTransformPrecoding_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_UplinkTransformPrecoding_r16), uint16_t, pi2BPSK_ScramblingID0); // OF (0..65535)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_UplinkTransformPrecoding_r16), uint16_t, pi2BPSK_ScramblingID1); // OF (0..65535)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16)_setup)
		struct ASN_NR_NAME(DMRS_UplinkTransformPrecoding_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled), uint16_t, nPUSCH_Identity); // OF (0..1007)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceGroupHopping)), sequenceGroupHopping);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled, sequenceHopping)), sequenceHopping);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled), ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, transformPrecodingEnabled, dmrs_UplinkTransformPrecoding_r16), dmrs_UplinkTransformPrecoding_r16);
};

struct ASN_NR_NAME(DMRS_UplinkConfig) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_Type)), dmrs_Type);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, dmrs_AdditionalPosition)), dmrs_AdditionalPosition);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(DMRS_UplinkConfig), ASN_NR_NAME(SetupRelease_DMRS_UplinkConfig, phaseTrackingRS), phaseTrackingRS);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_UplinkConfig, maxLength)), maxLength);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingDisabled), transformPrecodingDisabled);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(DMRS_UplinkConfig, transformPrecodingEnabled), transformPrecodingEnabled);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA)_setup)
		struct ASN_NR_NAME(DMRS_UplinkConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB)_setup)
		struct ASN_NR_NAME(DMRS_UplinkConfig) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, tpc_Accumulation)), disabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, tpc_Accumulation));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha04),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha05),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha06),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha07),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha08),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha09),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(Alpha)), alpha1)
} ASN_ENUM(ASN_NR_NAME(Alpha));

typedef uint8_t ASN_NR_NAME(P0_PUSCH_AlphaSetId); // OF (0..29)

struct ASN_NR_NAME(P0_PUSCH_AlphaSet) {
	ASN_NR_NAME(P0_PUSCH_AlphaSetId) p0_PUSCH_AlphaSetId;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(P0_PUSCH_AlphaSet), int8_t, p0); // OF (-16..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(P0_PUSCH_AlphaSet), ASN_ENUM(ASN_NR_NAME(Alpha)), alpha);
};

typedef uint8_t ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id); // OF (0..3)

SIDL_UNION_ENUM(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal), ssb_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal), csi_RS_Index)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal)_ssb_Index)
		ASN_NR_NAME(SSB_Index) ssb_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal)_csi_RS_Index)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUSCH_PathlossReferenceRS) {
	ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id) pusch_PathlossReferenceRS_Id;
	struct ASN_NR_NAME(PUSCH_PathlossReferenceRS, referenceSignal) referenceSignal;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, twoPUSCH_PC_AdjustmentStates)), twoStates)
} ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, twoPUSCH_PC_AdjustmentStates));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, deltaMCS)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, deltaMCS));

typedef uint8_t ASN_NR_NAME(SRI_PUSCH_PowerControlId); // OF (0..15)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRI_PUSCH_PowerControl, sri_PUSCH_ClosedLoopIndex)), i0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRI_PUSCH_PowerControl, sri_PUSCH_ClosedLoopIndex)), i1)
} ASN_ENUM(ASN_NR_NAME(SRI_PUSCH_PowerControl, sri_PUSCH_ClosedLoopIndex));

struct ASN_NR_NAME(SRI_PUSCH_PowerControl) {
	ASN_NR_NAME(SRI_PUSCH_PowerControlId) sri_PUSCH_PowerControlId;
	ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id) sri_PUSCH_PathlossReferenceRS_Id;
	ASN_NR_NAME(P0_PUSCH_AlphaSetId) sri_P0_PUSCH_AlphaSetId;
	ASN_ENUM(ASN_NR_NAME(SRI_PUSCH_PowerControl, sri_PUSCH_ClosedLoopIndex)) sri_PUSCH_ClosedLoopIndex;
};

struct ASN_NR_NAME(PUSCH_PowerControl) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, tpc_Accumulation)), tpc_Accumulation);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_ENUM(ASN_NR_NAME(Alpha)), msg3_Alpha);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), int16_t, p0_NominalWithoutGrant); // OF (-202..24)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_NR_NAME(P0_PUSCH_AlphaSet), p0_AlphaSets); // SIZE (1..30)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_NR_NAME(PUSCH_PathlossReferenceRS), pathlossReferenceRSToAddModList); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id), pathlossReferenceRSToReleaseList); // SIZE (1..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, twoPUSCH_PC_AdjustmentStates)), twoPUSCH_PC_AdjustmentStates);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_PowerControl, deltaMCS)), deltaMCS);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_NR_NAME(SRI_PUSCH_PowerControl), sri_PUSCH_MappingToAddModList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl), ASN_NR_NAME(SRI_PUSCH_PowerControlId), sri_PUSCH_MappingToReleaseList); // SIZE (1..16)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHopping)), intraSlot),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHopping)), interSlot)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHopping));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocation)), resourceAllocationType0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocation)), resourceAllocationType1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocation)), dynamicSwitch)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocation));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList)_setup)
		ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_AggregationFactor)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_AggregationFactor)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_AggregationFactor)), n8)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_AggregationFactor));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_Table)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_Table)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_Table));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoder)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoder)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoder));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, transformPrecoder)), enabled),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, transformPrecoder)), disabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, transformPrecoder));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubset)), fullyAndPartialAndNonCoherent),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubset)), partialAndNonCoherent),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubset)), nonCoherent)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubset));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, rbg_Size)), config2)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, rbg_Size));

struct ASN_NR_NAME(BetaOffsets) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetACK_Index1); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetACK_Index2); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetACK_Index3); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetCSI_Part1_Index1); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetCSI_Part1_Index2); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetCSI_Part2_Index1); // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BetaOffsets), uint8_t, betaOffsetCSI_Part2_Index2); // OF (0..31)
};

SIDL_UNION_ENUM(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets)) {
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets), dynamic),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets), semiStatic)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets)) {
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets)_dynamic)
		SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NR_NAME(BetaOffsets), dynamic, 4); // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets)_semiStatic)
		struct ASN_NR_NAME(BetaOffsets) semiStatic;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling)), f0p5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling)), f0p65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling)), f0p8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling)), f1)
} ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling));

struct ASN_NR_NAME(UCI_OnPUSCH) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(UCI_OnPUSCH, betaOffsets), betaOffsets);
	ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH, scaling)) scaling;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH)_setup)
		struct ASN_NR_NAME(UCI_OnPUSCH) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, tp_pi2BPSK)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, tp_pi2BPSK));

typedef SIDL_DYNAMIC(uint8_t, ASN_NR_NAME(MinSchedulingOffsetK2_Values_r16)); // SIZE (1..2) OF (0..16)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16)_setup)
		ASN_NR_NAME(MinSchedulingOffsetK2_Values_r16) setup;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(uint8_t, ASN_NR_NAME(UL_AccessConfigListDCI_0_1_r16)); // SIZE (1..64) OF (0..63)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16)_setup)
		ASN_NR_NAME(UL_AccessConfigListDCI_0_1_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, dmrs_SequenceInitializationDCI_0_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, dmrs_SequenceInitializationDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, antennaPortsFieldPresenceDCI_0_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, antennaPortsFieldPresenceDCI_0_2_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16)_setup)
		struct ASN_NR_NAME(DMRS_UplinkConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16)_setup)
		struct ASN_NR_NAME(DMRS_UplinkConfig) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeA)), intraSlot),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeA)), interSlot)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeA));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeB)), interRepetition),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeB)), interSlot)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeB));

SIDL_UNION_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16), pusch_RepTypeA),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16), pusch_RepTypeB)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16)_pusch_RepTypeA)
		ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeA)) pusch_RepTypeA;
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16)_pusch_RepTypeB)
		ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16, pusch_RepTypeB)) pusch_RepTypeB;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(uint16_t, ASN_NR_NAME(FrequencyHoppingOffsetListsDCI_0_2_r16)); // SIZE (1..4) OF (1..274)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16)_setup)
		ASN_NR_NAME(FrequencyHoppingOffsetListsDCI_0_2_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubsetDCI_0_2_r16)), fullyAndPartialAndNonCoherent),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubsetDCI_0_2_r16)), partialAndNonCoherent),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubsetDCI_0_2_r16)), nonCoherent)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubsetDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableDCI_0_2_r16)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableDCI_0_2_r16)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoderDCI_0_2_r16)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoderDCI_0_2_r16)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoderDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_2_r16)), pusch_RepTypeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_2_r16)), pusch_RepTypeB)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationDCI_0_2_r16)), resourceAllocationType0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationDCI_0_2_r16)), resourceAllocationType1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationDCI_0_2_r16)), dynamicSwitch)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16)), n16)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16), oneBit_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16), twoBits_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16)_oneBit_r16)
		SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NR_NAME(BetaOffsets), oneBit_r16, 2); // SIZE (2)
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16)_twoBits_r16)
		SIDL_STATIC_ARRAY_OF_STRUCT(ASN_NR_NAME(BetaOffsets), twoBits_r16, 4); // SIZE (4)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16), dynamicDCI_0_2_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16), semiStaticDCI_0_2_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16)_dynamicDCI_0_2_r16)
		struct ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16, dynamicDCI_0_2_r16) dynamicDCI_0_2_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16)_semiStaticDCI_0_2_r16)
		struct ASN_NR_NAME(BetaOffsets) semiStaticDCI_0_2_r16;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16)), f0p5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16)), f0p65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16)), f0p8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16)), f1)
} ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16));

struct ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, betaOffsetsDCI_0_2_r16), betaOffsetsDCI_0_2_r16);
	ASN_ENUM(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16, scalingDCI_0_2_r16)) scalingDCI_0_2_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(UCI_OnPUSCH_DCI_0_2_r16), ASN_NR_NAME(UCI_OnPUSCH_ListDCI_0_2_r16)); // SIZE (1..2)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16)_setup)
		ASN_NR_NAME(UCI_OnPUSCH_ListDCI_0_2_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, mappingType_r16)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, mappingType_r16)), typeB)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, mappingType_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), n16)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16));

struct ASN_NR_NAME(PUSCH_Allocation_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, mappingType_r16)), mappingType_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Allocation_r16), uint8_t, startSymbolAndLength_r16); // OF (0..127)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Allocation_r16), uint8_t, startSymbol_r16); // OF (0..13)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Allocation_r16), uint8_t, length_r16); // OF (1..14)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Allocation_r16, numberOfRepetitions_r16)), numberOfRepetitions_r16);
};

struct ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation_r16), uint8_t, k2_r16); // OF (0..32)
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation_r16), ASN_NR_NAME(PUSCH_Allocation_r16), puschAllocationList_r16); // SIZE (1..8)
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PUSCH_TimeDomainResourceAllocation_r16), ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList_r16)); // SIZE (1..64)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16)_setup)
		ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList_r16) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16)_setup)
		ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_1_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_1_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_1_r16)), pusch_RepTypeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_1_r16)), pusch_RepTypeB)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_1_r16)), interRepetition),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_1_r16)), interSlot)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_1_r16));

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(UCI_OnPUSCH), ASN_NR_NAME(UCI_OnPUSCH_ListDCI_0_1_r16)); // SIZE (1..2)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16)_setup)
		ASN_NR_NAME(UCI_OnPUSCH_ListDCI_0_1_r16) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16), oneSlot),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16), twoSlots)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16)_oneSlot)
		B14 oneSlot; // SIZE (14)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16)_twoSlots)
		B28 twoSlots; // SIZE (28)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n2),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n4),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n5),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n8),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n10),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n20),
	ASN_ENUM_VAL(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), n40)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n2)
		B2 n2; // SIZE (2)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n4)
		B4 n4; // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n5)
		B5 n5; // SIZE (5)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n8)
		B8 n8; // SIZE (8)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n10)
		B10 n10; // SIZE (10)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n20)
		B20 n20; // SIZE (20)
	SIDL_UNION_CASE(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16)_n40)
		B40 n40; // SIZE (40)
} SIDL_UNION_END;

struct ASN_NR_NAME(InvalidSymbolPattern_r16) {
	struct ASN_NR_NAME(InvalidSymbolPattern_r16, symbols_r16) symbols_r16;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(InvalidSymbolPattern_r16, periodicityAndPattern_r16), periodicityAndPattern_r16);
};

typedef uint8_t ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id_v1610); // OF (4..63)

SIDL_UNION_ENUM(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16), ssb_Index_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16), csi_RS_Index_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16)_ssb_Index_r16)
		ASN_NR_NAME(SSB_Index) ssb_Index_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16)_csi_RS_Index_r16)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16) {
	ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id_v1610) pusch_PathlossReferenceRS_Id_r16;
	struct ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16, referenceSignal_r16) referenceSignal_r16;
};

typedef uint8_t ASN_NR_NAME(P0_PUSCH_SetId_r16); // OF (0..15)

typedef int8_t ASN_NR_NAME(P0_PUSCH_r16); // OF (-16..15)

struct ASN_NR_NAME(P0_PUSCH_Set_r16) {
	ASN_NR_NAME(P0_PUSCH_SetId_r16) p0_PUSCH_SetId_r16;
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(P0_PUSCH_Set_r16), ASN_NR_NAME(P0_PUSCH_r16), p0_List_r16); // SIZE (1..2)
};

struct ASN_NR_NAME(PUSCH_PowerControl_v1610, olpc_ParameterSet) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl_v1610, olpc_ParameterSet), uint8_t, olpc_ParameterSetDCI_0_1_r16); // OF (1..2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl_v1610, olpc_ParameterSet), uint8_t, olpc_ParameterSetDCI_0_2_r16); // OF (1..2)
};

struct ASN_NR_NAME(PUSCH_PowerControl_v1610) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl_v1610), ASN_NR_NAME(PUSCH_PathlossReferenceRS_r16), pathlossReferenceRSToAddModList2_r16); // SIZE (1..60)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl_v1610), ASN_NR_NAME(PUSCH_PathlossReferenceRS_Id_v1610), pathlossReferenceRSToReleaseList2_r16); // SIZE (1..60)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_PowerControl_v1610), ASN_NR_NAME(P0_PUSCH_Set_r16), p0_PUSCH_SetList_r16); // SIZE (1..16)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PUSCH_PowerControl_v1610, olpc_ParameterSet), olpc_ParameterSet);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610)_setup)
		struct ASN_NR_NAME(PUSCH_PowerControl_v1610) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, ul_FullPowerTransmission_r16)), fullpower),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, ul_FullPowerTransmission_r16)), fullpowerMode1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, ul_FullPowerTransmission_r16)), fullpoweMode2)
} ASN_ENUM(ASN_NR_NAME(PUSCH_Config, ul_FullPowerTransmission_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16)_setup)
		ASN_NR_NAME(PUSCH_TimeDomainResourceAllocationList_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUSCH_Config) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint16_t, dataScramblingIdentityPUSCH); // OF (0..1023)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, txConfig)), txConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA), dmrs_UplinkForPUSCH_MappingTypeA);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB), dmrs_UplinkForPUSCH_MappingTypeB);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(PUSCH_PowerControl), pusch_PowerControl);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHopping)), frequencyHopping);
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint16_t, frequencyHoppingOffsetLists); // SIZE (1..4) OF (1..274)
	ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocation)) resourceAllocation;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationList), pusch_TimeDomainAllocationList);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_AggregationFactor)), pusch_AggregationFactor);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_Table)), mcs_Table);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoder)), mcs_TableTransformPrecoder);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, transformPrecoder)), transformPrecoder);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubset)), codebookSubset);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint8_t, maxRank); // OF (1..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, rbg_Size)), rbg_Size);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH), uci_OnPUSCH);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, tp_pi2BPSK)), tp_pi2BPSK);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, minimumSchedulingOffsetK2_r16), minimumSchedulingOffsetK2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, ul_AccessConfigListDCI_0_1_r16), ul_AccessConfigListDCI_0_1_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint8_t, harq_ProcessNumberSizeDCI_0_2_r16); // OF (0..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, dmrs_SequenceInitializationDCI_0_2_r16)), dmrs_SequenceInitializationDCI_0_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint8_t, numberOfBitsForRV_DCI_0_2_r16); // OF (0..2)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, antennaPortsFieldPresenceDCI_0_2_r16)), antennaPortsFieldPresenceDCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16), dmrs_UplinkForPUSCH_MappingTypeA_DCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16), dmrs_UplinkForPUSCH_MappingTypeB_DCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_2_r16), frequencyHoppingDCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, frequencyHoppingOffsetListsDCI_0_2_r16), frequencyHoppingOffsetListsDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, codebookSubsetDCI_0_2_r16)), codebookSubsetDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_2_r16)), invalidSymbolPatternIndicatorDCI_0_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint8_t, maxRankDCI_0_2_r16); // OF (1..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableDCI_0_2_r16)), mcs_TableDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, mcs_TableTransformPrecoderDCI_0_2_r16)), mcs_TableTransformPrecoderDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_2_r16)), priorityIndicatorDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_2_r16)), pusch_RepTypeIndicatorDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationDCI_0_2_r16)), resourceAllocationDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, resourceAllocationType1GranularityDCI_0_2_r16)), resourceAllocationType1GranularityDCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_2_r16), uci_OnPUSCH_ListDCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_2_r16), pusch_TimeDomainAllocationListDCI_0_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListDCI_0_1_r16), pusch_TimeDomainAllocationListDCI_0_1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, invalidSymbolPatternIndicatorDCI_0_1_r16)), invalidSymbolPatternIndicatorDCI_0_1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, priorityIndicatorDCI_0_1_r16)), priorityIndicatorDCI_0_1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, pusch_RepTypeIndicatorDCI_0_1_r16)), pusch_RepTypeIndicatorDCI_0_1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, frequencyHoppingDCI_0_1_r16)), frequencyHoppingDCI_0_1_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, uci_OnPUSCH_ListDCI_0_1_r16), uci_OnPUSCH_ListDCI_0_1_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(InvalidSymbolPattern_r16), invalidSymbolPattern_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_PowerControl_v1610), pusch_PowerControl_v1610);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_Config, ul_FullPowerTransmission_r16)), ul_FullPowerTransmission_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_Config), ASN_NR_NAME(SetupRelease_PUSCH_Config, pusch_TimeDomainAllocationListForMultiPUSCH_r16), pusch_TimeDomainAllocationListForMultiPUSCH_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_Config), uint8_t, numberOfInvalidSymbolsForDL_UL_Switching_r16); // OF (1..4)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config)_setup)
		struct ASN_NR_NAME(PUSCH_Config) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, frequencyHopping)), intraSlot),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, frequencyHopping)), interSlot)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, frequencyHopping));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_Table)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_Table)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_Table));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_TableTransformPrecoder)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_TableTransformPrecoder)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_TableTransformPrecoder));

SIDL_UNION_ENUM(ASN_NR_NAME(CG_UCI_OnPUSCH)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CG_UCI_OnPUSCH), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CG_UCI_OnPUSCH), dynamic),
	ASN_ENUM_VAL(ASN_NR_NAME(CG_UCI_OnPUSCH), semiStatic)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CG_UCI_OnPUSCH)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CG_UCI_OnPUSCH)_dynamic)
		SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(CG_UCI_OnPUSCH), ASN_NR_NAME(BetaOffsets), dynamic); // SIZE (1..4)
	SIDL_UNION_CASE(ASN_NR_NAME(CG_UCI_OnPUSCH)_semiStatic)
		struct ASN_NR_NAME(BetaOffsets) semiStatic;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH)_setup)
		struct ASN_NR_NAME(CG_UCI_OnPUSCH) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, resourceAllocation)), resourceAllocationType0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, resourceAllocation)), resourceAllocationType1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, resourceAllocation)), dynamicSwitch)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, resourceAllocation));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rbg_Size)), config2)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rbg_Size));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, powerControlLoopToUse)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, powerControlLoopToUse)), n1)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, powerControlLoopToUse));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, transformPrecoder)), enabled),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, transformPrecoder)), disabled)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, transformPrecoder));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK)), n8)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK_RV)), s1_0231),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK_RV)), s2_0303),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK_RV)), s3_0000)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK_RV));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym1x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym2x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym4x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym5x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym8x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym10x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym16x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym20x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym32x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym40x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym64x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym80x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym128x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym160x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym256x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym320x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym512x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym640x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym1024x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym1280x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym2560x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym5120x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym1x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym2x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym4x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym5x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym8x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym10x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym16x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym20x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym32x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym40x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym64x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym80x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym128x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym160x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym256x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym320x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym512x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym640x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym1280x12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)), sym2560x12)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, pusch_RepTypeIndicator_r16)), pusch_RepTypeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, pusch_RepTypeIndicator_r16)), pusch_RepTypeB)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, pusch_RepTypeIndicator_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, frequencyHoppingPUSCH_RepTypeB_r16)), interRepetition),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, frequencyHoppingPUSCH_RepTypeB_r16)), interSlot)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, frequencyHoppingPUSCH_RepTypeB_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, timeReferenceSFN_r16)), sfn512)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, timeReferenceSFN_r16));

struct ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant) {
	uint16_t timeDomainOffset; // OF (0..5119)
	uint8_t timeDomainAllocation; // OF (0..15)
	B18 frequencyDomainAllocation; // SIZE (18)
	uint8_t antennaPort; // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant), uint8_t, dmrs_SeqInitialization); // OF (0..1)
	uint8_t precodingAndNumberOfLayers; // OF (0..63)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant), uint8_t, srs_ResourceIndicator); // OF (0..15)
	uint8_t mcsAndTBS; // OF (0..31)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant), uint16_t, frequencyHoppingOffset); // OF (1..274)
	uint8_t pathlossReferenceIndex; // OF (0..3)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, pusch_RepTypeIndicator_r16)), pusch_RepTypeIndicator_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, frequencyHoppingPUSCH_RepTypeB_r16)), frequencyHoppingPUSCH_RepTypeB_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant, timeReferenceSFN_r16)), timeReferenceSFN_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym1x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym2x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym3x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym4x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym5x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym6x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym7x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym8x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym9x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym10x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym11x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym12x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym13x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym14x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym15x14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), sym16x14)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16));

struct ASN_NR_NAME(CG_StartingOffsets_r16) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(CG_StartingOffsets_r16), uint8_t, cg_StartingFullBW_InsideCOT_r16); // SIZE (1..7) OF (0..6)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(CG_StartingOffsets_r16), uint8_t, cg_StartingFullBW_OutsideCOT_r16); // SIZE (1..7) OF (0..6)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CG_StartingOffsets_r16), uint8_t, cg_StartingPartialBW_InsideCOT_r16); // OF (0..6)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CG_StartingOffsets_r16), uint8_t, cg_StartingPartialBW_OutsideCOT_r16); // OF (0..6)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_UCI_Multiplexing)), enabled)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_UCI_Multiplexing));

struct ASN_NR_NAME(CG_COT_Sharing_r16, cot_Sharing_r16) {
	uint8_t duration_r16; // OF (1..39)
	uint8_t offset_r16; // OF (1..39)
	uint8_t channelAccessPriority_r16; // OF (1..4)
};

SIDL_UNION_ENUM(ASN_NR_NAME(CG_COT_Sharing_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CG_COT_Sharing_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CG_COT_Sharing_r16), noCOT_Sharing_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(CG_COT_Sharing_r16), cot_Sharing_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CG_COT_Sharing_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CG_COT_Sharing_r16)_noCOT_Sharing_r16)
		Null noCOT_Sharing_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(CG_COT_Sharing_r16)_cot_Sharing_r16)
		struct ASN_NR_NAME(CG_COT_Sharing_r16, cot_Sharing_r16) cot_Sharing_r16;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(ConfiguredGrantConfigIndex_r16); // OF (0..11)

typedef uint8_t ASN_NR_NAME(ConfiguredGrantConfigIndexMAC_r16); // OF (0..31)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, startingFromRV0_r16)), on),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, startingFromRV0_r16)), off)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, startingFromRV0_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, phy_PriorityIndex_r16)), p0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, phy_PriorityIndex_r16)), p1)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, phy_PriorityIndex_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, autonomousTx_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, autonomousTx_r16));

struct ASN_NR_NAME(ConfiguredGrantConfig) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, frequencyHopping)), frequencyHopping);
	struct ASN_NR_NAME(DMRS_UplinkConfig) cg_DMRS_Configuration;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_Table)), mcs_Table);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, mcs_TableTransformPrecoder)), mcs_TableTransformPrecoder);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(SetupRelease_ConfiguredGrantConfig, uci_OnPUSCH), uci_OnPUSCH);
	ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, resourceAllocation)) resourceAllocation;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, rbg_Size)), rbg_Size);
	ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, powerControlLoopToUse)) powerControlLoopToUse;
	ASN_NR_NAME(P0_PUSCH_AlphaSetId) p0_PUSCH_Alpha;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, transformPrecoder)), transformPrecoder);
	uint8_t nrofHARQ_Processes; // OF (1..16)
	ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK)) repK;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, repK_RV)), repK_RV);
	ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, periodicity)) periodicity;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, configuredGrantTimer); // OF (1..64)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(ConfiguredGrantConfig, rrc_ConfiguredUplinkGrant), rrc_ConfiguredUplinkGrant);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, cg_RetransmissionTimer_r16); // OF (1..64)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_minDFI_Delay_r16)), cg_minDFI_Delay_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, cg_nrofPUSCH_InSlot_r16); // OF (1..7)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, cg_nrofSlots_r16); // OF (1..40)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(CG_StartingOffsets_r16), cg_StartingOffsets_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, cg_UCI_Multiplexing)), cg_UCI_Multiplexing);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, cg_COT_SharingOffset_r16); // OF (1..39)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, betaOffsetCG_UCI_r16); // OF (0..31)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(CG_COT_Sharing_r16), cg_COT_SharingList_r16); // SIZE (1..1709)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, harq_ProcID_Offset_r16); // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint8_t, harq_ProcID_Offset2_r16); // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(ConfiguredGrantConfigIndex_r16), configuredGrantConfigIndex_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(ConfiguredGrantConfigIndexMAC_r16), configuredGrantConfigIndexMAC_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(ConfiguredGrantConfig), uint16_t, periodicityExt_r16); // OF (1..5120)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, startingFromRV0_r16)), startingFromRV0_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, phy_PriorityIndex_r16)), phy_PriorityIndex_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(ConfiguredGrantConfig, autonomousTx_r16)), autonomousTx_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig)_setup)
		struct ASN_NR_NAME(ConfiguredGrantConfig) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(SRS_ResourceSetId); // OF (0..15)

struct ASN_NR_NAME(SRS_ResourceSet, resourceType, aperiodic) {
	uint8_t aperiodicSRS_ResourceTrigger; // OF (1..3)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet, resourceType, aperiodic), ASN_NR_NAME(NZP_CSI_RS_ResourceId), csi_RS);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet, resourceType, aperiodic), uint8_t, slotOffset); // OF (1..32)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet, resourceType, aperiodic), uint8_t, aperiodicSRS_ResourceTriggerList); // SIZE (1..2) OF (1..3)
};

struct ASN_NR_NAME(SRS_ResourceSet, resourceType, semi_persistent) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet, resourceType, semi_persistent), ASN_NR_NAME(NZP_CSI_RS_ResourceId), associatedCSI_RS);
};

struct ASN_NR_NAME(SRS_ResourceSet, resourceType, periodic) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet, resourceType, periodic), ASN_NR_NAME(NZP_CSI_RS_ResourceId), associatedCSI_RS);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_ResourceSet, resourceType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_ResourceSet, resourceType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_ResourceSet, resourceType), aperiodic),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_ResourceSet, resourceType), semi_persistent),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_ResourceSet, resourceType), periodic)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_ResourceSet, resourceType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_ResourceSet, resourceType)_aperiodic)
		struct ASN_NR_NAME(SRS_ResourceSet, resourceType, aperiodic) aperiodic;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_ResourceSet, resourceType)_semi_persistent)
		struct ASN_NR_NAME(SRS_ResourceSet, resourceType, semi_persistent) semi_persistent;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_ResourceSet, resourceType)_periodic)
		struct ASN_NR_NAME(SRS_ResourceSet, resourceType, periodic) periodic;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage)), beamManagement),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage)), codebook),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage)), nonCodebook),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage)), antennaSwitching)
} ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage));

SIDL_UNION_ENUM(ASN_NR_NAME(PathlossReferenceRS_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PathlossReferenceRS_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PathlossReferenceRS_Config), ssb_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(PathlossReferenceRS_Config), csi_RS_Index)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PathlossReferenceRS_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PathlossReferenceRS_Config)_ssb_Index)
		ASN_NR_NAME(SSB_Index) ssb_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(PathlossReferenceRS_Config)_csi_RS_Index)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, srs_PowerControlAdjustmentStates)), sameAsFci2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, srs_PowerControlAdjustmentStates)), separateClosedLoop)
} ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, srs_PowerControlAdjustmentStates));

typedef uint8_t ASN_NR_NAME(SRS_PathlossReferenceRS_Id_r16); // OF (0..63)

struct ASN_NR_NAME(PathlossReferenceRS_r16) {
	ASN_NR_NAME(SRS_PathlossReferenceRS_Id_r16) srs_PathlossReferenceRS_Id_r16;
	struct ASN_NR_NAME(PathlossReferenceRS_Config) pathlossReferenceRS_r16;
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PathlossReferenceRS_r16), ASN_NR_NAME(PathlossReferenceRSList_r16)); // SIZE (1..64)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16)_setup)
		ASN_NR_NAME(PathlossReferenceRSList_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_ResourceSet) {
	ASN_NR_NAME(SRS_ResourceSetId) srs_ResourceSetId;
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet), ASN_NR_NAME(SRS_ResourceId), srs_ResourceIdList); // SIZE (1..16)
	struct ASN_NR_NAME(SRS_ResourceSet, resourceType) resourceType;
	ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, usage)) usage;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet), ASN_ENUM(ASN_NR_NAME(Alpha)), alpha);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet), int16_t, p0); // OF (-202..24)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet), ASN_NR_NAME(PathlossReferenceRS_Config), pathlossReferenceRS);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SRS_ResourceSet, srs_PowerControlAdjustmentStates)), srs_PowerControlAdjustmentStates);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_ResourceSet), ASN_NR_NAME(SetupRelease_SRS_ResourceSet, pathlossReferenceRSList_r16), pathlossReferenceRSList_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, nrofSRS_Ports)), port1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, nrofSRS_Ports)), ports2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, nrofSRS_Ports)), ports4)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, nrofSRS_Ports));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, ptrs_PortIndex)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, ptrs_PortIndex)), n1)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, ptrs_PortIndex));

struct ASN_NR_NAME(SRS_Resource, transmissionComb, n2) {
	uint8_t combOffset_n2; // OF (0..1)
	uint8_t cyclicShift_n2; // OF (0..7)
};

struct ASN_NR_NAME(SRS_Resource, transmissionComb, n4) {
	uint8_t combOffset_n4; // OF (0..3)
	uint8_t cyclicShift_n4; // OF (0..11)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_Resource, transmissionComb)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, transmissionComb), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, transmissionComb), n2),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, transmissionComb), n4)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_Resource, transmissionComb)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_Resource, transmissionComb)_n2)
		struct ASN_NR_NAME(SRS_Resource, transmissionComb, n2) n2;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_Resource, transmissionComb)_n4)
		struct ASN_NR_NAME(SRS_Resource, transmissionComb, n4) n4;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, nrofSymbols)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, nrofSymbols)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, nrofSymbols)), n4)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, nrofSymbols));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, repetitionFactor)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, repetitionFactor)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, repetitionFactor)), n4)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, repetitionFactor));

struct ASN_NR_NAME(SRS_Resource, resourceMapping) {
	uint8_t startPosition; // OF (0..5)
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, nrofSymbols)) nrofSymbols;
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping, repetitionFactor)) repetitionFactor;
};

struct ASN_NR_NAME(SRS_Resource, freqHopping) {
	uint8_t c_SRS; // OF (0..63)
	uint8_t b_SRS; // OF (0..3)
	uint8_t b_hop; // OF (0..3)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, groupOrSequenceHopping)), neither),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, groupOrSequenceHopping)), groupHopping),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, groupOrSequenceHopping)), sequenceHopping)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, groupOrSequenceHopping));

struct ASN_NR_NAME(SRS_Resource, resourceType, aperiodic) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PeriodicityAndOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl1),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl2),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl4),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl5),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl8),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl10),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl20),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl32),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl40),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl64),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl80),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl160),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl320),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl640),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl1280),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset), sl2560)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PeriodicityAndOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl1)
		Null sl1;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl2)
		uint8_t sl2; // OF (0..1)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl4)
		uint8_t sl4; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl5)
		uint8_t sl5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl8)
		uint8_t sl8; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl10)
		uint8_t sl10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl16)
		uint8_t sl16; // OF (0..15)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl20)
		uint8_t sl20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl32)
		uint8_t sl32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl40)
		uint8_t sl40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl64)
		uint8_t sl64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl80)
		uint8_t sl80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl160)
		uint8_t sl160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl320)
		uint16_t sl320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl640)
		uint16_t sl640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl1280)
		uint16_t sl1280; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset)_sl2560)
		uint16_t sl2560; // OF (0..2559)
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_Resource, resourceType, semi_persistent) {
	struct ASN_NR_NAME(SRS_PeriodicityAndOffset) periodicityAndOffset_sp;
};

struct ASN_NR_NAME(SRS_Resource, resourceType, periodic) {
	struct ASN_NR_NAME(SRS_PeriodicityAndOffset) periodicityAndOffset_p;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_Resource, resourceType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, resourceType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, resourceType), aperiodic),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, resourceType), semi_persistent),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_Resource, resourceType), periodic)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_Resource, resourceType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_Resource, resourceType)_aperiodic)
		struct ASN_NR_NAME(SRS_Resource, resourceType, aperiodic) aperiodic;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_Resource, resourceType)_semi_persistent)
		struct ASN_NR_NAME(SRS_Resource, resourceType, semi_persistent) semi_persistent;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_Resource, resourceType)_periodic)
		struct ASN_NR_NAME(SRS_Resource, resourceType, periodic) periodic;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal, srs) {
	ASN_NR_NAME(SRS_ResourceId) resourceId;
	ASN_NR_NAME(BWP_Id) uplinkBWP;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal), ssb_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal), csi_RS_Index),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal), srs)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal)_ssb_Index)
		ASN_NR_NAME(SSB_Index) ssb_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal)_csi_RS_Index)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_Index;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal)_srs)
		struct ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal, srs) srs;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_SpatialRelationInfo) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_SpatialRelationInfo), ASN_NR_NAME(ServCellIndex), servingCellId);
	struct ASN_NR_NAME(SRS_SpatialRelationInfo, referenceSignal) referenceSignal;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, nrofSymbols_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, nrofSymbols_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, nrofSymbols_r16)), n4)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, nrofSymbols_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, repetitionFactor_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, repetitionFactor_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, repetitionFactor_r16)), n4)
} ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, repetitionFactor_r16));

struct ASN_NR_NAME(SRS_Resource, resourceMapping_r16) {
	uint8_t startPosition_r16; // OF (0..13)
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, nrofSymbols_r16)) nrofSymbols_r16;
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, resourceMapping_r16, repetitionFactor_r16)) repetitionFactor_r16;
};

struct ASN_NR_NAME(SRS_Resource) {
	ASN_NR_NAME(SRS_ResourceId) srs_ResourceId;
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, nrofSRS_Ports)) nrofSRS_Ports;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SRS_Resource, ptrs_PortIndex)), ptrs_PortIndex);
	struct ASN_NR_NAME(SRS_Resource, transmissionComb) transmissionComb;
	struct ASN_NR_NAME(SRS_Resource, resourceMapping) resourceMapping;
	uint8_t freqDomainPosition; // OF (0..67)
	uint16_t freqDomainShift; // OF (0..268)
	struct ASN_NR_NAME(SRS_Resource, freqHopping) freqHopping;
	ASN_ENUM(ASN_NR_NAME(SRS_Resource, groupOrSequenceHopping)) groupOrSequenceHopping;
	struct ASN_NR_NAME(SRS_Resource, resourceType) resourceType;
	uint16_t sequenceId; // OF (0..1023)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Resource), ASN_NR_NAME(SRS_SpatialRelationInfo), spatialRelationInfo);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SRS_Resource, resourceMapping_r16), resourceMapping_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_Config, tpc_Accumulation)), disabled)
} ASN_ENUM(ASN_NR_NAME(SRS_Config, tpc_Accumulation));

typedef uint8_t ASN_NR_NAME(SRS_PosResourceSetId_r16); // OF (0..15)

typedef uint8_t ASN_NR_NAME(SRS_PosResourceId_r16); // OF (0..63)

struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, aperiodic_r16) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, aperiodic_r16), uint8_t, aperiodicSRS_ResourceTriggerList_r16); // SIZE (1..3) OF (1..3)
};

struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, semi_persistent_r16) {
};

struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, periodic_r16) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16), aperiodic_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16), semi_persistent_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16), periodic_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16)_aperiodic_r16)
		struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, aperiodic_r16) aperiodic_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16)_semi_persistent_r16)
		struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, semi_persistent_r16) semi_persistent_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16)_periodic_r16)
		struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16, periodic_r16) periodic_r16;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, halfFrameIndex_r16)), zero),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, halfFrameIndex_r16)), one)
} ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, halfFrameIndex_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), spare1)
} ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16));

struct ASN_NR_NAME(SSB_Configuration_r16, sfn0_Offset_r16) {
	uint16_t sfn_Offset_r16; // OF (0..1023)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SSB_Configuration_r16, sfn0_Offset_r16), uint8_t, integerSubframeOffset_r16); // OF (0..9)
};

struct ASN_NR_NAME(SSB_Configuration_r16) {
	ASN_NR_NAME(ARFCN_ValueNR) ssb_Freq_r16;
	ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, halfFrameIndex_r16)) halfFrameIndex_r16;
	ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)) ssbSubcarrierSpacing_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SSB_Configuration_r16, ssb_Periodicity_r16)), ssb_Periodicity_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SSB_Configuration_r16, sfn0_Offset_r16), sfn0_Offset_r16);
	uint8_t sfn_SSB_Offset_r16; // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SSB_Configuration_r16), int8_t, ss_PBCH_BlockPower_r16); // OF (-60..50)
};

struct ASN_NR_NAME(SSB_InfoNcell_r16) {
	ASN_NR_NAME(PhysCellId) physicalCellId_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SSB_InfoNcell_r16), ASN_NR_NAME(SSB_Index), ssb_IndexNcell_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SSB_InfoNcell_r16), ASN_NR_NAME(SSB_Configuration_r16), ssb_Configuration_r16);
};

struct ASN_NR_NAME(DL_PRS_Info_r16) {
	uint8_t dl_PRS_ID_r16; // OF (0..255)
	uint8_t dl_PRS_ResourceSetId_r16; // OF (0..7)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DL_PRS_Info_r16), uint8_t, dl_PRS_ResourceId_r16); // OF (0..63)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16), ssb_IndexServing_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16), ssb_Ncell_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16), dl_PRS_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16)_ssb_IndexServing_r16)
		ASN_NR_NAME(SSB_Index) ssb_IndexServing_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16)_ssb_Ncell_r16)
		struct ASN_NR_NAME(SSB_InfoNcell_r16) ssb_Ncell_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16)_dl_PRS_r16)
		struct ASN_NR_NAME(DL_PRS_Info_r16) dl_PRS_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_PosResourceSet_r16) {
	ASN_NR_NAME(SRS_PosResourceSetId_r16) srs_PosResourceSetId_r16;
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_PosResourceSet_r16), ASN_NR_NAME(SRS_PosResourceId_r16), srs_PosResourceIdList_r16); // SIZE (1..16)
	struct ASN_NR_NAME(SRS_PosResourceSet_r16, resourceType_r16) resourceType_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_PosResourceSet_r16), ASN_ENUM(ASN_NR_NAME(Alpha)), alpha_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_PosResourceSet_r16), int16_t, p0_r16); // OF (-202..24)
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(SRS_PosResourceSet_r16, pathlossReferenceRS_Pos_r16), pathlossReferenceRS_Pos_r16);
};

struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n2_r16) {
	uint8_t combOffset_n2_r16; // OF (0..1)
	uint8_t cyclicShift_n2_r16; // OF (0..7)
};

struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n4_r16) {
	uint8_t combOffset_n4_16; // OF (0..3)
	uint8_t cyclicShift_n4_r16; // OF (0..11)
};

struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n8_r16) {
	uint8_t combOffset_n8_r16; // OF (0..7)
	uint8_t cyclicShift_n8_r16; // OF (0..5)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16), n2_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16), n4_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16), n8_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16)_n2_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n2_r16) n2_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16)_n4_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n4_r16) n4_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16)_n8_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16, n8_r16) n8_r16;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)), n12)
} ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16));

struct ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16) {
	uint8_t startPosition_r16; // OF (0..13)
	ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16, nrofSymbols_r16)) nrofSymbols_r16;
};

struct ASN_NR_NAME(SRS_PosResource_r16, freqHopping_r16) {
	uint8_t c_SRS_r16; // OF (0..63)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, groupOrSequenceHopping_r16)), neither),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, groupOrSequenceHopping_r16)), groupHopping),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, groupOrSequenceHopping_r16)), sequenceHopping)
} ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, groupOrSequenceHopping_r16));

struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, aperiodic_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, aperiodic_r16), uint8_t, slotOffset_r16); // OF (1..32)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl1),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl2),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl4),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl5),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl8),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl10),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl20),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl32),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl40),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl64),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl80),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl160),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl320),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl640),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl1280),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl2560),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl5120),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl10240),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl40960),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16), sl81920)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl1)
		Null sl1;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl2)
		uint8_t sl2; // OF (0..1)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl4)
		uint8_t sl4; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl5)
		uint8_t sl5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl8)
		uint8_t sl8; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl10)
		uint8_t sl10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl16)
		uint8_t sl16; // OF (0..15)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl20)
		uint8_t sl20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl32)
		uint8_t sl32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl40)
		uint8_t sl40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl64)
		uint8_t sl64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl80)
		uint8_t sl80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl160)
		uint8_t sl160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl320)
		uint16_t sl320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl640)
		uint16_t sl640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl1280)
		uint16_t sl1280; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl2560)
		uint16_t sl2560; // OF (0..2559)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl5120)
		uint16_t sl5120; // OF (0..5119)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl10240)
		uint16_t sl10240; // OF (0..10239)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl40960)
		uint16_t sl40960; // OF (0..40959)
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PeriodicityAndOffset_r16)_sl81920)
		uint32_t sl81920; // OF (0..81919)
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, semi_persistent_r16) {
	struct ASN_NR_NAME(SRS_PeriodicityAndOffset_r16) periodicityAndOffset_sp_r16;
};

struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, periodic_r16) {
	struct ASN_NR_NAME(SRS_PeriodicityAndOffset_r16) periodicityAndOffset_p_r16;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16), aperiodic_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16), semi_persistent_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16), periodic_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16)_aperiodic_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, aperiodic_r16) aperiodic_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16)_semi_persistent_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, semi_persistent_r16) semi_persistent_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16)_periodic_r16)
		struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16, periodic_r16) periodic_r16;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16), srs_ResourceId_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16), srs_PosResourceId_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16)_srs_ResourceId_r16)
		ASN_NR_NAME(SRS_ResourceId) srs_ResourceId_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16)_srs_PosResourceId_r16)
		ASN_NR_NAME(SRS_PosResourceId_r16) srs_PosResourceId_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16) {
	struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16, resourceSelection_r16) resourceSelection_r16;
	ASN_NR_NAME(BWP_Id) uplinkBWP_r16;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16), ssb_IndexServing_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16), csi_RS_IndexServing_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16), srs_SpatialRelation_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16)_ssb_IndexServing_r16)
		ASN_NR_NAME(SSB_Index) ssb_IndexServing_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16)_csi_RS_IndexServing_r16)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS_IndexServing_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16)_srs_SpatialRelation_r16)
		struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16, srs_SpatialRelation_r16) srs_SpatialRelation_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16), ASN_NR_NAME(ServCellIndex), servingCellId);
	struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16, referenceSignal_r16) referenceSignal_r16;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16), servingRS_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16), ssb_Ncell_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16), dl_PRS_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16)_servingRS_r16)
		struct ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16, servingRS_r16) servingRS_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16)_ssb_Ncell_r16)
		struct ASN_NR_NAME(SSB_InfoNcell_r16) ssb_Ncell_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16)_dl_PRS_r16)
		struct ASN_NR_NAME(DL_PRS_Info_r16) dl_PRS_r16;
} SIDL_UNION_END;

struct ASN_NR_NAME(SRS_PosResource_r16) {
	ASN_NR_NAME(SRS_PosResourceId_r16) srs_PosResourceId_r16;
	struct ASN_NR_NAME(SRS_PosResource_r16, transmissionComb_r16) transmissionComb_r16;
	struct ASN_NR_NAME(SRS_PosResource_r16, resourceMapping_r16) resourceMapping_r16;
	uint16_t freqDomainShift_r16; // OF (0..268)
	struct ASN_NR_NAME(SRS_PosResource_r16, freqHopping_r16) freqHopping_r16;
	ASN_ENUM(ASN_NR_NAME(SRS_PosResource_r16, groupOrSequenceHopping_r16)) groupOrSequenceHopping_r16;
	struct ASN_NR_NAME(SRS_PosResource_r16, resourceType_r16) resourceType_r16;
	uint16_t sequenceId_r16; // OF (0..65535)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_PosResource_r16), ASN_NR_NAME(SRS_SpatialRelationInfoPos_r16), spatialRelationInfoPos_r16);
};

struct ASN_NR_NAME(SRS_Config) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_ResourceSetId), srs_ResourceSetToReleaseList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_ResourceSet), srs_ResourceSetToAddModList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_ResourceId), srs_ResourceToReleaseList); // SIZE (1..64)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_Resource), srs_ResourceToAddModList); // SIZE (1..64)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SRS_Config, tpc_Accumulation)), tpc_Accumulation);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), uint8_t, srs_RequestDCI_1_2_r16); // OF (1..2)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), uint8_t, srs_RequestDCI_0_2_r16); // OF (1..2)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_ResourceSet), srs_ResourceSetToAddModListDCI_0_2_r16); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_ResourceSetId), srs_ResourceSetToReleaseListDCI_0_2_r16); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_PosResourceSetId_r16), srs_PosResourceSetToReleaseList_r16); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_PosResourceSet_r16), srs_PosResourceSetToAddModList_r16); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_PosResourceId_r16), srs_PosResourceToReleaseList_r16); // SIZE (1..64)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SRS_Config), ASN_NR_NAME(SRS_PosResource_r16), srs_PosResourceToAddModList_r16); // SIZE (1..64)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config)_setup)
		struct ASN_NR_NAME(SRS_Config) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(BFR_SSB_Resource) {
	ASN_NR_NAME(SSB_Index) ssb;
	uint8_t ra_PreambleIndex; // OF (0..63)
};

struct ASN_NR_NAME(BFR_CSIRS_Resource) {
	ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_RS;
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(BFR_CSIRS_Resource), uint16_t, ra_OccasionList); // SIZE (1..64) OF (0..511)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BFR_CSIRS_Resource), uint8_t, ra_PreambleIndex); // OF (0..63)
};

SIDL_UNION_ENUM(ASN_NR_NAME(PRACH_ResourceDedicatedBFR)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PRACH_ResourceDedicatedBFR), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PRACH_ResourceDedicatedBFR), ssb),
	ASN_ENUM_VAL(ASN_NR_NAME(PRACH_ResourceDedicatedBFR), csi_RS)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PRACH_ResourceDedicatedBFR)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PRACH_ResourceDedicatedBFR)_ssb)
		struct ASN_NR_NAME(BFR_SSB_Resource) ssb;
	SIDL_UNION_CASE(ASN_NR_NAME(PRACH_ResourceDedicatedBFR)_csi_RS)
		struct ASN_NR_NAME(BFR_CSIRS_Resource) csi_RS;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), oneEighth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), oneFourth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), oneHalf),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), eight),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), sixteen)
} ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), ms200)
} ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer));

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PRACH_ResourceDedicatedBFR), ASN_NR_NAME(CandidateBeamRSListExt_r16)); // SIZE (1..48)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610)_setup)
		ASN_NR_NAME(CandidateBeamRSListExt_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(BeamFailureRecoveryConfig) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), uint8_t, rootSequenceIndex_BFR); // OF (0..137)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(RACH_ConfigGeneric), rach_ConfigBFR);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(RSRP_Range), rsrp_ThresholdSSB);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(PRACH_ResourceDedicatedBFR), candidateBeamRSList); // SIZE (1..16)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, ssb_perRACH_Occasion)), ssb_perRACH_Occasion);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), uint8_t, ra_ssb_OccasionMaskIndex); // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(SearchSpaceId), recoverySearchSpaceId);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(RA_Prioritization), ra_Prioritization);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BeamFailureRecoveryConfig, beamFailureRecoveryTimer)), beamFailureRecoveryTimer);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), msg1_SubcarrierSpacing);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(RA_Prioritization), ra_PrioritizationTwoStep_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BeamFailureRecoveryConfig), ASN_NR_NAME(SetupRelease_BeamFailureRecoveryConfig, candidateBeamRSListExt_v1610), candidateBeamRSListExt_v1610);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig)_setup)
		struct ASN_NR_NAME(BeamFailureRecoveryConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16)_setup)
		struct ASN_NR_NAME(PUCCH_Config) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BWP_UplinkDedicated, useInterlacePUCCH_PUSCH_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(BWP_UplinkDedicated, useInterlacePUCCH_PUSCH_r16));

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PUCCH_Config), ASN_NR_NAME(PUCCH_ConfigurationList_r16)); // SIZE (1..2)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16)_setup)
		ASN_NR_NAME(PUCCH_ConfigurationList_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)), n128)
} ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)), ms320)
} ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16));

struct ASN_NR_NAME(LBT_FailureRecoveryConfig_r16) {
	ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureInstanceMaxCount_r16)) lbt_FailureInstanceMaxCount_r16;
	ASN_ENUM(ASN_NR_NAME(LBT_FailureRecoveryConfig_r16, lbt_FailureDetectionTimer_r16)) lbt_FailureDetectionTimer_r16;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16)_setup)
		struct ASN_NR_NAME(LBT_FailureRecoveryConfig_r16) setup;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(ConfiguredGrantConfig), ASN_NR_NAME(ConfiguredGrantConfigToAddModList_r16)); // SIZE (1..12)

typedef SIDL_DYNAMIC(ASN_NR_NAME(ConfiguredGrantConfigIndex_r16), ASN_NR_NAME(ConfiguredGrantConfigToReleaseList_r16)); // SIZE (1..12)

typedef SIDL_DYNAMIC(ASN_NR_NAME(ConfiguredGrantConfigIndex_r16), ASN_NR_NAME(ConfiguredGrantConfigType2DeactivationState_r16)); // SIZE (1..12)

typedef SIDL_DYNAMIC(ASN_NR_NAME(ConfiguredGrantConfigType2DeactivationState_r16), ASN_NR_NAME(ConfiguredGrantConfigType2DeactivationStateList_r16)); // SIZE (1..16)

struct ASN_NR_NAME(BWP_UplinkDedicated) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_Config), pucch_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pusch_Config), pusch_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, configuredGrantConfig), configuredGrantConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, srs_Config), srs_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, beamFailureRecoveryConfig), beamFailureRecoveryConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, sl_PUCCH_Config_r16), sl_PUCCH_Config_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), uint8_t, cp_ExtensionC2_r16); // OF (1..28)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), uint8_t, cp_ExtensionC3_r16); // OF (1..28)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BWP_UplinkDedicated, useInterlacePUCCH_PUSCH_r16)), useInterlacePUCCH_PUSCH_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, pucch_ConfigurationList_r16), pucch_ConfigurationList_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(SetupRelease_BWP_UplinkDedicated, lbt_FailureRecoveryConfig_r16), lbt_FailureRecoveryConfig_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(ConfiguredGrantConfigToAddModList_r16), configuredGrantConfigToAddModList_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(ConfiguredGrantConfigToReleaseList_r16), configuredGrantConfigToReleaseList_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(BWP_UplinkDedicated), ASN_NR_NAME(ConfiguredGrantConfigType2DeactivationStateList_r16), configuredGrantConfigType2DeactivationStateList_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation), row1),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation), row2),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation), row4),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation), other)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)_row1)
		B4 row1; // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)_row2)
		B12 row2; // SIZE (12)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)_row4)
		B3 row4; // SIZE (3)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation)_other)
		B6 other; // SIZE (6)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)), p32)
} ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type)), noCDM),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type)), fd_CDM2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type)), cdm4_FD2_TD2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type)), cdm8_FD2_TD4)
} ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, density, dot5)), evenPRBs),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, density, dot5)), oddPRBs)
} ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, density, dot5));

SIDL_UNION_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, density)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, density), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, density), dot5),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, density), one),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, density), three),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_RS_ResourceMapping, density), spare)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CSI_RS_ResourceMapping, density)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, density)_dot5)
		ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, density, dot5)) dot5;
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, density)_one)
		Null one;
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, density)_three)
		Null three;
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_RS_ResourceMapping, density)_spare)
		Null spare;
} SIDL_UNION_END;

struct ASN_NR_NAME(CSI_FrequencyOccupation) {
	uint16_t startingRB; // OF (0..274)
	uint16_t nrofRBs; // OF (24..276)
};

struct ASN_NR_NAME(CSI_RS_ResourceMapping) {
	struct ASN_NR_NAME(CSI_RS_ResourceMapping, frequencyDomainAllocation) frequencyDomainAllocation;
	ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, nrofPorts)) nrofPorts;
	uint8_t firstOFDMSymbolInTimeDomain; // OF (0..13)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CSI_RS_ResourceMapping), uint8_t, firstOFDMSymbolInTimeDomain2); // OF (2..12)
	ASN_ENUM(ASN_NR_NAME(CSI_RS_ResourceMapping, cdm_Type)) cdm_Type;
	struct ASN_NR_NAME(CSI_RS_ResourceMapping, density) density;
	struct ASN_NR_NAME(CSI_FrequencyOccupation) freqBand;
};

typedef uint8_t ASN_NR_NAME(CellGroupId); // OF (0..3)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), nea0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), nea1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), nea2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), nea3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm)), spare1)
} ASN_ENUM(ASN_NR_NAME(CipheringAlgorithm));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SN_FieldLengthAM)), size12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SN_FieldLengthAM)), size18)
} ASN_ENUM(ASN_NR_NAME(SN_FieldLengthAM));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_Reassembly)), spare1)
} ASN_ENUM(ASN_NR_NAME(T_Reassembly));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms105),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms115),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms135),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms145),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms155),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms165),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms175),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms185),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms195),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms205),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms210),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms215),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms220),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms225),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms230),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms235),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms245),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms350),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms450),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms1200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms1600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), ms2400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)), spare1)
} ASN_ENUM(ASN_NR_NAME(T_StatusProhibit));

struct ASN_NR_NAME(DL_AM_RLC) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DL_AM_RLC), ASN_ENUM(ASN_NR_NAME(SN_FieldLengthAM)), sn_FieldLength);
	ASN_ENUM(ASN_NR_NAME(T_Reassembly)) t_Reassembly;
	ASN_ENUM(ASN_NR_NAME(T_StatusProhibit)) t_StatusProhibit;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SN_FieldLengthUM)), size6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SN_FieldLengthUM)), size12)
} ASN_ENUM(ASN_NR_NAME(SN_FieldLengthUM));

struct ASN_NR_NAME(DL_UM_RLC) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DL_UM_RLC), ASN_ENUM(ASN_NR_NAME(SN_FieldLengthUM)), sn_FieldLength);
	ASN_ENUM(ASN_NR_NAME(T_Reassembly)) t_Reassembly;
};

typedef uint8_t ASN_NR_NAME(DRB_Identity); // OF (1..32)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms1200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), ms1600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds));

SIDL_UNION_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer)) {
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_onDurationTimer), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_onDurationTimer), subMilliSeconds),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_onDurationTimer), milliSeconds)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(DRX_Config, drx_onDurationTimer)) {
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_onDurationTimer)_subMilliSeconds)
		uint8_t subMilliSeconds; // OF (1..31)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_onDurationTimer)_milliSeconds)
		ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_onDurationTimer, milliSeconds)) milliSeconds;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), ms2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl33),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl112),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), sl320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl24),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl33),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl96),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl112),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), sl320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL));

SIDL_UNION_ENUM(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms10),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms20),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms32),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms40),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms60),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms64),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms70),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms80),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms128),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms160),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms256),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms320),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms512),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms640),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms1024),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms1280),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms2048),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms2560),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms5120),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset), ms10240)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms10)
		uint8_t ms10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms20)
		uint8_t ms20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms32)
		uint8_t ms32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms40)
		uint8_t ms40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms60)
		uint8_t ms60; // OF (0..59)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms64)
		uint8_t ms64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms70)
		uint8_t ms70; // OF (0..69)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms80)
		uint8_t ms80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms128)
		uint8_t ms128; // OF (0..127)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms160)
		uint8_t ms160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms256)
		uint8_t ms256; // OF (0..255)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms320)
		uint16_t ms320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms512)
		uint16_t ms512; // OF (0..511)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms640)
		uint16_t ms640; // OF (0..639)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms1024)
		uint16_t ms1024; // OF (0..1023)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms1280)
		uint16_t ms1280; // OF (0..1279)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms2048)
		uint16_t ms2048; // OF (0..2047)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms2560)
		uint16_t ms2560; // OF (0..2559)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms5120)
		uint16_t ms5120; // OF (0..5119)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset)_ms10240)
		uint16_t ms10240; // OF (0..10239)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), ms640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle));

struct ASN_NR_NAME(DRX_Config, shortDRX) {
	ASN_ENUM(ASN_NR_NAME(DRX_Config, shortDRX, drx_ShortCycle)) drx_ShortCycle;
	uint8_t drx_ShortCycleTimer; // OF (1..16)
};

struct ASN_NR_NAME(DRX_Config) {
	struct ASN_NR_NAME(DRX_Config, drx_onDurationTimer) drx_onDurationTimer;
	ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_InactivityTimer)) drx_InactivityTimer;
	uint8_t drx_HARQ_RTT_TimerDL; // OF (0..56)
	uint8_t drx_HARQ_RTT_TimerUL; // OF (0..56)
	ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerDL)) drx_RetransmissionTimerDL;
	ASN_ENUM(ASN_NR_NAME(DRX_Config, drx_RetransmissionTimerUL)) drx_RetransmissionTimerUL;
	struct ASN_NR_NAME(DRX_Config, drx_LongCycleStartOffset) drx_LongCycleStartOffset;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(DRX_Config, shortDRX), shortDRX);
	uint8_t drx_SlotOffset; // OF (0..31)
};

struct ASN_NR_NAME(FrequencyInfoDL) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoDL), ASN_NR_NAME(ARFCN_ValueNR), absoluteFrequencySSB);
	ASN_NR_NAME(MultiFrequencyBandListNR) frequencyBandList;
	ASN_NR_NAME(ARFCN_ValueNR) absoluteFrequencyPointA;
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(FrequencyInfoDL), ASN_NR_NAME(SCS_SpecificCarrier), scs_SpecificCarrierList); // SIZE (1..5)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL, frequencyShift7p5khz)), true)
} ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL, frequencyShift7p5khz));

struct ASN_NR_NAME(FrequencyInfoUL) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL), ASN_NR_NAME(MultiFrequencyBandListNR), frequencyBandList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL), ASN_NR_NAME(ARFCN_ValueNR), absoluteFrequencyPointA);
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL), ASN_NR_NAME(SCS_SpecificCarrier), scs_SpecificCarrierList); // SIZE (1..5)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL), ASN_NR_NAME(AdditionalSpectrumEmission), additionalSpectrumEmission);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FrequencyInfoUL), ASN_NR_NAME(P_Max), p_Max);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(FrequencyInfoUL, frequencyShift7p5khz)), frequencyShift7p5khz);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), nia0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), nia1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), nia2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), nia3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm)), spare1)
} ASN_ENUM(ASN_NR_NAME(IntegrityProtAlgorithm));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps16384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps32768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), kBps65536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate)), infinity)
} ASN_ENUM(ASN_NR_NAME(LogicalChannelConfig, ul_SpecificParameters, prioritisedBitRate));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config)_setup)
		struct ASN_NR_NAME(DRX_Config) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), ms128)
} ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), n32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), n64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)), spare1)
} ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax));

struct ASN_NR_NAME(SchedulingRequestToAddMod) {
	ASN_NR_NAME(SchedulingRequestId) schedulingRequestId;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_ProhibitTimer)), sr_ProhibitTimer);
	ASN_ENUM(ASN_NR_NAME(SchedulingRequestToAddMod, sr_TransMax)) sr_TransMax;
};

struct ASN_NR_NAME(SchedulingRequestConfig) {
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(SchedulingRequestConfig), ASN_NR_NAME(SchedulingRequestToAddMod), schedulingRequestToAddModList); // SIZE (1..8)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(SchedulingRequestConfig), ASN_NR_NAME(SchedulingRequestId), schedulingRequestToReleaseList); // SIZE (1..8)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), sf2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)), infinity)
} ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf5120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), sf10240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)), spare1)
} ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), sf2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), spare1)
} ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer));

struct ASN_NR_NAME(BSR_Config) {
	ASN_ENUM(ASN_NR_NAME(BSR_Config, periodicBSR_Timer)) periodicBSR_Timer;
	ASN_ENUM(ASN_NR_NAME(BSR_Config, retxBSR_Timer)) retxBSR_Timer;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(BSR_Config, logicalChannelSR_DelayTimer)), logicalChannelSR_DelayTimer);
};

typedef uint8_t ASN_NR_NAME(TAG_Id); // OF (0..3)

struct ASN_NR_NAME(TAG) {
	ASN_NR_NAME(TAG_Id) tag_Id;
	ASN_ENUM(ASN_NR_NAME(TimeAlignmentTimer)) timeAlignmentTimer;
};

struct ASN_NR_NAME(TAG_Config) {
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(TAG_Config), ASN_NR_NAME(TAG_Id), tag_ToReleaseList); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(TAG_Config), ASN_NR_NAME(TAG), tag_ToAddModList); // SIZE (1..4)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), sf1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)), infinity)
} ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)), sf1000)
} ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange)), dB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange)), infinity)
} ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ModeOtherCG)), real),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ModeOtherCG)), virtual)
} ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ModeOtherCG));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)), sf1000)
} ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16)), dB3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16)), dB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16)), dB12)
} ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16));

struct ASN_NR_NAME(MPE_Config_FR2_r16) {
	ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_ProhibitTimer_r16)) mpe_ProhibitTimer_r16;
	ASN_ENUM(ASN_NR_NAME(MPE_Config_FR2_r16, mpe_Threshold_r16)) mpe_Threshold_r16;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16)_setup)
		struct ASN_NR_NAME(MPE_Config_FR2_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PHR_Config) {
	ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_PeriodicTimer)) phr_PeriodicTimer;
	ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ProhibitTimer)) phr_ProhibitTimer;
	ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_Tx_PowerFactorChange)) phr_Tx_PowerFactorChange;
	bool multiplePHR;
	bool dummy;
	bool phr_Type2OtherCell;
	ASN_ENUM(ASN_NR_NAME(PHR_Config, phr_ModeOtherCG)) phr_ModeOtherCG;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PHR_Config), ASN_NR_NAME(SetupRelease_PHR_Config, mpe_Reporting_FR2_r16), mpe_Reporting_FR2_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config)_setup)
		struct ASN_NR_NAME(PHR_Config) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)), s180)
} ASN_ENUM(ASN_NR_NAME(DataInactivityTimer));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer)_setup)
		ASN_ENUM(ASN_NR_NAME(DataInactivityTimer)) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, usePreBSR_r16)), true)
} ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, usePreBSR_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, lch_BasedPrioritization_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, lch_BasedPrioritization_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms1200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), ms1600),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds));

SIDL_UNION_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer)) {
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer), subMilliSeconds),
	ASN_ENUM_VAL(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer), milliSeconds)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer)) {
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer)_subMilliSeconds)
		uint8_t subMilliSeconds; // OF (1..31)
	SIDL_UNION_CASE(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer)_milliSeconds)
		ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer, milliSeconds)) milliSeconds;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms1280),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms1920),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), ms2560),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)), spare1)
} ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer));

struct ASN_NR_NAME(DRX_ConfigSecondaryGroup) {
	struct ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_onDurationTimer) drx_onDurationTimer;
	ASN_ENUM(ASN_NR_NAME(DRX_ConfigSecondaryGroup, drx_InactivityTimer)) drx_InactivityTimer;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16)_setup)
		struct ASN_NR_NAME(DRX_ConfigSecondaryGroup) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(MAC_CellGroupConfig) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_Config), drx_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SchedulingRequestConfig), schedulingRequestConfig);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(BSR_Config), bsr_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(TAG_Config), tag_Config);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, phr_Config), phr_Config);
	bool skipUplinkTxDynamic;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), bool, csi_Mask);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, dataInactivityTimer), dataInactivityTimer);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, usePreBSR_r16)), usePreBSR_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SchedulingRequestId), schedulingRequestID_LBT_SCell_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(MAC_CellGroupConfig, lch_BasedPrioritization_r16)), lch_BasedPrioritization_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SchedulingRequestId), schedulingRequestID_BFR_SCell_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MAC_CellGroupConfig), ASN_NR_NAME(SetupRelease_MAC_CellGroupConfig, drx_ConfigSecondaryGroup_r16), drx_ConfigSecondaryGroup_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms1dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms3dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms5dot5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)), ms6)
} ASN_ENUM(ASN_NR_NAME(GapConfig, mgl));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp)), ms160)
} ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgta)), ms0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgta)), ms0dot25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgta)), ms0dot5)
} ASN_ENUM(ASN_NR_NAME(GapConfig, mgta));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, refServCellIndicator)), pCell),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, refServCellIndicator)), pSCell),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, refServCellIndicator)), mcg_FR2)
} ASN_ENUM(ASN_NR_NAME(GapConfig, refServCellIndicator));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl_r16)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl_r16)), ms20)
} ASN_ENUM(ASN_NR_NAME(GapConfig, mgl_r16));

struct ASN_NR_NAME(GapConfig) {
	uint8_t gapOffset; // OF (0..159)
	ASN_ENUM(ASN_NR_NAME(GapConfig, mgl)) mgl;
	ASN_ENUM(ASN_NR_NAME(GapConfig, mgrp)) mgrp;
	ASN_ENUM(ASN_NR_NAME(GapConfig, mgta)) mgta;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(GapConfig, refServCellIndicator)), refServCellIndicator);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(GapConfig), ASN_NR_NAME(ServCellIndex), refFR2ServCellAsyncCA_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(GapConfig, mgl_r16)), mgl_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2)_setup)
		struct ASN_NR_NAME(GapConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1)_setup)
		struct ASN_NR_NAME(GapConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE)_setup)
		struct ASN_NR_NAME(GapConfig) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(MeasGapConfig) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasGapConfig), ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR2), gapFR2);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasGapConfig), ASN_NR_NAME(SetupRelease_MeasGapConfig, gapFR1), gapFR1);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(MeasGapConfig), ASN_NR_NAME(SetupRelease_MeasGapConfig, gapUE), gapUE);
};

typedef B48 ASN_NR_NAME(NG_5G_S_TMSI); // SIZE (48)

typedef B40 ASN_NR_NAME(I_RNTI_Value); // SIZE (40)

SIDL_UNION_ENUM(ASN_NR_NAME(PagingUE_Identity)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PagingUE_Identity), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PagingUE_Identity), ng_5G_S_TMSI),
	ASN_ENUM_VAL(ASN_NR_NAME(PagingUE_Identity), fullI_RNTI)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PagingUE_Identity)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PagingUE_Identity)_ng_5G_S_TMSI)
		ASN_NR_NAME(NG_5G_S_TMSI) ng_5G_S_TMSI;
	SIDL_UNION_CASE(ASN_NR_NAME(PagingUE_Identity)_fullI_RNTI)
		ASN_NR_NAME(I_RNTI_Value) fullI_RNTI;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PagingRecord, accessType)), non3GPP)
} ASN_ENUM(ASN_NR_NAME(PagingRecord, accessType));

struct ASN_NR_NAME(PagingRecord) {
	struct ASN_NR_NAME(PagingUE_Identity) ue_Identity;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PagingRecord, accessType)), accessType);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PagingRecord), ASN_NR_NAME(PagingRecordList)); // SIZE (1..32)

struct ASN_NR_NAME(Paging, nonCriticalExtension) {
};

struct ASN_NR_NAME(Paging) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(Paging), ASN_NR_NAME(PagingRecordList), pagingRecordList);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(Paging), OCTET_STRING, lateNonCriticalExtension);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(Paging, nonCriticalExtension), nonCriticalExtension);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PCCH_MessageType, c1)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType, c1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType, c1), paging),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType, c1), spare1)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PCCH_MessageType, c1)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_MessageType, c1)_paging)
		struct ASN_NR_NAME(Paging) paging;
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_MessageType, c1)_spare1)
		Null spare1;
} SIDL_UNION_END;

struct ASN_NR_NAME(PCCH_MessageType, messageClassExtension) {
};

SIDL_UNION_ENUM(ASN_NR_NAME(PCCH_MessageType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType), c1),
	ASN_ENUM_VAL(ASN_NR_NAME(PCCH_MessageType), messageClassExtension)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PCCH_MessageType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_MessageType)_c1)
		struct ASN_NR_NAME(PCCH_MessageType, c1) c1;
	SIDL_UNION_CASE(ASN_NR_NAME(PCCH_MessageType)_messageClassExtension)
		struct ASN_NR_NAME(PCCH_MessageType, messageClassExtension) messageClassExtension;
} SIDL_UNION_END;

struct ASN_NR_NAME(PCCH_Message) {
	struct ASN_NR_NAME(PCCH_MessageType) message;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Type)), type2)
} ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Type));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_AdditionalPosition)), pos0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_AdditionalPosition)), pos1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_AdditionalPosition)), pos3)
} ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_AdditionalPosition));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, maxLength)), len2)
} ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, maxLength));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, resourceElementOffset)), offset01),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, resourceElementOffset)), offset10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, resourceElementOffset)), offset11)
} ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, resourceElementOffset));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, maxNrofPorts_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, maxNrofPorts_r16)), n2)
} ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, maxNrofPorts_r16));

struct ASN_NR_NAME(PTRS_DownlinkConfig) {
	SIDL_ARRAY_OPTIONAL_WITH_PFX(ASN_NR_NAME(PTRS_DownlinkConfig), uint16_t, frequencyDensity, 2); // SIZE (2) OF (1..276)
	SIDL_ARRAY_OPTIONAL_WITH_PFX(ASN_NR_NAME(PTRS_DownlinkConfig), uint8_t, timeDensity, 3); // SIZE (3) OF (0..29)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PTRS_DownlinkConfig), uint8_t, epre_Ratio); // OF (0..3)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, resourceElementOffset)), resourceElementOffset);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PTRS_DownlinkConfig, maxNrofPorts_r16)), maxNrofPorts_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS)_setup)
		struct ASN_NR_NAME(PTRS_DownlinkConfig) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Downlink_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Downlink_r16));

struct ASN_NR_NAME(DMRS_DownlinkConfig) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Type)), dmrs_Type);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_AdditionalPosition)), dmrs_AdditionalPosition);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, maxLength)), maxLength);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_DownlinkConfig), uint16_t, scramblingID0); // OF (0..65535)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(DMRS_DownlinkConfig), uint16_t, scramblingID1); // OF (0..65535)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(DMRS_DownlinkConfig), ASN_NR_NAME(SetupRelease_DMRS_DownlinkConfig, phaseTrackingRS), phaseTrackingRS);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DMRS_DownlinkConfig, dmrs_Downlink_r16)), dmrs_Downlink_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA)_setup)
		struct ASN_NR_NAME(DMRS_DownlinkConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB)_setup)
		struct ASN_NR_NAME(DMRS_DownlinkConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(QCL_Info, referenceSignal)) {
	ASN_ENUM_VAL(ASN_NR_NAME(QCL_Info, referenceSignal), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(QCL_Info, referenceSignal), csi_rs),
	ASN_ENUM_VAL(ASN_NR_NAME(QCL_Info, referenceSignal), ssb)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(QCL_Info, referenceSignal)) {
	SIDL_UNION_CASE(ASN_NR_NAME(QCL_Info, referenceSignal)_csi_rs)
		ASN_NR_NAME(NZP_CSI_RS_ResourceId) csi_rs;
	SIDL_UNION_CASE(ASN_NR_NAME(QCL_Info, referenceSignal)_ssb)
		ASN_NR_NAME(SSB_Index) ssb;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type)), typeB),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type)), typeC),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type)), typeD)
} ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type));

struct ASN_NR_NAME(QCL_Info) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(QCL_Info), ASN_NR_NAME(ServCellIndex), cell);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(QCL_Info), ASN_NR_NAME(BWP_Id), bwp_Id);
	struct ASN_NR_NAME(QCL_Info, referenceSignal) referenceSignal;
	ASN_ENUM(ASN_NR_NAME(QCL_Info, qcl_Type)) qcl_Type;
};

struct ASN_NR_NAME(TCI_State) {
	ASN_NR_NAME(TCI_StateId) tci_StateId;
	struct ASN_NR_NAME(QCL_Info) qcl_Type1;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(TCI_State), ASN_NR_NAME(QCL_Info), qcl_Type2);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_Interleaver)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_Interleaver)), n4)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_Interleaver));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocation)), resourceAllocationType0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocation)), resourceAllocationType1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocation)), dynamicSwitch)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocation));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList)_setup)
		ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, pdsch_AggregationFactor)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, pdsch_AggregationFactor)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, pdsch_AggregationFactor)), n8)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, pdsch_AggregationFactor));

typedef uint8_t ASN_NR_NAME(RateMatchPatternId); // OF (0..3)

SIDL_UNION_ENUM(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock), oneSlot),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock), twoSlots)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock)_oneSlot)
		B14 oneSlot; // SIZE (14)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock)_twoSlots)
		B28 twoSlots; // SIZE (28)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n2),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n4),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n5),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n8),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n10),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n20),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), n40)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n2)
		B2 n2; // SIZE (2)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n4)
		B4 n4; // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n5)
		B5 n5; // SIZE (5)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n8)
		B8 n8; // SIZE (8)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n10)
		B10 n10; // SIZE (10)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n20)
		B20 n20; // SIZE (20)
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern)_n40)
		B40 n40; // SIZE (40)
} SIDL_UNION_END;

struct ASN_NR_NAME(RateMatchPattern, patternType, bitmaps) {
	B275 resourceBlocks; // SIZE (275)
	struct ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, symbolsInResourceBlock) symbolsInResourceBlock;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(RateMatchPattern, patternType, bitmaps, periodicityAndPattern), periodicityAndPattern);
};

SIDL_UNION_ENUM(ASN_NR_NAME(RateMatchPattern, patternType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType), bitmaps),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPattern, patternType), controlResourceSet)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RateMatchPattern, patternType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType)_bitmaps)
		struct ASN_NR_NAME(RateMatchPattern, patternType, bitmaps) bitmaps;
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPattern, patternType)_controlResourceSet)
		ASN_NR_NAME(ControlResourceSetId) controlResourceSet;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPattern, dummy)), dynamic),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPattern, dummy)), semiStatic)
} ASN_ENUM(ASN_NR_NAME(RateMatchPattern, dummy));

struct ASN_NR_NAME(RateMatchPattern) {
	ASN_NR_NAME(RateMatchPatternId) rateMatchPatternId;
	struct ASN_NR_NAME(RateMatchPattern, patternType) patternType;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RateMatchPattern), ASN_ENUM(ASN_NR_NAME(SubcarrierSpacing)), subcarrierSpacing);
	ASN_ENUM(ASN_NR_NAME(RateMatchPattern, dummy)) dummy;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RateMatchPattern), ASN_NR_NAME(ControlResourceSetId_r16), controlResourceSet_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(RateMatchPatternGroup_s)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPatternGroup_s), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPatternGroup_s), cellLevel),
	ASN_ENUM_VAL(ASN_NR_NAME(RateMatchPatternGroup_s), bwpLevel)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RateMatchPatternGroup_s)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPatternGroup_s)_cellLevel)
		ASN_NR_NAME(RateMatchPatternId) cellLevel;
	SIDL_UNION_CASE(ASN_NR_NAME(RateMatchPatternGroup_s)_bwpLevel)
		ASN_NR_NAME(RateMatchPatternId) bwpLevel;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(RateMatchPatternGroup_s), ASN_NR_NAME(RateMatchPatternGroup)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, rbg_Size)), config1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, rbg_Size)), config2)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, rbg_Size));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_Table)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_Table)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_Table));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, maxNrofCodeWordsScheduledByDCI)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, maxNrofCodeWordsScheduledByDCI)), n2)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, maxNrofCodeWordsScheduledByDCI));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling, bundleSize)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling, bundleSize)), wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling, bundleSize));

struct ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling, bundleSize)), bundleSize);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1)), wideband),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1)), n2_wideband),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1)), n4_wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet2)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet2)), wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet2));

struct ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet1)), bundleSizeSet1);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling, bundleSizeSet2)), bundleSizeSet2);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingType)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingType), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingType), staticBundling),
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingType), dynamicBundling)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PDSCH_Config, prb_BundlingType)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PDSCH_Config, prb_BundlingType)_staticBundling)
		struct ASN_NR_NAME(PDSCH_Config, prb_BundlingType, staticBundling) staticBundling;
	SIDL_UNION_CASE(ASN_NR_NAME(PDSCH_Config, prb_BundlingType)_dynamicBundling)
		struct ASN_NR_NAME(PDSCH_Config, prb_BundlingType, dynamicBundling) dynamicBundling;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(ZP_CSI_RS_ResourceId); // OF (0..31)

SIDL_UNION_ENUM(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots4),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots5),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots8),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots10),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots16),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots20),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots32),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots40),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots64),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots80),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots160),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots320),
	ASN_ENUM_VAL(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), slots640)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots4)
		uint8_t slots4; // OF (0..3)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots5)
		uint8_t slots5; // OF (0..4)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots8)
		uint8_t slots8; // OF (0..7)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots10)
		uint8_t slots10; // OF (0..9)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots16)
		uint8_t slots16; // OF (0..15)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots20)
		uint8_t slots20; // OF (0..19)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots32)
		uint8_t slots32; // OF (0..31)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots40)
		uint8_t slots40; // OF (0..39)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots64)
		uint8_t slots64; // OF (0..63)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots80)
		uint8_t slots80; // OF (0..79)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots160)
		uint8_t slots160; // OF (0..159)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots320)
		uint16_t slots320; // OF (0..319)
	SIDL_UNION_CASE(ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset)_slots640)
		uint16_t slots640; // OF (0..639)
} SIDL_UNION_END;

struct ASN_NR_NAME(ZP_CSI_RS_Resource) {
	ASN_NR_NAME(ZP_CSI_RS_ResourceId) zp_CSI_RS_ResourceId;
	struct ASN_NR_NAME(CSI_RS_ResourceMapping) resourceMapping;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(ZP_CSI_RS_Resource), ASN_NR_NAME(CSI_ResourcePeriodicityAndOffset), periodicityAndOffset);
};

typedef uint8_t ASN_NR_NAME(ZP_CSI_RS_ResourceSetId); // OF (0..15)

struct ASN_NR_NAME(ZP_CSI_RS_ResourceSet) {
	ASN_NR_NAME(ZP_CSI_RS_ResourceSetId) zp_CSI_RS_ResourceSetId;
	SIDL_DYNAMIC(ASN_NR_NAME(ZP_CSI_RS_ResourceId), zp_CSI_RS_ResourceIdList); // SIZE (1..16)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet)_setup)
		struct ASN_NR_NAME(ZP_CSI_RS_ResourceSet) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(MaxMIMO_LayersDL_r16); // OF (1..8)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16)_setup)
		ASN_NR_NAME(MaxMIMO_LayersDL_r16) setup;
} SIDL_UNION_END;

typedef SIDL_DYNAMIC(uint8_t, ASN_NR_NAME(MinSchedulingOffsetK0_Values_r16)); // SIZE (1..2) OF (0..16)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16)_setup)
		ASN_NR_NAME(MinSchedulingOffsetK0_Values_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, antennaPortsFieldPresenceDCI_1_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, antennaPortsFieldPresenceDCI_1_2_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16)_setup)
		struct ASN_NR_NAME(DMRS_DownlinkConfig) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16)_setup)
		struct ASN_NR_NAME(DMRS_DownlinkConfig) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, dmrs_SequenceInitializationDCI_1_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, dmrs_SequenceInitializationDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_TableDCI_1_2_r16)), qam256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_TableDCI_1_2_r16)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_TableDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, mappingType_r16)), typeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, mappingType_r16)), typeB)
} ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, mappingType_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), n16)
} ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16));

struct ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16), uint8_t, k0_r16); // OF (0..32)
	ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, mappingType_r16)) mappingType_r16;
	uint8_t startSymbolAndLength_r16; // OF (0..127)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16, repetitionNumber_r16)), repetitionNumber_r16);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PDSCH_TimeDomainResourceAllocation_r16), ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList_r16)); // SIZE (1..16)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16)_setup)
		ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16, bundleSize_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16, bundleSize_r16)), wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16, bundleSize_r16));

struct ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16, bundleSize_r16)), bundleSize_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16)), wideband),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16)), n2_wideband),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16)), n4_wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet2_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet2_r16)), wideband)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet2_r16));

struct ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet1_r16)), bundleSizeSet1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16, bundleSizeSet2_r16)), bundleSizeSet2_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16), staticBundling_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16), dynamicBundling_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16)_staticBundling_r16)
		struct ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, staticBundling_r16) staticBundling_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16)_dynamicBundling_r16)
		struct ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16, dynamicBundling_r16) dynamicBundling_r16;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16)), n16)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_InterleaverDCI_1_2_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_InterleaverDCI_1_2_r16)), n4)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_InterleaverDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, referenceOfSLIVDCI_1_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, referenceOfSLIVDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationDCI_1_2_r16)), resourceAllocationType0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationDCI_1_2_r16)), resourceAllocationType1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationDCI_1_2_r16)), dynamicSwitch)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_1_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_1_r16));

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16)_setup)
		ASN_NR_NAME(PDSCH_TimeDomainResourceAllocationList_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(FDM_TDM_r16, repetitionScheme_r16)), fdmSchemeA),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(FDM_TDM_r16, repetitionScheme_r16)), fdmSchemeB),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(FDM_TDM_r16, repetitionScheme_r16)), tdmSchemeA)
} ASN_ENUM(ASN_NR_NAME(FDM_TDM_r16, repetitionScheme_r16));

struct ASN_NR_NAME(FDM_TDM_r16) {
	ASN_ENUM(ASN_NR_NAME(FDM_TDM_r16, repetitionScheme_r16)) repetitionScheme_r16;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(FDM_TDM_r16), uint8_t, startingSymbolOffsetK_r16); // OF (0..7)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16)_setup)
		struct ASN_NR_NAME(FDM_TDM_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SlotBased_r16, tciMapping_r16)), cyclicMapping),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SlotBased_r16, tciMapping_r16)), sequenticalMapping)
} ASN_ENUM(ASN_NR_NAME(SlotBased_r16, tciMapping_r16));

struct ASN_NR_NAME(SlotBased_r16) {
	ASN_ENUM(ASN_NR_NAME(SlotBased_r16, tciMapping_r16)) tciMapping_r16;
	uint8_t sequenceOffsetforRV_r16; // OF (1..3)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16)_setup)
		struct ASN_NR_NAME(SlotBased_r16) setup;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(RepetitionSchemeConfig_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(RepetitionSchemeConfig_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(RepetitionSchemeConfig_r16), fdm_TDM_r16),
	ASN_ENUM_VAL(ASN_NR_NAME(RepetitionSchemeConfig_r16), slotBased_r16)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(RepetitionSchemeConfig_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(RepetitionSchemeConfig_r16)_fdm_TDM_r16)
		struct ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, fdm_TDM_r16) fdm_TDM_r16;
	SIDL_UNION_CASE(ASN_NR_NAME(RepetitionSchemeConfig_r16)_slotBased_r16)
		struct ASN_NR_NAME(SetupRelease_RepetitionSchemeConfig_r16, slotBased_r16) slotBased_r16;
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16)_setup)
		struct ASN_NR_NAME(RepetitionSchemeConfig_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PDSCH_Config) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), uint16_t, dataScramblingIdentityPDSCH); // OF (0..1023)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA), dmrs_DownlinkForPDSCH_MappingTypeA);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB), dmrs_DownlinkForPDSCH_MappingTypeB);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(TCI_State), tci_StatesToAddModList); // SIZE (1..128)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(TCI_StateId), tci_StatesToReleaseList); // SIZE (1..128)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_Interleaver)), vrb_ToPRB_Interleaver);
	ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocation)) resourceAllocation;
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList), pdsch_TimeDomainAllocationList);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, pdsch_AggregationFactor)), pdsch_AggregationFactor);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPattern), rateMatchPatternToAddModList); // SIZE (1..4)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPatternId), rateMatchPatternToReleaseList); // SIZE (1..4)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPatternGroup), rateMatchPatternGroup1);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPatternGroup), rateMatchPatternGroup2);
	ASN_ENUM(ASN_NR_NAME(PDSCH_Config, rbg_Size)) rbg_Size;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_Table)), mcs_Table);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, maxNrofCodeWordsScheduledByDCI)), maxNrofCodeWordsScheduledByDCI);
	struct ASN_NR_NAME(PDSCH_Config, prb_BundlingType) prb_BundlingType;
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_Resource), zp_CSI_RS_ResourceToAddModList); // SIZE (1..32)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceId), zp_CSI_RS_ResourceToReleaseList); // SIZE (1..32)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSet), aperiodic_ZP_CSI_RS_ResourceSetsToAddModList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSetId), aperiodic_ZP_CSI_RS_ResourceSetsToReleaseList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSet), sp_ZP_CSI_RS_ResourceSetsToAddModList); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSetId), sp_ZP_CSI_RS_ResourceSetsToReleaseList); // SIZE (1..16)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, p_ZP_CSI_RS_ResourceSet), p_ZP_CSI_RS_ResourceSet);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, maxMIMO_Layers_r16), maxMIMO_Layers_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, minimumSchedulingOffsetK0_r16), minimumSchedulingOffsetK0_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, antennaPortsFieldPresenceDCI_1_2_r16)), antennaPortsFieldPresenceDCI_1_2_r16);
	SIDL_DYNAMIC_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSet), aperiodicZP_CSI_RS_ResourceSetsToAddModListDCI_1_2_r16); // SIZE (1..16)
	SIDL_DYNAMIC_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(ZP_CSI_RS_ResourceSetId), aperiodicZP_CSI_RS_ResourceSetsToReleaseListDCI_1_2_r16); // SIZE (1..16)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16), dmrs_DownlinkForPDSCH_MappingTypeA_DCI_1_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16), dmrs_DownlinkForPDSCH_MappingTypeB_DCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, dmrs_SequenceInitializationDCI_1_2_r16)), dmrs_SequenceInitializationDCI_1_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), uint8_t, harq_ProcessNumberSizeDCI_1_2_r16); // OF (0..4)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, mcs_TableDCI_1_2_r16)), mcs_TableDCI_1_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), uint8_t, numberOfBitsForRV_DCI_1_2_r16); // OF (0..2)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationListDCI_1_2_r16), pdsch_TimeDomainAllocationListDCI_1_2_r16);
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(PDSCH_Config, prb_BundlingTypeDCI_1_2_r16), prb_BundlingTypeDCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_2_r16)), priorityIndicatorDCI_1_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPatternGroup), rateMatchPatternGroup1DCI_1_2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(RateMatchPatternGroup), rateMatchPatternGroup2DCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationType1GranularityDCI_1_2_r16)), resourceAllocationType1GranularityDCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, vrb_ToPRB_InterleaverDCI_1_2_r16)), vrb_ToPRB_InterleaverDCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, referenceOfSLIVDCI_1_2_r16)), referenceOfSLIVDCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, resourceAllocationDCI_1_2_r16)), resourceAllocationDCI_1_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_Config, priorityIndicatorDCI_1_1_r16)), priorityIndicatorDCI_1_1_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_Config), uint16_t, dataScramblingIdentityPDSCH2_r16); // OF (0..1023)
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, pdsch_TimeDomainAllocationList_r16), pdsch_TimeDomainAllocationList_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_Config), ASN_NR_NAME(SetupRelease_PDSCH_Config, repetitionSchemeConfig_r16), repetitionSchemeConfig_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n8)
} ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock));

struct ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission) {
	ASN_ENUM(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)) maxCodeBlockGroupsPerTransportBlock;
	bool codeBlockGroupFlushIndicator;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission)_setup)
		struct ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, xOverhead)), xOh6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, xOverhead)), xOh12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, xOverhead)), xOh18)
} ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, xOverhead));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), n16)
} ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH));

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(PDSCH_CodeBlockGroupTransmission), ASN_NR_NAME(PDSCH_CodeBlockGroupTransmissionList_r16)); // SIZE (1..2)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16)_setup)
		ASN_NR_NAME(PDSCH_CodeBlockGroupTransmissionList_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PDSCH_ServingCellConfig) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_ServingCellConfig), ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, codeBlockGroupTransmission), codeBlockGroupTransmission);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, xOverhead)), xOverhead);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PDSCH_ServingCellConfig, nrofHARQ_ProcessesForPDSCH)), nrofHARQ_ProcessesForPDSCH);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_ServingCellConfig), ASN_NR_NAME(ServCellIndex), pucch_Cell);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_ServingCellConfig), uint8_t, maxMIMO_Layers); // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PDSCH_ServingCellConfig), bool, processingType2Enabled);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PDSCH_ServingCellConfig), ASN_NR_NAME(SetupRelease_PDSCH_ServingCellConfig, pdsch_CodeBlockGroupTransmissionList_r16), pdsch_CodeBlockGroupTransmissionList_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)), n8)
} ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock));

struct ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission) {
	ASN_ENUM(ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission, maxCodeBlockGroupsPerTransportBlock)) maxCodeBlockGroupsPerTransportBlock;
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission)_setup)
		struct ASN_NR_NAME(PUSCH_CodeBlockGroupTransmission) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, rateMatching)), limitedBufferRM)
} ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, rateMatching));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, xOverhead)), xoh6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, xOverhead)), xoh12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, xOverhead)), xoh18)
} ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, xOverhead));

typedef uint8_t ASN_NR_NAME(MaxMIMO_LayersDCI_0_2_r16); // OF (1..4)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16)_setup)
		ASN_NR_NAME(MaxMIMO_LayersDCI_0_2_r16) setup;
} SIDL_UNION_END;

struct ASN_NR_NAME(PUSCH_ServingCellConfig) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_ServingCellConfig), ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, codeBlockGroupTransmission), codeBlockGroupTransmission);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, rateMatching)), rateMatching);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PUSCH_ServingCellConfig, xOverhead)), xOverhead);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_ServingCellConfig), uint8_t, maxMIMO_Layers); // OF (1..4)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PUSCH_ServingCellConfig), bool, processingType2Enabled);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PUSCH_ServingCellConfig), ASN_NR_NAME(SetupRelease_PUSCH_ServingCellConfig, maxMIMO_LayersDCI_0_2_r16), maxMIMO_LayersDCI_0_2_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook)), semiStatic),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook)), dynamic)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook));

typedef uint16_t ASN_NR_NAME(RNTI_Value); // OF (0..65535)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI)_setup)
		ASN_NR_NAME(RNTI_Value) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale)), dB0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale)), dB6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale)), spare1)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale));

typedef uint8_t ASN_NR_NAME(PDCCH_BlindDetection); // OF (1..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection)_setup)
		ASN_NR_NAME(PDCCH_BlindDetection) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_WakeUp_r16)), true)
} ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_WakeUp_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitPeriodicL1_RSRP_r16)), true)
} ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitPeriodicL1_RSRP_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitOtherPeriodicCSI_r16)), true)
} ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitOtherPeriodicCSI_r16));

struct ASN_NR_NAME(DCP_Config_r16) {
	ASN_NR_NAME(RNTI_Value) ps_RNTI_r16;
	uint8_t ps_Offset_r16; // OF (1..120)
	uint8_t sizeDCI_2_6_r16; // OF (1..140)
	uint8_t ps_PositionDCI_2_6_r16; // OF (0..139)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_WakeUp_r16)), ps_WakeUp_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitPeriodicL1_RSRP_r16)), ps_TransmitPeriodicL1_RSRP_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(DCP_Config_r16, ps_TransmitOtherPeriodicCSI_r16)), ps_TransmitOtherPeriodicCSI_r16);
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16)_setup)
		struct ASN_NR_NAME(DCP_Config_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16)), enabled),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16)), disabled)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16)), enabled),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16)), disabled)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16)), semiStatic),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16)), dynamic)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR1_r16)), semi_static_mode1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR1_r16)), semi_static_mode2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR1_r16)), dynamic)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR1_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR2_r16)), semi_static_mode1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR2_r16)), semi_static_mode2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR2_r16)), dynamic)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_r16)), enhancedDynamic)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nfi_TotalDAI_Included_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nfi_TotalDAI_Included_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ul_TotalDAI_Included_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ul_TotalDAI_Included_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedback_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedback_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackNDI_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackNDI_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackCBG_r16)), true)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackCBG_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_0_2_r16)), enabled)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_0_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_1_2_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_1_2_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_1_2_r16)), n4)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_1_2_r16));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16_e)), semiStatic),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16_e)), dynamic)
} ASN_ENUM(ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16_e));

typedef SIDL_DYNAMIC(ASN_ENUM(ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16_e)), ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16)); // SIZE (1..2)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16)_setup)
		ASN_NR_NAME(PDSCH_HARQ_ACK_CodebookList_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ackNackFeedbackMode_r16)), joint),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ackNackFeedbackMode_r16)), separate)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ackNackFeedbackMode_r16));

struct ASN_NR_NAME(PDCCH_BlindDetectionCA_CombIndicator_r16) {
	uint8_t pdcch_BlindDetectionCA1_r16; // OF (1..15)
	uint8_t pdcch_BlindDetectionCA2_r16; // OF (1..15)
};

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16)_setup)
		struct ASN_NR_NAME(PDCCH_BlindDetectionCA_CombIndicator_r16) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(PDCCH_BlindDetection2_r16); // OF (1..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16)_setup)
		ASN_NR_NAME(PDCCH_BlindDetection2_r16) setup;
} SIDL_UNION_END;

typedef uint8_t ASN_NR_NAME(PDCCH_BlindDetection3_r16); // OF (1..15)

SIDL_UNION_ENUM(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16)) {
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16), release),
	ASN_ENUM_VAL(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16), setup)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16)) {
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16)_release)
		Null release;
	SIDL_UNION_CASE(ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16)_setup)
		ASN_NR_NAME(PDCCH_BlindDetection3_r16) setup;
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, bdFactorR_r16)), n1)
} ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, bdFactorR_r16));

struct ASN_NR_NAME(PhysicalCellGroupConfig) {
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH)), harq_ACK_SpatialBundlingPUCCH);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH)), harq_ACK_SpatialBundlingPUSCH);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(P_Max), p_NR_FR1);
	ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook)) pdsch_HARQ_ACK_Codebook;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(RNTI_Value), tpc_SRS_RNTI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(RNTI_Value), tpc_PUCCH_RNTI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(RNTI_Value), tpc_PUSCH_RNTI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(RNTI_Value), sp_CSI_RNTI);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, cs_RNTI), cs_RNTI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(RNTI_Value), mcs_C_RNTI);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(P_Max), p_UE_FR1);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, xScale)), xScale);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection), pdcch_BlindDetection);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, dcp_Config_r16), dcp_Config_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16)), harq_ACK_SpatialBundlingPUCCH_secondaryPUCCHgroup_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16)), harq_ACK_SpatialBundlingPUSCH_secondaryPUCCHgroup_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16)), pdsch_HARQ_ACK_Codebook_secondaryPUCCHgroup_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(P_Max), p_NR_FR2_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(P_Max), p_UE_FR2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR1_r16)), nrdc_PCmode_FR1_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nrdc_PCmode_FR2_r16)), nrdc_PCmode_FR2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_Codebook_r16)), pdsch_HARQ_ACK_Codebook_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, nfi_TotalDAI_Included_r16)), nfi_TotalDAI_Included_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ul_TotalDAI_Included_r16)), ul_TotalDAI_Included_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedback_r16)), pdsch_HARQ_ACK_OneShotFeedback_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackNDI_r16)), pdsch_HARQ_ACK_OneShotFeedbackNDI_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, pdsch_HARQ_ACK_OneShotFeedbackCBG_r16)), pdsch_HARQ_ACK_OneShotFeedbackCBG_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_0_2_r16)), downlinkAssignmentIndexDCI_0_2_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, downlinkAssignmentIndexDCI_1_2_r16)), downlinkAssignmentIndexDCI_1_2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdsch_HARQ_ACK_CodebookList_r16), pdsch_HARQ_ACK_CodebookList_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, ackNackFeedbackMode_r16)), ackNackFeedbackMode_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetectionCA_CombIndicator_r16), pdcch_BlindDetectionCA_CombIndicator_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection2_r16), pdcch_BlindDetection2_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(PhysicalCellGroupConfig), ASN_NR_NAME(SetupRelease_PhysicalCellGroupConfig, pdcch_BlindDetection3_r16), pdcch_BlindDetection3_r16);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(PhysicalCellGroupConfig, bdFactorR_r16)), bdFactorR_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), oneEighth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), oneFourth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), oneHalf),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), eight),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), sixteen)
} ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion));

struct ASN_NR_NAME(CFRA, occasions) {
	struct ASN_NR_NAME(RACH_ConfigGeneric) rach_ConfigGeneric;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CFRA, occasions, ssb_perRACH_Occasion)), ssb_perRACH_Occasion);
};

struct ASN_NR_NAME(CFRA_SSB_Resource) {
	ASN_NR_NAME(SSB_Index) ssb;
	uint8_t ra_PreambleIndex; // OF (0..63)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CFRA_SSB_Resource), uint16_t, msgA_PUSCH_resource_Index_r16); // OF (0..3071)
};

struct ASN_NR_NAME(CFRA, resources, ssb) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(CFRA, resources, ssb), ASN_NR_NAME(CFRA_SSB_Resource), ssb_ResourceList); // SIZE (1..64)
	uint8_t ra_ssb_OccasionMaskIndex; // OF (0..15)
};

typedef uint8_t ASN_NR_NAME(CSI_RS_Index); // OF (0..95)

struct ASN_NR_NAME(CFRA_CSIRS_Resource) {
	ASN_NR_NAME(CSI_RS_Index) csi_RS;
	SIDL_DYNAMIC_WITH_PFX(ASN_NR_NAME(CFRA_CSIRS_Resource), uint16_t, ra_OccasionList); // SIZE (1..64) OF (0..511)
	uint8_t ra_PreambleIndex; // OF (0..63)
};

struct ASN_NR_NAME(CFRA, resources, csirs) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(CFRA, resources, csirs), ASN_NR_NAME(CFRA_CSIRS_Resource), csirs_ResourceList); // SIZE (1..96)
	ASN_NR_NAME(RSRP_Range) rsrp_ThresholdCSI_RS;
};

SIDL_UNION_ENUM(ASN_NR_NAME(CFRA, resources)) {
	ASN_ENUM_VAL(ASN_NR_NAME(CFRA, resources), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(CFRA, resources), ssb),
	ASN_ENUM_VAL(ASN_NR_NAME(CFRA, resources), csirs)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(CFRA, resources)) {
	SIDL_UNION_CASE(ASN_NR_NAME(CFRA, resources)_ssb)
		struct ASN_NR_NAME(CFRA, resources, ssb) ssb;
	SIDL_UNION_CASE(ASN_NR_NAME(CFRA, resources)_csirs)
		struct ASN_NR_NAME(CFRA, resources, csirs) csirs;
} SIDL_UNION_END;

struct ASN_NR_NAME(CFRA) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(CFRA, occasions), occasions);
	struct ASN_NR_NAME(CFRA, resources) resources;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(CFRA), uint8_t, totalNumberOfRA_Preambles); // OF (1..63)
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), oneEighth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), oneFourth),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), oneHalf),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), one),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), two),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), four),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), eight),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)), sixteen)
} ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16));

struct ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16) {
	struct ASN_NR_NAME(RACH_ConfigGenericTwoStepRA_r16) rach_ConfigGenericTwoStepRA_r16;
	ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16, ssb_PerRACH_OccasionTwoStepRA_r16)) ssb_PerRACH_OccasionTwoStepRA_r16;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), n200)
} ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16));

struct ASN_NR_NAME(CFRA_TwoStep_r16, resourcesTwoStep_r16) {
	SIDL_DYNAMIC_OF_STRUCT_WITH_PFX(ASN_NR_NAME(CFRA_TwoStep_r16, resourcesTwoStep_r16), ASN_NR_NAME(CFRA_SSB_Resource), ssb_ResourceList); // SIZE (1..64)
	uint8_t ra_ssb_OccasionMaskIndex; // OF (0..15)
};

struct ASN_NR_NAME(CFRA_TwoStep_r16) {
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(CFRA_TwoStep_r16, occasionsTwoStepRA_r16), occasionsTwoStepRA_r16);
	struct ASN_NR_NAME(MsgA_PUSCH_Resource_r16) msgA_CFRA_PUSCH_r16;
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(CFRA_TwoStep_r16, msgA_TransMax_r16)), msgA_TransMax_r16);
	struct ASN_NR_NAME(CFRA_TwoStep_r16, resourcesTwoStep_r16) resourcesTwoStep_r16;
};

struct ASN_NR_NAME(RACH_ConfigDedicated) {
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(RACH_ConfigDedicated), ASN_NR_NAME(CFRA), cfra);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(RACH_ConfigDedicated), ASN_NR_NAME(RA_Prioritization), ra_Prioritization);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(RACH_ConfigDedicated), ASN_NR_NAME(RA_Prioritization), ra_PrioritizationTwoStep_r16);
	SIDL_OPTIONAL_OF_STRUCT_WITH_PFX(ASN_NR_NAME(RACH_ConfigDedicated), ASN_NR_NAME(CFRA_TwoStep_r16), cfra_TwoStep_r16);
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), n100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)), spare1)
} ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)), n32)
} ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod));

SIDL_UNION_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1)) {
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1), oneFrame),
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1), fourFrames)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1)) {
	SIDL_UNION_CASE(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1)_oneFrame)
		B6 oneFrame; // SIZE (6)
	SIDL_UNION_CASE(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1)_fourFrames)
		B24 fourFrames; // SIZE (24)
} SIDL_UNION_END;

SIDL_UNION_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2)) {
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2), oneFrame),
	ASN_ENUM_VAL(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2), fourFrames)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2)) {
	SIDL_UNION_CASE(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2)_oneFrame)
		B2 oneFrame; // SIZE (2)
	SIDL_UNION_CASE(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2)_fourFrames)
		B8 fourFrames; // SIZE (8)
} SIDL_UNION_END;

struct ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig) {
	ASN_ENUM(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, radioframeAllocationPeriod)) radioframeAllocationPeriod;
	uint8_t radioframeAllocationOffset; // OF (0..7)
	struct ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation1) subframeAllocation1;
	SIDL_OPTIONAL_OF_STRUCT(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig, subframeAllocation2), subframeAllocation2);
};

typedef SIDL_DYNAMIC_OF_STRUCT(ASN_NR_NAME(EUTRA_MBSFN_SubframeConfig), ASN_NR_NAME(EUTRA_MBSFN_SubframeConfigList)); // SIZE (1..8)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, nrofCRS_Ports)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, nrofCRS_Ports)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, nrofCRS_Ports)), n4)
} ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, nrofCRS_Ports));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n0),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)), n5)
} ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift));

struct ASN_NR_NAME(RateMatchPatternLTE_CRS) {
	uint16_t carrierFreqDL; // OF (0..16383)
	ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, carrierBandwidthDL)) carrierBandwidthDL;
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(RateMatchPatternLTE_CRS), ASN_NR_NAME(EUTRA_MBSFN_SubframeConfigList), mbsfn_SubframeConfigList);
	ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, nrofCRS_Ports)) nrofCRS_Ports;
	ASN_ENUM(ASN_NR_NAME(RateMatchPatternLTE_CRS, v_Shift)) v_Shift;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms320),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), ms640),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)), spare1)
} ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, mcs_Table)), qam64LowSE)
} ASN_ENUM(ASN_NR_NAME(SPS_Config, mcs_Table));

typedef uint8_t ASN_NR_NAME(SPS_ConfigIndex_r16); // OF (0..7)

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16)), n1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16)), n2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16)), n4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16)), n8)
} ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16));

struct ASN_NR_NAME(SPS_Config) {
	ASN_ENUM(ASN_NR_NAME(SPS_Config, periodicity)) periodicity;
	uint8_t nrofHARQ_Processes; // OF (1..8)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_Config), ASN_NR_NAME(PUCCH_ResourceId), n1PUCCH_AN);
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, mcs_Table)), mcs_Table);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_Config), ASN_NR_NAME(SPS_ConfigIndex_r16), sps_ConfigIndex_r16);
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_Config), uint8_t, harq_ProcID_Offset_r16); // OF (0..15)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_Config), uint16_t, periodicityExt_r16); // OF (1..5120)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(SPS_Config), uint8_t, harq_CodebookID_r16); // OF (1..2)
	SIDL_OPTIONAL(ASN_ENUM(ASN_NR_NAME(SPS_Config, pdsch_AggregationFactor_r16)), pdsch_AggregationFactor_r16);
};

typedef uint16_t ASN_NR_NAME(ScramblingId); // OF (0..1023)

SIDL_UNION_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst)) {
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst), shortBitmap),
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst), mediumBitmap),
	ASN_ENUM_VAL(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst), longBitmap)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst)) {
	SIDL_UNION_CASE(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst)_shortBitmap)
		B4 shortBitmap; // SIZE (4)
	SIDL_UNION_CASE(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst)_mediumBitmap)
		B8 mediumBitmap; // SIZE (8)
	SIDL_UNION_CASE(ASN_NR_NAME(ServingCellConfigCommon, ssb_PositionsInBurst)_longBitmap)
		B64 longBitmap; // SIZE (64)
} SIDL_UNION_END;

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell)), spare1)
} ASN_ENUM(ASN_NR_NAME(ServingCellConfigCommon, ssb_periodicityServingCell));

typedef uint16_t ASN_NR_NAME(TDD_UL_DL_SlotIndex); // OF (0..319)

struct ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols, explicit) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols, explicit), uint8_t, nrofDownlinkSymbols); // OF (1..13)
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols, explicit), uint8_t, nrofUplinkSymbols); // OF (1..13)
};

SIDL_UNION_ENUM(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols)) {
	ASN_ENUM_VAL(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols), UNBOUND_VALUE),
	ASN_ENUM_VAL(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols), allDownlink),
	ASN_ENUM_VAL(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols), allUplink),
	ASN_ENUM_VAL(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols), explicit)
};
SIDL_UNION_BEGIN(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols)) {
	SIDL_UNION_CASE(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols)_allDownlink)
		Null allDownlink;
	SIDL_UNION_CASE(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols)_allUplink)
		Null allUplink;
	SIDL_UNION_CASE(ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols)_explicit)
		struct ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols, explicit) explicit;
} SIDL_UNION_END;

struct ASN_NR_NAME(TDD_UL_DL_SlotConfig) {
	ASN_NR_NAME(TDD_UL_DL_SlotIndex) slotIndex;
	struct ASN_NR_NAME(TDD_UL_DL_SlotConfig, symbols) symbols;
};

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms35),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms45),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms55),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms60),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms65),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms70),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms80),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms85),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms90),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms95),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms105),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms110),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms115),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms120),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms130),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms135),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms140),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms145),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms150),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms155),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms160),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms165),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms170),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms175),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms180),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms185),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms190),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms195),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms200),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms205),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms210),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms215),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms220),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms225),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms230),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms235),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms240),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms245),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms300),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms350),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms400),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms450),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms800),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms1_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms2_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms3_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), ms4_v1610),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)), spare1)
} ASN_ENUM(ASN_NR_NAME(T_PollRetransmit));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p32),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p64),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p128),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p256),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p512),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p1024),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p2048),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p4096),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p6144),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p8192),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p12288),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p16384),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p20480),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p24576),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p28672),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p32768),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p40960),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p49152),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p57344),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), p65536),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), infinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollPDU)), spare1)
} ASN_ENUM(ASN_NR_NAME(PollPDU));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB50),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB75),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB100),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB125),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB375),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB750),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB1000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB1250),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB1500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB2000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB3000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB4000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB4500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB5000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB5500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB6000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB6500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB7000),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), kB7500),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB25),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB30),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), mB40),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), infinity),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare20),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare19),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare18),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare17),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare15),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare14),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare13),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare12),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare11),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare10),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare9),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare7),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare5),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(PollByte)), spare1)
} ASN_ENUM(ASN_NR_NAME(PollByte));

typedef enum {
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t1),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t2),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t3),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t4),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t6),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t8),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t16),
	ASN_ENUM_VAL(ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)), t32)
} ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold));

struct ASN_NR_NAME(UL_AM_RLC) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(UL_AM_RLC), ASN_ENUM(ASN_NR_NAME(SN_FieldLengthAM)), sn_FieldLength);
	ASN_ENUM(ASN_NR_NAME(T_PollRetransmit)) t_PollRetransmit;
	ASN_ENUM(ASN_NR_NAME(PollPDU)) pollPDU;
	ASN_ENUM(ASN_NR_NAME(PollByte)) pollByte;
	ASN_ENUM(ASN_NR_NAME(UL_AM_RLC, maxRetxThreshold)) maxRetxThreshold;
};

struct ASN_NR_NAME(UL_UM_RLC) {
	SIDL_OPTIONAL_WITH_PFX(ASN_NR_NAME(UL_UM_RLC), ASN_ENUM(ASN_NR_NAME(SN_FieldLengthUM)), sn_FieldLength);
};
