Active_gNBs = ( "gNB-OAI");
 # Asn1_verbosity, choice in: none, info, annoying
Asn1_verbosity = "none";

gNBs = (
{
  ////////// Identification parameters:
  gNB_ID    = 0xe00;
  gNB_name  = "gNB-OAI";

  // Tracking area code, 0x0000 and 0xfffe are reserved values
  tracking_area_code = 1;
  plmn_list = ({ mcc = 001; mnc = 01; mnc_length = 2; snssaiList = ({ sst = 1; sd = 1; }); });

  nr_cellid = 12345678L;
  #nr_cellid = 0L;

  ////////// Physical parameters:

  ssb_SubcarrierOffset  = 6;                                                # (type integer     TTCN: p_Kssb)
  pdsch_AntennaPorts_XP = 1;
  pusch_AntennaPorts    = 1;
  do_CSIRS              = 0;
  do_SRS                = 0;
  #ul_prbblacklist       = "135,136,137,138"

  pdcch_ConfigSIB1 = ({
    controlResourceSetZero = 11;                                             # (type ControlResourceSetZero      TTCN: p_Coreset0_Index)  #p_Coreset0_OffsetRB (expressed in PRB of 30 KHz) depends On p_Coreset0_Index
    searchSpaceZero = 0;                                                     # Cr0_id -> cr0_offset: (0,0) (1,1) (2,2) (3,3) (4,4) (5,0), (6,1) (7,2) (8,3) (9,4) (10,12) (11,14) (12,16) (13,12) (14,14) (15,16)
  });                                                                        # p_offsetCarrierCoreset0 = p_OffsetToPointA/2 - p_OffsetToCarrier - p_Coreset0_OffsetRB

  servingCellConfigCommon = (
  {
    # spCellConfigCommon

    physCellId = 0;

    # downlinkConfigCommon
      # frequencyInfoDL
     # this is 3300.60 MHz + 53*12*30e-3 MHz = 3954.72
      absoluteFrequencySSB                  = 620640;   # 3309.6 MHz         # (type:ARFCN_VAlueNR    TTCN: p_SSB_ARFCN)
     # absoluteFrequencySSB                  = 620352;   #3305.28 MHZ
      dl_frequencyBand                      = 78;                            # (type:FreqBandIndiactorNR   TTCN: p_FreqBandIndicatorNR) as band=78 then p_SSBSubcarrierSpacing=30kHz (38.104)
      # this is 3900.60 MHz
      dl_absoluteFrequencyPointA            =  620058; #620040;              # (type:ARFCN_VAlueNR   TTCN: p_PointA)
      # dl_absoluteFrequencyPointA            =  620058;                     # p_OffsetToPointA= (p_SSB_ARFCN-p_kssb-p_PointA)/12 - 10*p_SSBSubcarrierSpacing/15Khz - p_SubCarrierSpacing/15KHz*p_OffsetToCarrier = 28 (PRB of 15 kHz SCS)

      # scs-SpecificCarrierList
      dl_offstToCarrier                      = 0;                            # (type:SCS_SpecificCarrier.offsetToCarrier     TTCN: p_OffsetToCarrier)
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
      dl_subcarrierSpacing                  = 1;                             # (Type:SubcarrierSpacing     TTCN: p_SubcarrierSpacing we should put "kHz30")
      dl_carrierBandwidth                   = 106; #51;                     # (type:SCS_SpecificCarrier.carrierBandwidth       TTCN: p_CarrierBandwidth)   we should also put p_DL_ChannelBandwidth = 40

      # initialDownlinkBWP
        # genericParameters
        initialDLBWPlocationAndBandwidth                = 28875; #13750;     # it works also for 20 MHZ bandwidth (51 PRB of 30 KHz)
        # subcarrierSpacing
        # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
        initialDLBWPsubcarrierSpacing                   = 1;

      # pdcch-ConfigCommon
      initialDLBWPcontrolResourceSetZero                = 11;               # (Type ControlResourceSetZero     TTCN: p_Coreset0_Index)
      initialDLBWPsearchSpaceZero                       = 0;

    # uplinkConfigCommon
      # frequencyInfoUL
      ul_frequencyBand                                  = 78;
      # scs-SpecificCarrierList
      ul_offstToCarrier                                 = 0;
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
      ul_subcarrierSpacing                             = 1;
      ul_carrierBandwidth                               = 106; # 51;
      pMax                                              = 20;

      # initialUplinkBWP
        # genericParameters
        initialULBWPlocationAndBandwidth                = 28875; #13750;
        # subcarrierSpacing
        # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
        initialULBWPsubcarrierSpacing                   = 1;

        # rach-ConfigCommon
          # rach-ConfigGeneric
          prach_ConfigurationIndex                      = 160;               # this is the most important parameter for PRACH: I made it alligned with TTCN conf
          # prach_msg1_FDM
          # 0 = one, 1=two, 2=four, 3=eight
          prach_msg1_FDM                                = 0;
          prach_msg1_FrequencyStart                     = 0;
          zeroCorrelationZoneConfig                     = 15;
          preambleReceivedTargetPower                   = -90;
          # preamblTransMax (0...10) = (3,4,5,6,7,8,10,20,50,100,200)
          preambleTransMax                              = 6;
          # powerRampingStep
          # 0=dB0,1=dB2,2=dB4,3=dB6
          powerRampingStep                              = 1;
          # ra_ReponseWindow
          # 1,2,4,8,10,20,40,80
          ra_ResponseWindow                             = 4;
          # ssb_perRACH_OccasionAndCB_PreamblesPerSSB_PR
          # 1=oneeighth,2=onefourth,3=half,4=one,5=two,6=four,7=eight,8=sixteen
          ssb_perRACH_OccasionAndCB_PreamblesPerSSB_PR  = 4;
          # oneHalf (0..15) 4,8,12,16,...60,64
          ssb_perRACH_OccasionAndCB_PreamblesPerSSB     = 0;   # You have the choice between only Preamble indexes 0, 1, 2, 3
          # ra_ContentionResolutionTimer
          # (0..7) 8,16,24,32,40,48,56,64
          ra_ContentionResolutionTimer                  = 7;
          rsrp_ThresholdSSB                             = 19;
          # prach-RootSequenceIndex_PR
          # 1 = 839, 2 = 139
          prach_RootSequenceIndex_PR                    = 2;
          prach_RootSequenceIndex                       = 1;
          # SCS for msg1, can only be 15 for 30 kHz < 6 GHz, takes precendence over the one derived from prach-ConfigIndex
          msg1_SubcarrierSpacing                        = 1,
          # restrictedSetConfig
          # 0=unrestricted, 1=restricted type A, 2=restricted type B
          restrictedSetConfig                           = 0,
          msg3_DeltaPreamble                            = 1;
          p0_NominalWithGrant                           =-90;
        # pucch-ConfigCommon
          # pucchGroupHopping
          # 0 = neither, 1= group hopping, 2=sequence hopping
          pucchGroupHopping                             = 0;
          hoppingId                                     = 40;
          p0_nominal                                    = -70;

      # dmrs_TypeA_position
      # 0 = pos2, 1 = pos3
      dmrs_TypeA_Position                               = 0;

      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
      subcarrierSpacing                                 = 1;                   # (Type SubcarrierSpacing     TTCN : p_SubcarrierSpacing)


    # ssb_PositionsInBurs_BitmapPR
      # 1=short, 2=medium, 3=long
      ssb_PositionsInBurst_PR       = 2;                                       # its important to dinf this parameter : manadatory
      ssb_PositionsInBurst_Bitmap   = 2;
      # ssb_periodicityServingCell
      # 0 = ms5, 1=ms10, 2=ms20, 3=ms40, 4=ms80, 5=ms160, 6=spare2, 7=spare1
      ssb_periodicityServingCell    = 2;

    #tdd-UL-DL-ConfigurationCommon
      # subcarrierSpacing
      # 0=kHz15, 1=kHz30, 2=kHz60, 3=kHz120
      referenceSubcarrierSpacing    = 1;
      # pattern1
      # dl_UL_TransmissionPeriodicity
      # 0=ms0p5, 1=ms0p625, 2=ms1, 3=ms1p25, 4=ms2, 5=ms2p5, 6=ms5, 7=ms10
      dl_UL_TransmissionPeriodicity = 6;
      nrofDownlinkSlots             = 7;
      nrofDownlinkSymbols           = 6;
      nrofUplinkSlots               = 2;
      nrofUplinkSymbols             = 4;

    ssPBCH_BlockPower               = -25;
  }
  );


  # ------- SCTP definitions
  SCTP :
  {
    # Number of streams to use in input/output
    SCTP_INSTREAMS  = 2;
    SCTP_OUTSTREAMS = 2;
  };


  ////////// AMF parameters:
  amf_ip_address = (
  {
    ipv4       = "192.168.70.132";
    ipv6       = "192:168:30::17";
    active     = "yes";
    preference = "ipv4";
  }
  );

  NETWORK_INTERFACES :
  {
        GNB_INTERFACE_NAME_FOR_NG_AMF            = "lo";
        GNB_IPV4_ADDRESS_FOR_NG_AMF              = "127.0.0.2";
        GNB_INTERFACE_NAME_FOR_NGU               = "lo";
        GNB_IPV4_ADDRESS_FOR_NGU                 = "127.0.0.2";
    #GNB_INTERFACE_NAME_FOR_NG_AMF            = "enp6s0";
    #GNB_IPV4_ADDRESS_FOR_NG_AMF              = "10.87.0.21";
    #GNB_INTERFACE_NAME_FOR_NGU               = "enp6s0";
    #GNB_IPV4_ADDRESS_FOR_NGU                 = "10.87.0.21";
    GNB_PORT_FOR_S1U                         = 2152; # Spec 2152
  }

}
);

# IP Address and port numbers for System Simulator
SSConfig = (
   {
   hostIp = "127.0.0.1"; #Host IP for System Simulator
   Sys_port = 7777; #Port Number for System Simulator Sys Port
   Sys_host =  "/tmp/eNBSys.pipe"; #Host for System Simulator SYS Port
   Srb_port = 7778; #Port Number for System Simulator Srb Port
   Srb_host =  "/tmp/eNBSrb.pipe"; #Host for System Simulator SRB Port
   Vng_port = 7779; #Port Number for System Simulator VNG Port
   Vng_host =  "/tmp/eNBVng.pipe"; #Host for System Simulator VNG Port
   Vtp_port = 7780; #Port Number for System Simulator VTP Port
   Vtp_host = "/tmp/eNBVT.pipe"; #Host for System Simulator VTP Port
   Drb_port = 7781; #Port Number for System Simulator DRB Port
   Drb_host =  "/tmp/eNBDrb.pipe"; #Host for System Simulator DRB Port
   SSMode = 2; #SSMode: 0 - eNB , 1- SYS_PORT test , 2- Harware setup/USRP
   }
);

MACRLCs = (
{
  num_cc                      = 1;
  tr_s_preference             = "local_L1";
  tr_n_preference             = "local_RRC";
  pusch_TargetSNRx10          = 300;
  pucch_TargetSNRx10          = 200;
  pusch_FailureThres          = 100;
  ulsch_max_frame_inactivity  = 10;
  ul_max_mcs                  = 28;
  #dl_harq_round_max = 1;
  #ul_harq_round_max = 1;
}
);

L1s = (
{
  num_cc = 1;
  tr_n_preference = "local_mac";
  prach_dtx_threshold = 120;
  pucch0_dtx_threshold = 80;
}
);

RUs = (
{
  local_rf       = "yes"
  nb_tx          = 1;
  nb_rx          = 1;
  att_tx         = 0;
  att_rx         = 0;
  bands          = [78];
  max_pdschReferenceSignalPower = -27;
  max_rxgain                    = 75;
  eNB_instances  = [0];
  ##beamforming 1x2 matrix: 1 layer x 2 antennas
  bf_weights = [0x00007fff, 0x0000];
  #clock_src = "internal";
  #sdr_addrs = "mgmt_addr=192.168.20.2,addr=192.168.20.2,clock_source=internal,time_source=internal"
}
);

THREAD_STRUCT = (
{
  #three config for level of parallelism "PARALLEL_SINGLE_THREAD", "PARALLEL_RU_L1_SPLIT", or "PARALLEL_RU_L1_TRX_SPLIT"
  parallel_config    = "PARALLEL_SINGLE_THREAD";
  #two option for worker "WORKER_DISABLE" or "WORKER_ENABLE"
  worker_config      = "WORKER_ENABLE";
}
);

rfsimulator :
{
  serveraddr = "server";
  serverport = "4043";
  options = (); #("saviq"); or/and "chanmod"
  modelname = "AWGN";
  IQfile = "/tmp/rfsimulator.iqs";
};

security = {
  # preferred ciphering algorithms
  # the first one of the list that an UE supports in chosen
  # valid values: nea0, nea1, nea2, nea3
  ciphering_algorithms = ( "nea0" );

  # preferred integrity algorithms
  # the first one of the list that an UE supports in chosen
  # valid values: nia0, nia1, nia2, nia3
  integrity_algorithms = ( "nia2", "nia0" );

  # setting 'drb_ciphering' to "no" disables ciphering for DRBs, no matter
  # what 'ciphering_algorithms' configures; same thing for 'drb_integrity'
  drb_ciphering = "yes";
  # drb_integrity = "no";
  drb_integrity = "no";
};

log_config :
{
  global_log_level                      ="info";
  # hw_log_level                          ="debug";
  # phy_log_level                         ="debug";
  # mac_log_level                         ="debug";
  # rlc_log_level                         ="info";
  # pdcp_log_level                        ="info";
  # rrc_log_level                         ="info";
  # ngap_log_level                        ="debug";
  # f1ap_log_level                        ="info";
};
