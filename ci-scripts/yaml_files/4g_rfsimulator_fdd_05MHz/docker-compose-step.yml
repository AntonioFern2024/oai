version: '3.8'

services:
    cassandra:
        image: cassandra:2.1
        container_name: rfsim4g-cassandra
        networks:
            private_net:
        environment:
            CASSANDRA_CLUSTER_NAME: "OAI HSS Cluster"
            CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
        healthcheck:
            test: /bin/bash -c "nodetool status"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    db_init:
        image: cassandra:2.1
        container_name: rfsim4g-db-init
        deploy:
            restart_policy:
                condition: on-failure
                max_attempts: 10
        networks:
            private_net:
        volumes:
            - ./oai_db.cql:/home/oai_db.cql
        entrypoint: /bin/bash -c "cqlsh --file /home/oai_db.cql cassandra && echo 'OK' && sleep infinity"
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe


    oai_hss:
        image: oaisoftwarealliance/oai-hss:latest
        container_name: rfsim4g-oai-hss
        hostname: hss
        depends_on: [cassandra]
        networks:
            private_net:
            public_net:
        environment:
            REALM: openairinterface.org
            HSS_FQDN: hss.openairinterface.org
            PREFIX: /openair-hss/etc
            cassandra_Server_IP: cassandra
            OP_KEY: 1006020f0a478bf6b699f15c062e42b3
            LTE_K: fec86ba6eb707ed08905757b1bb44b8f
            APN1: oai.ipv4
            APN2: internet
            FIRST_IMSI: 208960100000001
            NB_USERS: 10
        healthcheck:
            test: /bin/bash -c "pgrep oai_hss"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    redis:
        image: redis:6.0.5
        container_name: rfsim4g-redis
        hostname: redis_4g
        networks:
            public_net:
        volumes:
            - ./redis_extern.conf:/usr/local/etc/redis/redis.conf
        entrypoint: /bin/bash -c "redis-server /usr/local/etc/redis/redis.conf"
        healthcheck:
            test: /bin/bash -c "redis-cli -h redis_4g -p 6380 ping"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    magma_mme:
        image: oaisoftwarealliance/magma-mme:latest
        container_name: rfsim4g-magma-mme
        hostname: mme
        depends_on: [oai_hss, redis]
        networks:
            public_net:
        environment:
            TZ: Europe/Paris
            REALM: openairinterface.org
            PREFIX: /openair-mme/etc
            HSS_HOSTNAME: hss
            HSS_FQDN: hss.openairinterface.org
            HSS_REALM: openairinterface.org
            MME_FQDN: mme.openairinterface.org
            FEATURES: mme_oai
        volumes:
            - ./mme_fd.sprint.conf:/magma-mme/etc/mme_fd.conf.tmplt
            - ./mme.conf:/magma-mme/etc/mme.conf.tmplt
            - ./entrypoint.sh:/magma-mme/bin/entrypoint.sh
        entrypoint: /bin/bash -c "/magma-mme/bin/entrypoint.sh"
        healthcheck:
            test: /bin/bash -c "pgrep oai_mme"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    oai_spgwc:
        image: oaisoftwarealliance/oai-spgwc:latest
        container_name: rfsim4g-oai-spgwc
        hostname: spgwc
        networks:
            public_net:
        environment:
            TZ: Europe/Paris
            SGW_INTERFACE_NAME_FOR_S11: eth0
            PGW_INTERFACE_NAME_FOR_SX: eth0
            DEFAULT_DNS_IPV4_ADDRESS: 172.21.3.100
            DEFAULT_DNS_SEC_IPV4_ADDRESS: 8.8.4.4
            PUSH_PROTOCOL_OPTION: 'true'
            APN_NI_1: oai.ipv4
            APN_NI_2: oai.ipv4_2
            DEFAULT_APN_NI_1: oai.ipv4
            UE_IP_ADDRESS_POOL_1: '12.0.0.2 - 12.0.0.254'
            UE_IP_ADDRESS_POOL_2: '12.1.1.2 - 12.1.1.254'
            MCC: '208'
            MNC: '96'
            MNC03: '096'
            TAC: 1
            GW_ID: 1
            REALM: openairinterface.org
        healthcheck:
            test: /bin/bash -c "pgrep oai_spgwc"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    oai_spgwu:
        image: oaisoftwarealliance/oai-spgwu-tiny:latest
        container_name: rfsim4g-oai-spgwu-tiny
        hostname: spgwu
        depends_on: [oai_spgwc]
        networks:
            public_net:
        entrypoint: /bin/bash -c "/spgwuentry.sh"
        volumes:
            - ./spgwuentry.sh:/spgwuentry.sh
            - /dev/net/tun:/dev/net/tun
        cap_add:
            - NET_ADMIN
            - SYS_ADMIN
            - NET_RAW
        cap_drop:
            - ALL
        sysctls:
            - net.ipv4.conf.eth0.rp_filter=0
            - net.ipv4.conf.all.forwarding=1
            - net.ipv4.conf.all.send_redirects=0
            - net.ipv4.conf.default.send_redirects=0
            - net.ipv4.conf.all.accept_redirects=0
            - net.ipv4.conf.default.accept_redirects=0
        environment:
            TZ: Europe/Paris
            PID_DIRECTORY: /var/run
            INSTANCE: 1
            SGW_INTERFACE_NAME_FOR_S1U_S12_S4_UP: eth0
            PGW_INTERFACE_NAME_FOR_SGI: eth0
            SGW_INTERFACE_NAME_FOR_SX: eth0
            SPGWC0_HOST: spgwc
            NETWORK_UE_IP: '12.0.0.0/24'
            NETWORK_UE_NAT_OPTION: 'yes'
            MCC: '208'
            MNC: '96'
            MNC03: '096'
            TAC: 1
            GW_ID: 1
            REALM: openairinterface.org
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    trf_gen:
        image: oaisoftwarealliance/trf-gen-cn5g:focal
        container_name: rfsim4g-trf-gen
        hostname: trf-gen
        networks:
            public_net:
        environment:
            UPF_FQDN: 'spgwu'
            USE_FQDN: 'yes'
            UE_NETWORK: '12.0.0.0/24'
        cap_add:
            - NET_ADMIN
            - SYS_ADMIN
            - NET_RAW
        cap_drop:
            - ALL
        healthcheck:
            test: /bin/bash -c "ping -c 2 spgwu"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    oai_enb0:
        #image: oaisoftwarealliance/oai-enb:develop
        image: porcepix.sboai.cs.eurecom.fr/oai-enb:develop-883724b9
        #privileged: true
        hostname: enb0
        networks:
            public_net:
        environment:
            TZ: Europe/Paris
            USE_ADDITIONAL_OPTIONS: --rfsim --log_config.global_log_options level,nocolor,time
        cap_add:
            - ALL
        volumes:
            - ../../conf_files/enb.band7.25prb.rfsim.conf:/opt/oai-enb/etc/enb.conf.tmpt #adding it to template file instead
            - ./enb0entry.sh:/enb0entry.sh
            - /dev/cpu_dma_latency:/dev/cpu_dma_latency
            - /dev/net/tun:/dev/net/tun
        entrypoint: /bin/bash -c "/enb0entry.sh" ## added a custom entrypoint
        healthcheck:
            test: /bin/bash -c "pgrep lte-softmodem"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == carabe

    oai_ue0:
        #image: oaisoftwarealliance/oai-lte-ue:develop
        image: porcepix.sboai.cs.eurecom.fr/oai-lte-ue:develop-883724b9
        #privileged: true
        container_name: rfsim4g-oai-lte-ue0
        hostname: lte-ue0
        networks:
            public_net:
        expose:
            - "10000"
        environment:
            TZ: Europe/Paris
            USE_ADDITIONAL_OPTIONS: --rfsim -C 2680000000 -r 25 --ue-rxgain 140 --ue-txgain 120 --rfsimulator.serveraddr 192.168.61.17 --log_config.global_log_options level,nocolor,time
        cap_add:
            - ALL
        volumes:
            - ../../conf_files/lteue.usim-ci.conf:/opt/oai-lte-ue/etc/ue_usim.conf
            - /dev/cpu_dma_latency:/dev/cpu_dma_latency
            - /dev/net/tun:/dev/net/tun
        healthcheck:
            test: /bin/bash -c "pgrep lte-uesoftmodem"
            interval: 10s
            timeout: 5s
            retries: 5
        deploy:
            placement:
                constraints:
                    - node.labels.machine == cetautomatix

networks:
    private_net:
        name: rfsim4g-oai-private-net
        ipam:
            config:
                - subnet: 192.168.68.0/26
        driver_opts:
            com.docker.network.bridge.name: "rfsim4g-private"
    public_net:
        name: rfsim4g-oai-public-net
        ipam:
            config:
                - subnet: 192.168.61.0/26
        driver_opts:
            com.docker.network.bridge.name: "rfsim4g-public"
